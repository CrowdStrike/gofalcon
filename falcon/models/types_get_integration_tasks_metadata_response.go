// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TypesGetIntegrationTasksMetadataResponse types get integration tasks metadata response
//
// swagger:model types.GetIntegrationTasksMetadataResponse
type TypesGetIntegrationTasksMetadataResponse struct {

	// count
	Count int64 `json:"count,omitempty"`

	// ids
	Ids []int64 `json:"ids"`

	// integration task types
	IntegrationTaskTypes []int64 `json:"integration_task_types"`

	// names
	Names []string `json:"names"`
}

// Validate validates this types get integration tasks metadata response
func (m *TypesGetIntegrationTasksMetadataResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this types get integration tasks metadata response based on context it is used
func (m *TypesGetIntegrationTasksMetadataResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TypesGetIntegrationTasksMetadataResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TypesGetIntegrationTasksMetadataResponse) UnmarshalBinary(b []byte) error {
	var res TypesGetIntegrationTasksMetadataResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
