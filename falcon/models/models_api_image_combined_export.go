// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ModelsAPIImageCombinedExport models API image combined export
//
// swagger:model models.APIImageCombinedExport
type ModelsAPIImageCombinedExport struct {

	// base os
	// Required: true
	BaseOs *string `json:"base_os"`

	// cid
	// Required: true
	Cid *string `json:"cid"`

	// cve id
	// Required: true
	CveID *string `json:"cve_id"`

	// cvss score
	// Required: true
	CvssScore *string `json:"cvss_score"`

	// detection name
	// Required: true
	DetectionName *string `json:"detection_name"`

	// detection severity
	// Required: true
	DetectionSeverity *string `json:"detection_severity"`

	// detection type
	// Required: true
	DetectionType *string `json:"detection_type"`

	// first seen
	// Required: true
	FirstSeen *string `json:"first_seen"`

	// image digest
	// Required: true
	ImageDigest *string `json:"image_digest"`

	// image id
	// Required: true
	ImageID *string `json:"image_id"`

	// last seen
	// Required: true
	LastSeen *string `json:"last_seen"`

	// packages impacted
	// Required: true
	PackagesImpacted *int32 `json:"packages_impacted"`

	// registry
	// Required: true
	Registry *string `json:"registry"`

	// repository
	// Required: true
	Repository *string `json:"repository"`

	// started containers
	// Required: true
	StartedContainers *int64 `json:"started_containers"`

	// stopped containers
	// Required: true
	StoppedContainers *int64 `json:"stopped_containers"`

	// tag
	// Required: true
	Tag *string `json:"tag"`

	// vulnerability cps rating
	// Required: true
	VulnerabilityCpsRating *string `json:"vulnerability_cps_rating"`

	// vulnerability description
	// Required: true
	VulnerabilityDescription *string `json:"vulnerability_description"`

	// vulnerability severity
	// Required: true
	VulnerabilitySeverity *string `json:"vulnerability_severity"`
}

// Validate validates this models API image combined export
func (m *ModelsAPIImageCombinedExport) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBaseOs(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCveID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCvssScore(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDetectionName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDetectionSeverity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDetectionType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirstSeen(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateImageDigest(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateImageID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastSeen(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePackagesImpacted(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegistry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRepository(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartedContainers(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStoppedContainers(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTag(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVulnerabilityCpsRating(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVulnerabilityDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVulnerabilitySeverity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelsAPIImageCombinedExport) validateBaseOs(formats strfmt.Registry) error {

	if err := validate.Required("base_os", "body", m.BaseOs); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateCid(formats strfmt.Registry) error {

	if err := validate.Required("cid", "body", m.Cid); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateCveID(formats strfmt.Registry) error {

	if err := validate.Required("cve_id", "body", m.CveID); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateCvssScore(formats strfmt.Registry) error {

	if err := validate.Required("cvss_score", "body", m.CvssScore); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateDetectionName(formats strfmt.Registry) error {

	if err := validate.Required("detection_name", "body", m.DetectionName); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateDetectionSeverity(formats strfmt.Registry) error {

	if err := validate.Required("detection_severity", "body", m.DetectionSeverity); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateDetectionType(formats strfmt.Registry) error {

	if err := validate.Required("detection_type", "body", m.DetectionType); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateFirstSeen(formats strfmt.Registry) error {

	if err := validate.Required("first_seen", "body", m.FirstSeen); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateImageDigest(formats strfmt.Registry) error {

	if err := validate.Required("image_digest", "body", m.ImageDigest); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateImageID(formats strfmt.Registry) error {

	if err := validate.Required("image_id", "body", m.ImageID); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateLastSeen(formats strfmt.Registry) error {

	if err := validate.Required("last_seen", "body", m.LastSeen); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validatePackagesImpacted(formats strfmt.Registry) error {

	if err := validate.Required("packages_impacted", "body", m.PackagesImpacted); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateRegistry(formats strfmt.Registry) error {

	if err := validate.Required("registry", "body", m.Registry); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateRepository(formats strfmt.Registry) error {

	if err := validate.Required("repository", "body", m.Repository); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateStartedContainers(formats strfmt.Registry) error {

	if err := validate.Required("started_containers", "body", m.StartedContainers); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateStoppedContainers(formats strfmt.Registry) error {

	if err := validate.Required("stopped_containers", "body", m.StoppedContainers); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateTag(formats strfmt.Registry) error {

	if err := validate.Required("tag", "body", m.Tag); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateVulnerabilityCpsRating(formats strfmt.Registry) error {

	if err := validate.Required("vulnerability_cps_rating", "body", m.VulnerabilityCpsRating); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateVulnerabilityDescription(formats strfmt.Registry) error {

	if err := validate.Required("vulnerability_description", "body", m.VulnerabilityDescription); err != nil {
		return err
	}

	return nil
}

func (m *ModelsAPIImageCombinedExport) validateVulnerabilitySeverity(formats strfmt.Registry) error {

	if err := validate.Required("vulnerability_severity", "body", m.VulnerabilitySeverity); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this models API image combined export based on context it is used
func (m *ModelsAPIImageCombinedExport) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelsAPIImageCombinedExport) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsAPIImageCombinedExport) UnmarshalBinary(b []byte) error {
	var res ModelsAPIImageCombinedExport
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
