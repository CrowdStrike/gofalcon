// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FigapiIPV4 figapi IPv4
//
// swagger:model figapi.IPv4
type FigapiIPV4 struct {

	// Autonomous System Number
	ASN []int64 `json:"ASN"`

	// This can be one of: `AdversaryControlled`, `CDN`, `PublicDNSResolver`, `CaptivePortal`, `DNSSinkhole`, `DNSRootServer`, `HoneypotHoneypot`, etc.
	IPProperties []string `json:"IPProperties"`

	// The IPv4 address as a string
	IPV4 string `json:"IPv4,omitempty"`

	// Internet service provider
	ISP string `json:"ISP,omitempty"`
}

// Validate validates this figapi IPv4
func (m *FigapiIPV4) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this figapi IPv4 based on context it is used
func (m *FigapiIPV4) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FigapiIPV4) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FigapiIPV4) UnmarshalBinary(b []byte) error {
	var res FigapiIPV4
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
