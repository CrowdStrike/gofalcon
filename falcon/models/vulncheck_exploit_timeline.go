// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VulncheckExploitTimeline vulncheck exploit timeline
//
// swagger:model vulncheck.ExploitTimeline
type VulncheckExploitTimeline struct {

	// cisa kev date added
	CisaKevDateAdded string `json:"cisa_kev_date_added,omitempty"`

	// cisa kev date due
	CisaKevDateDue string `json:"cisa_kev_date_due,omitempty"`

	// first exploit poc or higher
	FirstExploitPocOrHigher string `json:"first_exploit_poc_or_higher,omitempty"`

	// first exploit published
	FirstExploitPublished string `json:"first_exploit_published,omitempty"`

	// first exploit weaponized or higher
	FirstExploitWeaponizedOrHigher string `json:"first_exploit_weaponized_or_higher,omitempty"`

	// first reported botnet
	FirstReportedBotnet string `json:"first_reported_botnet,omitempty"`

	// first reported ransomware
	FirstReportedRansomware string `json:"first_reported_ransomware,omitempty"`

	// first reported threat actor
	FirstReportedThreatActor string `json:"first_reported_threat_actor,omitempty"`

	// most recent exploit published
	MostRecentExploitPublished string `json:"most_recent_exploit_published,omitempty"`

	// most recent reported botnet
	MostRecentReportedBotnet string `json:"most_recent_reported_botnet,omitempty"`

	// most recent reported ransomware
	MostRecentReportedRansomware string `json:"most_recent_reported_ransomware,omitempty"`

	// most recent reported threat actor
	MostRecentReportedThreatActor string `json:"most_recent_reported_threat_actor,omitempty"`

	// nvd published
	NvdPublished string `json:"nvd_published,omitempty"`
}

// Validate validates this vulncheck exploit timeline
func (m *VulncheckExploitTimeline) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this vulncheck exploit timeline based on context it is used
func (m *VulncheckExploitTimeline) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VulncheckExploitTimeline) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VulncheckExploitTimeline) UnmarshalBinary(b []byte) error {
	var res VulncheckExploitTimeline
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
