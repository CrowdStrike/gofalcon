// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIMetadataV1 api metadata v1
//
// swagger:model api.MetadataV1
type APIMetadataV1 struct {

	// av hits
	AvHits int64 `json:"av_hits,omitempty"`

	// company name
	CompanyName string `json:"company_name,omitempty"`

	// file description
	FileDescription string `json:"file_description,omitempty"`

	// file version
	FileVersion string `json:"file_version,omitempty"`

	// filename
	Filename string `json:"filename,omitempty"`

	// original filename
	OriginalFilename string `json:"original_filename,omitempty"`

	// product name
	ProductName string `json:"product_name,omitempty"`

	// product version
	ProductVersion string `json:"product_version,omitempty"`

	// signed
	Signed bool `json:"signed,omitempty"`
}

// Validate validates this api metadata v1
func (m *APIMetadataV1) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this api metadata v1 based on context it is used
func (m *APIMetadataV1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APIMetadataV1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIMetadataV1) UnmarshalBinary(b []byte) error {
	var res APIMetadataV1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
