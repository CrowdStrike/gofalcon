// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VulncheckExploitRecord vulncheck exploit record
//
// swagger:model vulncheck.ExploitRecord
type VulncheckExploitRecord struct {

	// cve
	Cve string `json:"cve,omitempty"`

	// date added
	DateAdded string `json:"date_added,omitempty"`

	// exploit availability
	ExploitAvailability string `json:"exploit_availability,omitempty"`

	// exploit maturity
	ExploitMaturity string `json:"exploit_maturity,omitempty"`

	// exploit type
	ExploitType string `json:"exploit_type,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// refsource
	Refsource string `json:"refsource,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this vulncheck exploit record
func (m *VulncheckExploitRecord) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this vulncheck exploit record based on context it is used
func (m *VulncheckExploitRecord) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VulncheckExploitRecord) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VulncheckExploitRecord) UnmarshalBinary(b []byte) error {
	var res VulncheckExploitRecord
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
