// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ModelsDeliverySettings models delivery settings
//
// swagger:model models.DeliverySettings
type ModelsDeliverySettings struct {

	// api created by
	APICreatedBy string `json:"api_created_by,omitempty"`

	// api updated at
	// Format: date-time
	APIUpdatedAt strfmt.DateTime `json:"api_updated_at,omitempty"`

	// api updated by
	APIUpdatedBy string `json:"api_updated_by,omitempty"`

	// cid
	// Required: true
	Cid *string `json:"cid"`

	// created at
	// Required: true
	// Format: date-time
	CreatedAt *strfmt.DateTime `json:"created_at"`

	// created by
	// Required: true
	CreatedBy *string `json:"created_by"`

	// deleted at
	// Format: date-time
	DeletedAt strfmt.DateTime `json:"deleted_at,omitempty"`

	// deleted by
	DeletedBy string `json:"deleted_by,omitempty"`

	// delivery cadence
	// Required: true
	DeliveryCadence *string `json:"delivery_cadence"`

	// delivery type
	// Required: true
	DeliveryType *string `json:"delivery_type"`

	// updated at
	// Format: date-time
	UpdatedAt strfmt.DateTime `json:"updated_at,omitempty"`

	// updated by
	UpdatedBy string `json:"updated_by,omitempty"`

	// uuid
	// Required: true
	UUID *string `json:"uuid"`
}

// Validate validates this models delivery settings
func (m *ModelsDeliverySettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAPIUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeletedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeliveryCadence(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeliveryType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelsDeliverySettings) validateAPIUpdatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.APIUpdatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("api_updated_at", "body", "date-time", m.APIUpdatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeliverySettings) validateCid(formats strfmt.Registry) error {

	if err := validate.Required("cid", "body", m.Cid); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeliverySettings) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", m.CreatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("created_at", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeliverySettings) validateCreatedBy(formats strfmt.Registry) error {

	if err := validate.Required("created_by", "body", m.CreatedBy); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeliverySettings) validateDeletedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.DeletedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("deleted_at", "body", "date-time", m.DeletedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeliverySettings) validateDeliveryCadence(formats strfmt.Registry) error {

	if err := validate.Required("delivery_cadence", "body", m.DeliveryCadence); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeliverySettings) validateDeliveryType(formats strfmt.Registry) error {

	if err := validate.Required("delivery_type", "body", m.DeliveryType); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeliverySettings) validateUpdatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("updated_at", "body", "date-time", m.UpdatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeliverySettings) validateUUID(formats strfmt.Registry) error {

	if err := validate.Required("uuid", "body", m.UUID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this models delivery settings based on context it is used
func (m *ModelsDeliverySettings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelsDeliverySettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsDeliverySettings) UnmarshalBinary(b []byte) error {
	var res ModelsDeliverySettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
