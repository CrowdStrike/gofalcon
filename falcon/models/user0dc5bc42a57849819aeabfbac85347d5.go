// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// User0dc5bc42a57849819aeabfbac85347d5 user 0dc5bc42a57849819aeabfbac85347d5
//
// swagger:model User_0dc5bc42a57849819aeabfbac85347d5
type User0dc5bc42a57849819aeabfbac85347d5 struct {

	// Account id
	// Required: true
	AccountID *string `json:"account_id"`

	// Company
	// Required: true
	// Min Length: 1
	Company *string `json:"company"`

	// Country
	// Required: true
	// Min Length: 1
	Country *string `json:"country"`

	// Department
	// Required: true
	// Min Length: 1
	Department *string `json:"department"`

	// Domain
	// Required: true
	// Min Length: 1
	Domain *string `json:"domain"`

	// Email
	// Required: true
	// Min Length: 1
	Email *string `json:"email"`

	// Enabled
	// Required: true
	Enabled *bool `json:"enabled"`

	// exposures
	// Required: true
	Exposures []*Exposure6b10dfea0f00478fb96726fb4d77297f `json:"exposures"`

	// Exposures total
	// Required: true
	ExposuresTotal *int64 `json:"exposures_total"`

	// Full name
	// Required: true
	// Min Length: 1
	FullName *string `json:"full_name"`

	// integrations
	// Required: true
	Integrations []*IntegrationE727abc9db7947e9995613c487d39859 `json:"integrations"`

	// Integrations total
	// Required: true
	IntegrationsTotal *int64 `json:"integrations_total"`

	// login names
	// Required: true
	LoginNames []string `json:"login_names"`

	// Roles
	// Required: true
	Roles *int64 `json:"roles"`

	// Title
	// Required: true
	// Min Length: 1
	Title *string `json:"title"`

	// User item identity
	// Required: true
	// Min Length: 1
	UserItemIdentity *string `json:"user_item_identity"`
}

// Validate validates this user 0dc5bc42a57849819aeabfbac85347d5
func (m *User0dc5bc42a57849819aeabfbac85347d5) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDepartment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDomain(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExposures(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExposuresTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFullName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIntegrations(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIntegrationsTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoginNames(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoles(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserItemIdentity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateAccountID(formats strfmt.Registry) error {

	if err := validate.Required("account_id", "body", m.AccountID); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateCompany(formats strfmt.Registry) error {

	if err := validate.Required("company", "body", m.Company); err != nil {
		return err
	}

	if err := validate.MinLength("company", "body", *m.Company, 1); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateCountry(formats strfmt.Registry) error {

	if err := validate.Required("country", "body", m.Country); err != nil {
		return err
	}

	if err := validate.MinLength("country", "body", *m.Country, 1); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateDepartment(formats strfmt.Registry) error {

	if err := validate.Required("department", "body", m.Department); err != nil {
		return err
	}

	if err := validate.MinLength("department", "body", *m.Department, 1); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateDomain(formats strfmt.Registry) error {

	if err := validate.Required("domain", "body", m.Domain); err != nil {
		return err
	}

	if err := validate.MinLength("domain", "body", *m.Domain, 1); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("email", "body", m.Email); err != nil {
		return err
	}

	if err := validate.MinLength("email", "body", *m.Email, 1); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateEnabled(formats strfmt.Registry) error {

	if err := validate.Required("enabled", "body", m.Enabled); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateExposures(formats strfmt.Registry) error {

	if err := validate.Required("exposures", "body", m.Exposures); err != nil {
		return err
	}

	for i := 0; i < len(m.Exposures); i++ {
		if swag.IsZero(m.Exposures[i]) { // not required
			continue
		}

		if m.Exposures[i] != nil {
			if err := m.Exposures[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("exposures" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("exposures" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateExposuresTotal(formats strfmt.Registry) error {

	if err := validate.Required("exposures_total", "body", m.ExposuresTotal); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateFullName(formats strfmt.Registry) error {

	if err := validate.Required("full_name", "body", m.FullName); err != nil {
		return err
	}

	if err := validate.MinLength("full_name", "body", *m.FullName, 1); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateIntegrations(formats strfmt.Registry) error {

	if err := validate.Required("integrations", "body", m.Integrations); err != nil {
		return err
	}

	for i := 0; i < len(m.Integrations); i++ {
		if swag.IsZero(m.Integrations[i]) { // not required
			continue
		}

		if m.Integrations[i] != nil {
			if err := m.Integrations[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("integrations" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("integrations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateIntegrationsTotal(formats strfmt.Registry) error {

	if err := validate.Required("integrations_total", "body", m.IntegrationsTotal); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateLoginNames(formats strfmt.Registry) error {

	if err := validate.Required("login_names", "body", m.LoginNames); err != nil {
		return err
	}

	for i := 0; i < len(m.LoginNames); i++ {

		if err := validate.MinLength("login_names"+"."+strconv.Itoa(i), "body", m.LoginNames[i], 1); err != nil {
			return err
		}

	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateRoles(formats strfmt.Registry) error {

	if err := validate.Required("roles", "body", m.Roles); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("title", "body", m.Title); err != nil {
		return err
	}

	if err := validate.MinLength("title", "body", *m.Title, 1); err != nil {
		return err
	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) validateUserItemIdentity(formats strfmt.Registry) error {

	if err := validate.Required("user_item_identity", "body", m.UserItemIdentity); err != nil {
		return err
	}

	if err := validate.MinLength("user_item_identity", "body", *m.UserItemIdentity, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this user 0dc5bc42a57849819aeabfbac85347d5 based on the context it is used
func (m *User0dc5bc42a57849819aeabfbac85347d5) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateExposures(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateIntegrations(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) contextValidateExposures(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Exposures); i++ {

		if m.Exposures[i] != nil {

			if swag.IsZero(m.Exposures[i]) { // not required
				return nil
			}

			if err := m.Exposures[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("exposures" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("exposures" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *User0dc5bc42a57849819aeabfbac85347d5) contextValidateIntegrations(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Integrations); i++ {

		if m.Integrations[i] != nil {

			if swag.IsZero(m.Integrations[i]) { // not required
				return nil
			}

			if err := m.Integrations[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("integrations" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("integrations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *User0dc5bc42a57849819aeabfbac85347d5) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *User0dc5bc42a57849819aeabfbac85347d5) UnmarshalBinary(b []byte) error {
	var res User0dc5bc42a57849819aeabfbac85347d5
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
