// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DetectsMitreAttackMapping detects mitre attack mapping
//
// swagger:model detects.MitreAttackMapping
type DetectsMitreAttackMapping struct {

	// Pattern ID for the pattern seen in the Alert
	PatternID int64 `json:"pattern_id,omitempty"`

	// Tactic and Technique are references to MITRE ATT&CK, which is a public framework for tracking and modeling adversary tools techniques and procedures
	Tactic string `json:"tactic,omitempty"`

	// Unique ID for the tactic seen in the Alert
	TacticID string `json:"tactic_id,omitempty"`

	// Tactic and Technique are references to MITRE ATT&CK, which is a public framework for tracking and modeling adversary tools techniques and procedures
	Technique string `json:"technique,omitempty"`

	// Unique ID for the technique seen in the Alert
	TechniqueID string `json:"technique_id,omitempty"`
}

// Validate validates this detects mitre attack mapping
func (m *DetectsMitreAttackMapping) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this detects mitre attack mapping based on context it is used
func (m *DetectsMitreAttackMapping) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DetectsMitreAttackMapping) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DetectsMitreAttackMapping) UnmarshalBinary(b []byte) error {
	var res DetectsMitreAttackMapping
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
