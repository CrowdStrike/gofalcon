// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureClientIDResource azure client ID resource
//
// swagger:model azure.ClientIDResource
type AzureClientIDResource struct {

	// client id
	// Required: true
	ClientID *string `json:"client_id"`

	// created at
	// Required: true
	// Format: date-time
	CreatedAt *strfmt.DateTime `json:"created_at"`

	// expires on
	// Required: true
	// Format: date-time
	ExpiresOn *strfmt.DateTime `json:"expires_on"`

	// permissions
	// Required: true
	Permissions []string `json:"permissions"`

	// tenant id
	// Required: true
	TenantID *string `json:"tenant_id"`
}

// Validate validates this azure client ID resource
func (m *AzureClientIDResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExpiresOn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePermissions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTenantID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureClientIDResource) validateClientID(formats strfmt.Registry) error {

	if err := validate.Required("client_id", "body", m.ClientID); err != nil {
		return err
	}

	return nil
}

func (m *AzureClientIDResource) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", m.CreatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("created_at", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AzureClientIDResource) validateExpiresOn(formats strfmt.Registry) error {

	if err := validate.Required("expires_on", "body", m.ExpiresOn); err != nil {
		return err
	}

	if err := validate.FormatOf("expires_on", "body", "date-time", m.ExpiresOn.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AzureClientIDResource) validatePermissions(formats strfmt.Registry) error {

	if err := validate.Required("permissions", "body", m.Permissions); err != nil {
		return err
	}

	return nil
}

func (m *AzureClientIDResource) validateTenantID(formats strfmt.Registry) error {

	if err := validate.Required("tenant_id", "body", m.TenantID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this azure client ID resource based on context it is used
func (m *AzureClientIDResource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureClientIDResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureClientIDResource) UnmarshalBinary(b []byte) error {
	var res AzureClientIDResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
