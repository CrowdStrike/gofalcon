// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RegistrationBaseSearch registration base search
//
// swagger:model registration.BaseSearch
type RegistrationBaseSearch struct {

	// fql
	// Required: true
	Fql *string `json:"fql"`

	// sort
	// Required: true
	Sort *string `json:"sort"`
}

// Validate validates this registration base search
func (m *RegistrationBaseSearch) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFql(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSort(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RegistrationBaseSearch) validateFql(formats strfmt.Registry) error {

	if err := validate.Required("fql", "body", m.Fql); err != nil {
		return err
	}

	return nil
}

func (m *RegistrationBaseSearch) validateSort(formats strfmt.Registry) error {

	if err := validate.Required("sort", "body", m.Sort); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this registration base search based on context it is used
func (m *RegistrationBaseSearch) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RegistrationBaseSearch) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RegistrationBaseSearch) UnmarshalBinary(b []byte) error {
	var res RegistrationBaseSearch
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
