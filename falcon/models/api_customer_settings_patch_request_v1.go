// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APICustomerSettingsPatchRequestV1 To require tokens for all installations in your CID, set `tokens_required` to `true`. To disable token requirement, set `tokens_required` to `false`To modify the maximum number of active tokens a customer may have, provide a positive interger value on `max_active_tokens` field
//
// swagger:model api.customerSettingsPatchRequestV1
type APICustomerSettingsPatchRequestV1 struct {

	// Set to a positive interger value to set limit of active tokens a customer may have at a time.
	MaxActiveTokens int64 `json:"max_active_tokens,omitempty"`

	// Set to true to enable installation tokens for the customer.
	TokensRequired bool `json:"tokens_required,omitempty"`
}

// Validate validates this api customer settings patch request v1
func (m *APICustomerSettingsPatchRequestV1) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this api customer settings patch request v1 based on context it is used
func (m *APICustomerSettingsPatchRequestV1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APICustomerSettingsPatchRequestV1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APICustomerSettingsPatchRequestV1) UnmarshalBinary(b []byte) error {
	var res APICustomerSettingsPatchRequestV1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
