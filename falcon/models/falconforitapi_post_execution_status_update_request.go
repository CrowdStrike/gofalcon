// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FalconforitapiPostExecutionStatusUpdateRequest falconforitapi post execution status update request
//
// swagger:model falconforitapi.PostExecutionStatusUpdateRequest
type FalconforitapiPostExecutionStatusUpdateRequest struct {

	// execution id
	// Required: true
	ExecutionID *string `json:"execution_id"`

	// host id
	// Required: true
	HostID *string `json:"host_id"`
}

// Validate validates this falconforitapi post execution status update request
func (m *FalconforitapiPostExecutionStatusUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExecutionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHostID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FalconforitapiPostExecutionStatusUpdateRequest) validateExecutionID(formats strfmt.Registry) error {

	if err := validate.Required("execution_id", "body", m.ExecutionID); err != nil {
		return err
	}

	return nil
}

func (m *FalconforitapiPostExecutionStatusUpdateRequest) validateHostID(formats strfmt.Registry) error {

	if err := validate.Required("host_id", "body", m.HostID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this falconforitapi post execution status update request based on context it is used
func (m *FalconforitapiPostExecutionStatusUpdateRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FalconforitapiPostExecutionStatusUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FalconforitapiPostExecutionStatusUpdateRequest) UnmarshalBinary(b []byte) error {
	var res FalconforitapiPostExecutionStatusUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
