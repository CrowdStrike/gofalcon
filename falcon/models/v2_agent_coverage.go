// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V2AgentCoverage v2 agent coverage
//
// swagger:model v2.AgentCoverage
type V2AgentCoverage struct {

	// iar coverage
	IarCoverage bool `json:"iar_coverage,omitempty"`

	// iar last seen
	IarLastSeen string `json:"iar_last_seen,omitempty"`

	// kac aid
	KacAid string `json:"kac_aid,omitempty"`

	// kac config build
	KacConfigBuild string `json:"kac_config_build,omitempty"`

	// kac coverage
	KacCoverage bool `json:"kac_coverage,omitempty"`

	// kac last seen
	KacLastSeen string `json:"kac_last_seen,omitempty"`

	// kpa coverage
	KpaCoverage bool `json:"kpa_coverage,omitempty"`

	// kpa last seen
	KpaLastSeen string `json:"kpa_last_seen,omitempty"`

	// linux sensor aid
	LinuxSensorAid string `json:"linux_sensor_aid,omitempty"`

	// linux sensor config build
	LinuxSensorConfigBuild string `json:"linux_sensor_config_build,omitempty"`

	// linux sensor coverage
	LinuxSensorCoverage bool `json:"linux_sensor_coverage,omitempty"`

	// linux sensor last seen
	LinuxSensorLastSeen string `json:"linux_sensor_last_seen,omitempty"`

	// lumos sensor aid
	LumosSensorAid string `json:"lumos_sensor_aid,omitempty"`

	// lumos sensor config build
	LumosSensorConfigBuild string `json:"lumos_sensor_config_build,omitempty"`

	// lumos sensor coverage
	LumosSensorCoverage bool `json:"lumos_sensor_coverage,omitempty"`

	// lumos sensor last seen
	LumosSensorLastSeen string `json:"lumos_sensor_last_seen,omitempty"`

	// snapshot coverage
	SnapshotCoverage bool `json:"snapshot_coverage,omitempty"`

	// snapshot last seen
	SnapshotLastSeen string `json:"snapshot_last_seen,omitempty"`
}

// Validate validates this v2 agent coverage
func (m *V2AgentCoverage) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v2 agent coverage based on context it is used
func (m *V2AgentCoverage) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V2AgentCoverage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2AgentCoverage) UnmarshalBinary(b []byte) error {
	var res V2AgentCoverage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
