// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Exposure6b10dfea0f00478fb96726fb4d77297f exposure 6b10dfea0f00478fb96726fb4d77297f
//
// swagger:model Exposure_6b10dfea0f00478fb96726fb4d77297f
type Exposure6b10dfea0f00478fb96726fb4d77297f struct {

	// Base check id
	// Required: true
	BaseCheckID *string `json:"base_check_id"`

	// Id
	// Required: true
	ID *string `json:"id"`

	// Impact
	// Required: true
	// Min Length: 1
	Impact *string `json:"impact"`

	// integration
	// Required: true
	Integration *IntegrationBfcf71ab00b6461ea72606de141d7027 `json:"integration"`
}

// Validate validates this exposure 6b10dfea0f00478fb96726fb4d77297f
func (m *Exposure6b10dfea0f00478fb96726fb4d77297f) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBaseCheckID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateImpact(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIntegration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Exposure6b10dfea0f00478fb96726fb4d77297f) validateBaseCheckID(formats strfmt.Registry) error {

	if err := validate.Required("base_check_id", "body", m.BaseCheckID); err != nil {
		return err
	}

	return nil
}

func (m *Exposure6b10dfea0f00478fb96726fb4d77297f) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *Exposure6b10dfea0f00478fb96726fb4d77297f) validateImpact(formats strfmt.Registry) error {

	if err := validate.Required("impact", "body", m.Impact); err != nil {
		return err
	}

	if err := validate.MinLength("impact", "body", *m.Impact, 1); err != nil {
		return err
	}

	return nil
}

func (m *Exposure6b10dfea0f00478fb96726fb4d77297f) validateIntegration(formats strfmt.Registry) error {

	if err := validate.Required("integration", "body", m.Integration); err != nil {
		return err
	}

	if m.Integration != nil {
		if err := m.Integration.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("integration")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("integration")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this exposure 6b10dfea0f00478fb96726fb4d77297f based on the context it is used
func (m *Exposure6b10dfea0f00478fb96726fb4d77297f) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateIntegration(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Exposure6b10dfea0f00478fb96726fb4d77297f) contextValidateIntegration(ctx context.Context, formats strfmt.Registry) error {

	if m.Integration != nil {

		if err := m.Integration.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("integration")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("integration")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Exposure6b10dfea0f00478fb96726fb4d77297f) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Exposure6b10dfea0f00478fb96726fb4d77297f) UnmarshalBinary(b []byte) error {
	var res Exposure6b10dfea0f00478fb96726fb4d77297f
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
