// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ItautomationRowsParserConfig itautomation rows parser config
//
// swagger:model itautomation.RowsParserConfig
type ItautomationRowsParserConfig struct {

	// Delimiter must be 1-4 characters long and can contain alphanumeric characters (a-z, A-Z, 0-9), actual carriage return ('\r') and actual newline ('\n') characters (e.g., '\n', '\r', 'abc\n', '\r\n', '\r\n\r\n').
	// Required: true
	Delimiter *string `json:"delimiter"`
}

// Validate validates this itautomation rows parser config
func (m *ItautomationRowsParserConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDelimiter(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ItautomationRowsParserConfig) validateDelimiter(formats strfmt.Registry) error {

	if err := validate.Required("delimiter", "body", m.Delimiter); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this itautomation rows parser config based on context it is used
func (m *ItautomationRowsParserConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ItautomationRowsParserConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ItautomationRowsParserConfig) UnmarshalBinary(b []byte) error {
	var res ItautomationRowsParserConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
