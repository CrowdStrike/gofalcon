// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ModelsDeploymentResource models deployment resource
//
// swagger:model models.DeploymentResource
type ModelsDeploymentResource struct {

	// account id
	// Required: true
	AccountID *string `json:"account_id"`

	// asset identifier
	// Required: true
	AssetIdentifier *string `json:"asset_identifier"`

	// cloud provider
	// Required: true
	CloudProvider *string `json:"cloud_provider"`

	// region
	// Required: true
	Region *string `json:"region"`
}

// Validate validates this models deployment resource
func (m *ModelsDeploymentResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAssetIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCloudProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelsDeploymentResource) validateAccountID(formats strfmt.Registry) error {

	if err := validate.Required("account_id", "body", m.AccountID); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeploymentResource) validateAssetIdentifier(formats strfmt.Registry) error {

	if err := validate.Required("asset_identifier", "body", m.AssetIdentifier); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeploymentResource) validateCloudProvider(formats strfmt.Registry) error {

	if err := validate.Required("cloud_provider", "body", m.CloudProvider); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeploymentResource) validateRegion(formats strfmt.Registry) error {

	if err := validate.Required("region", "body", m.Region); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this models deployment resource based on context it is used
func (m *ModelsDeploymentResource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelsDeploymentResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsDeploymentResource) UnmarshalBinary(b []byte) error {
	var res ModelsDeploymentResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
