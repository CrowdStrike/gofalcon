// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FigapiIPV6 figapi IPv6
//
// swagger:model figapi.IPv6
type FigapiIPV6 struct {

	// An array of Autonomous System Numbers (ASNs)
	ASN []int64 `json:"ASN"`

	// This can be one of: `AdversaryControlled`, `CDN`, `PublicDNSResolver`, `CaptivePortal`, `DNSSinkhole`, `DNSRootServer`, `HoneypotHoneypot`, etc.
	IPProperties []string `json:"IPProperties"`

	// The IPv6 address as a string
	IPV6 string `json:"IPv6,omitempty"`

	// Internet service provider
	ISP string `json:"ISP,omitempty"`
}

// Validate validates this figapi IPv6
func (m *FigapiIPV6) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this figapi IPv6 based on context it is used
func (m *FigapiIPV6) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FigapiIPV6) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FigapiIPV6) UnmarshalBinary(b []byte) error {
	var res FigapiIPV6
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
