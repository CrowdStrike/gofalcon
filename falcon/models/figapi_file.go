// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FigapiFile figapi file
//
// swagger:model figapi.File
type FigapiFile struct {

	// This can be one of: `C2Config`, `Phishing`, `ProxyScript`, `RansomNote`, `Certificate`, `JA3`, `PEResource`, `PEOverlay`, `PESection`
	FileProperties []string `json:"FileProperties"`

	// Size of the file
	FileSize int64 `json:"FileSize,omitempty"`

	// Type of the file
	FileType []string `json:"FileType"`

	// MD5 hash of the file
	MD5 string `json:"MD5,omitempty"`

	// libmagic (file command) output on the sample
	MagicFileType string `json:"MagicFileType,omitempty"`

	// SHA1 hash of the file
	SHA1 string `json:"SHA1,omitempty"`

	// SHA256 hash of the file
	SHA256 string `json:"SHA256,omitempty"`
}

// Validate validates this figapi file
func (m *FigapiFile) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this figapi file based on context it is used
func (m *FigapiFile) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FigapiFile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FigapiFile) UnmarshalBinary(b []byte) error {
	var res FigapiFile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
