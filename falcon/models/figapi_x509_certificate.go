// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FigapiX509Certificate figapi x509 certificate
//
// swagger:model figapi.X509Certificate
type FigapiX509Certificate struct {

	// certificate hash
	CertificateHash string `json:"CertificateHash,omitempty"`

	// common name
	CommonName string `json:"CommonName,omitempty"`

	// email address
	EmailAddress string `json:"EmailAddress,omitempty"`

	// issuer common name
	IssuerCommonName string `json:"IssuerCommonName,omitempty"`

	// organization
	Organization string `json:"Organization,omitempty"`

	// public key type
	PublicKeyType string `json:"PublicKeyType,omitempty"`

	// signature algorithm
	SignatureAlgorithm string `json:"SignatureAlgorithm,omitempty"`

	// subject
	Subject string `json:"Subject,omitempty"`
}

// Validate validates this figapi x509 certificate
func (m *FigapiX509Certificate) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this figapi x509 certificate based on context it is used
func (m *FigapiX509Certificate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FigapiX509Certificate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FigapiX509Certificate) UnmarshalBinary(b []byte) error {
	var res FigapiX509Certificate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
