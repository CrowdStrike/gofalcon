// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SdkAnalysisResultsFileRecordVM sdk analysis results file record VM
//
// swagger:model sdk.AnalysisResultsFileRecordVM
type SdkAnalysisResultsFileRecordVM struct {

	// filename
	// Required: true
	Filename *string `json:"filename"`

	// md5
	// Required: true
	Md5 *string `json:"md5"`

	// path
	// Required: true
	Path *string `json:"path"`

	// sha256
	// Required: true
	Sha256 *string `json:"sha256"`
}

// Validate validates this sdk analysis results file record VM
func (m *SdkAnalysisResultsFileRecordVM) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFilename(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMd5(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePath(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSha256(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SdkAnalysisResultsFileRecordVM) validateFilename(formats strfmt.Registry) error {

	if err := validate.Required("filename", "body", m.Filename); err != nil {
		return err
	}

	return nil
}

func (m *SdkAnalysisResultsFileRecordVM) validateMd5(formats strfmt.Registry) error {

	if err := validate.Required("md5", "body", m.Md5); err != nil {
		return err
	}

	return nil
}

func (m *SdkAnalysisResultsFileRecordVM) validatePath(formats strfmt.Registry) error {

	if err := validate.Required("path", "body", m.Path); err != nil {
		return err
	}

	return nil
}

func (m *SdkAnalysisResultsFileRecordVM) validateSha256(formats strfmt.Registry) error {

	if err := validate.Required("sha256", "body", m.Sha256); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this sdk analysis results file record VM based on context it is used
func (m *SdkAnalysisResultsFileRecordVM) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SdkAnalysisResultsFileRecordVM) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SdkAnalysisResultsFileRecordVM) UnmarshalBinary(b []byte) error {
	var res SdkAnalysisResultsFileRecordVM
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
