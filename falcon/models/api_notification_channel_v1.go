// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APINotificationChannelV1 api notification channel v1
//
// swagger:model api.NotificationChannelV1
type APINotificationChannelV1 struct {

	// config id
	ConfigID string `json:"config_id,omitempty"`

	// config name
	ConfigName string `json:"config_name,omitempty"`

	// recipients
	Recipients []string `json:"recipients"`

	// severity
	Severity string `json:"severity,omitempty"`

	// type
	// Required: true
	// Enum: [email slack ms_teams pagerduty]
	Type *string `json:"type"`
}

// Validate validates this api notification channel v1
func (m *APINotificationChannelV1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var apiNotificationChannelV1TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["email","slack","ms_teams","pagerduty"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiNotificationChannelV1TypeTypePropEnum = append(apiNotificationChannelV1TypeTypePropEnum, v)
	}
}

const (

	// APINotificationChannelV1TypeEmail captures enum value "email"
	APINotificationChannelV1TypeEmail string = "email"

	// APINotificationChannelV1TypeSlack captures enum value "slack"
	APINotificationChannelV1TypeSlack string = "slack"

	// APINotificationChannelV1TypeMsTeams captures enum value "ms_teams"
	APINotificationChannelV1TypeMsTeams string = "ms_teams"

	// APINotificationChannelV1TypePagerduty captures enum value "pagerduty"
	APINotificationChannelV1TypePagerduty string = "pagerduty"
)

// prop value enum
func (m *APINotificationChannelV1) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, apiNotificationChannelV1TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *APINotificationChannelV1) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this api notification channel v1 based on context it is used
func (m *APINotificationChannelV1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APINotificationChannelV1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APINotificationChannelV1) UnmarshalBinary(b []byte) error {
	var res APINotificationChannelV1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
