// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VulnerabilitymetadataapiQualysVulnMetadata vulnerabilitymetadataapi qualys vuln metadata
//
// swagger:model vulnerabilitymetadataapi.QualysVulnMetadata
type VulnerabilitymetadataapiQualysVulnMetadata struct {

	// category
	// Required: true
	Category *string `json:"category"`

	// qid
	// Required: true
	Qid *string `json:"qid"`

	// severity
	// Required: true
	Severity *string `json:"severity"`

	// type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this vulnerabilitymetadataapi qualys vuln metadata
func (m *VulnerabilitymetadataapiQualysVulnMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSeverity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VulnerabilitymetadataapiQualysVulnMetadata) validateCategory(formats strfmt.Registry) error {

	if err := validate.Required("category", "body", m.Category); err != nil {
		return err
	}

	return nil
}

func (m *VulnerabilitymetadataapiQualysVulnMetadata) validateQid(formats strfmt.Registry) error {

	if err := validate.Required("qid", "body", m.Qid); err != nil {
		return err
	}

	return nil
}

func (m *VulnerabilitymetadataapiQualysVulnMetadata) validateSeverity(formats strfmt.Registry) error {

	if err := validate.Required("severity", "body", m.Severity); err != nil {
		return err
	}

	return nil
}

func (m *VulnerabilitymetadataapiQualysVulnMetadata) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this vulnerabilitymetadataapi qualys vuln metadata based on context it is used
func (m *VulnerabilitymetadataapiQualysVulnMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VulnerabilitymetadataapiQualysVulnMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VulnerabilitymetadataapiQualysVulnMetadata) UnmarshalBinary(b []byte) error {
	var res VulnerabilitymetadataapiQualysVulnMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
