// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ItautomationUpdatePoliciesHostGroupsRequest itautomation update policies host groups request
//
// swagger:model itautomation.UpdatePoliciesHostGroupsRequest
type ItautomationUpdatePoliciesHostGroupsRequest struct {

	// The action to perform with the provided ids, must be one of: assign, unassign.
	// Required: true
	Action *string `json:"action"`

	// The ids of the host groups on which to perform the action.
	// Required: true
	HostGroupIds []string `json:"host_group_ids"`

	// The id of the policy on which to perform the action.
	// Required: true
	PolicyID *string `json:"policy_id"`
}

// Validate validates this itautomation update policies host groups request
func (m *ItautomationUpdatePoliciesHostGroupsRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAction(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHostGroupIds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePolicyID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ItautomationUpdatePoliciesHostGroupsRequest) validateAction(formats strfmt.Registry) error {

	if err := validate.Required("action", "body", m.Action); err != nil {
		return err
	}

	return nil
}

func (m *ItautomationUpdatePoliciesHostGroupsRequest) validateHostGroupIds(formats strfmt.Registry) error {

	if err := validate.Required("host_group_ids", "body", m.HostGroupIds); err != nil {
		return err
	}

	return nil
}

func (m *ItautomationUpdatePoliciesHostGroupsRequest) validatePolicyID(formats strfmt.Registry) error {

	if err := validate.Required("policy_id", "body", m.PolicyID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this itautomation update policies host groups request based on context it is used
func (m *ItautomationUpdatePoliciesHostGroupsRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ItautomationUpdatePoliciesHostGroupsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ItautomationUpdatePoliciesHostGroupsRequest) UnmarshalBinary(b []byte) error {
	var res ItautomationUpdatePoliciesHostGroupsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
