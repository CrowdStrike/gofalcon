// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DomainRingAssignmentOverrideSettingV1 domain ring assignment override setting v1
//
// swagger:model domain.RingAssignmentOverrideSettingV1
type DomainRingAssignmentOverrideSettingV1 struct {

	// modified timestamp
	// Required: true
	// Format: date-time
	ModifiedTimestamp *strfmt.DateTime `json:"modified_timestamp"`

	// value
	// Required: true
	Value *int32 `json:"value"`
}

// Validate validates this domain ring assignment override setting v1
func (m *DomainRingAssignmentOverrideSettingV1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateModifiedTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DomainRingAssignmentOverrideSettingV1) validateModifiedTimestamp(formats strfmt.Registry) error {

	if err := validate.Required("modified_timestamp", "body", m.ModifiedTimestamp); err != nil {
		return err
	}

	if err := validate.FormatOf("modified_timestamp", "body", "date-time", m.ModifiedTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *DomainRingAssignmentOverrideSettingV1) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this domain ring assignment override setting v1 based on context it is used
func (m *DomainRingAssignmentOverrideSettingV1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainRingAssignmentOverrideSettingV1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainRingAssignmentOverrideSettingV1) UnmarshalBinary(b []byte) error {
	var res DomainRingAssignmentOverrideSettingV1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
