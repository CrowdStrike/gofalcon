// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// K8sassetsClusterEnrichmentData k8sassets cluster enrichment data
//
// swagger:model k8sassets.ClusterEnrichmentData
type K8sassetsClusterEnrichmentData struct {

	// container count
	// Required: true
	ContainerCount *int64 `json:"container_count"`

	// image count
	// Required: true
	ImageCount *int64 `json:"image_count"`

	// node count
	// Required: true
	NodeCount *int64 `json:"node_count"`

	// pod count
	// Required: true
	PodCount *int64 `json:"pod_count"`
}

// Validate validates this k8sassets cluster enrichment data
func (m *K8sassetsClusterEnrichmentData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContainerCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateImageCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNodeCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePodCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *K8sassetsClusterEnrichmentData) validateContainerCount(formats strfmt.Registry) error {

	if err := validate.Required("container_count", "body", m.ContainerCount); err != nil {
		return err
	}

	return nil
}

func (m *K8sassetsClusterEnrichmentData) validateImageCount(formats strfmt.Registry) error {

	if err := validate.Required("image_count", "body", m.ImageCount); err != nil {
		return err
	}

	return nil
}

func (m *K8sassetsClusterEnrichmentData) validateNodeCount(formats strfmt.Registry) error {

	if err := validate.Required("node_count", "body", m.NodeCount); err != nil {
		return err
	}

	return nil
}

func (m *K8sassetsClusterEnrichmentData) validatePodCount(formats strfmt.Registry) error {

	if err := validate.Required("pod_count", "body", m.PodCount); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this k8sassets cluster enrichment data based on context it is used
func (m *K8sassetsClusterEnrichmentData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *K8sassetsClusterEnrichmentData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *K8sassetsClusterEnrichmentData) UnmarshalBinary(b []byte) error {
	var res K8sassetsClusterEnrichmentData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
