// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DomainDenormalizedReportReference domain denormalized report reference
//
// swagger:model domain.DenormalizedReportReference
type DomainDenormalizedReportReference struct {

	// publish date
	PublishDate string `json:"publish_date,omitempty"`

	// report id
	// Required: true
	ReportID *string `json:"report_id"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this domain denormalized report reference
func (m *DomainDenormalizedReportReference) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateReportID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DomainDenormalizedReportReference) validateReportID(formats strfmt.Registry) error {

	if err := validate.Required("report_id", "body", m.ReportID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this domain denormalized report reference based on context it is used
func (m *DomainDenormalizedReportReference) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainDenormalizedReportReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainDenormalizedReportReference) UnmarshalBinary(b []byte) error {
	var res DomainDenormalizedReportReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
