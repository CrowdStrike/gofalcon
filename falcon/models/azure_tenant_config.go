// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureTenantConfig azure tenant config
//
// swagger:model azure.TenantConfig
type AzureTenantConfig struct {

	// app registration id
	AppRegistrationID string `json:"app_registration_id,omitempty"`

	// created
	// Required: true
	// Format: date-time
	Created *strfmt.DateTime `json:"created"`

	// key fingerprint
	KeyFingerprint string `json:"key_fingerprint,omitempty"`

	// key length
	KeyLength int32 `json:"key_length,omitempty"`

	// signature algorithm
	SignatureAlgorithm string `json:"signature_algorithm,omitempty"`

	// tenant id
	TenantID string `json:"tenant_id,omitempty"`

	// tenant name
	TenantName string `json:"tenant_name,omitempty"`

	// valid days
	ValidDays int32 `json:"valid_days,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this azure tenant config
func (m *AzureTenantConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreated(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureTenantConfig) validateCreated(formats strfmt.Registry) error {

	if err := validate.Required("created", "body", m.Created); err != nil {
		return err
	}

	if err := validate.FormatOf("created", "body", "date-time", m.Created.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this azure tenant config based on context it is used
func (m *AzureTenantConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureTenantConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureTenantConfig) UnmarshalBinary(b []byte) error {
	var res AzureTenantConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
