// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AppUsersAppInventoryUsers app users app inventory users
//
// swagger:model AppUsers_AppInventoryUsers
type AppUsersAppInventoryUsers struct {

	// Account id
	// Required: true
	AccountID *string `json:"account_id"`

	// Item id
	// Required: true
	// Min Length: 1
	ItemID *string `json:"item_id"`

	// users
	// Required: true
	Users []*string `json:"users"`
}

// Validate validates this app users app inventory users
func (m *AppUsersAppInventoryUsers) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateItemID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsers(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AppUsersAppInventoryUsers) validateAccountID(formats strfmt.Registry) error {

	if err := validate.Required("account_id", "body", m.AccountID); err != nil {
		return err
	}

	return nil
}

func (m *AppUsersAppInventoryUsers) validateItemID(formats strfmt.Registry) error {

	if err := validate.Required("item_id", "body", m.ItemID); err != nil {
		return err
	}

	if err := validate.MinLength("item_id", "body", *m.ItemID, 1); err != nil {
		return err
	}

	return nil
}

func (m *AppUsersAppInventoryUsers) validateUsers(formats strfmt.Registry) error {

	if err := validate.Required("users", "body", m.Users); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this app users app inventory users based on context it is used
func (m *AppUsersAppInventoryUsers) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AppUsersAppInventoryUsers) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AppUsersAppInventoryUsers) UnmarshalBinary(b []byte) error {
	var res AppUsersAppInventoryUsers
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
