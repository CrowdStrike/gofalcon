// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DefinitionsFlightControlRequest definitions flight control request
//
// swagger:model definitions.FlightControlRequest
type DefinitionsFlightControlRequest struct {

	// Flag to specify the workflow should apply to all child CIDs
	// Required: true
	AllCids *bool `json:"all_cids"`

	// Child CIDs that are excluded from workflow propagation used in conjunction with the all_cids flag
	ExcludedCids []string `json:"excluded_cids"`

	// Flag to specify whether the workflow should apply to the current (parent) CID, in addition to specified child CIDs
	// Required: true
	IncludeParentCid *bool `json:"include_parent_cid"`

	// List of child CIDs that the workflow should apply to if not propagating to all CIDs
	SelectedCids []string `json:"selected_cids"`
}

// Validate validates this definitions flight control request
func (m *DefinitionsFlightControlRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAllCids(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIncludeParentCid(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DefinitionsFlightControlRequest) validateAllCids(formats strfmt.Registry) error {

	if err := validate.Required("all_cids", "body", m.AllCids); err != nil {
		return err
	}

	return nil
}

func (m *DefinitionsFlightControlRequest) validateIncludeParentCid(formats strfmt.Registry) error {

	if err := validate.Required("include_parent_cid", "body", m.IncludeParentCid); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this definitions flight control request based on context it is used
func (m *DefinitionsFlightControlRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DefinitionsFlightControlRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DefinitionsFlightControlRequest) UnmarshalBinary(b []byte) error {
	var res DefinitionsFlightControlRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
