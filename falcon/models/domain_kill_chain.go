// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DomainKillChain domain kill chain
//
// swagger:model domain.KillChain
type DomainKillChain struct {

	// actions and objectives
	ActionsAndObjectives string `json:"actions_and_objectives,omitempty"`

	// command and control
	CommandAndControl string `json:"command_and_control,omitempty"`

	// delivery
	Delivery string `json:"delivery,omitempty"`

	// exploitation
	Exploitation string `json:"exploitation,omitempty"`

	// installation
	Installation string `json:"installation,omitempty"`

	// objectives
	Objectives string `json:"objectives,omitempty"`

	// reconnaissance
	Reconnaissance string `json:"reconnaissance,omitempty"`

	// rich text actions and objectives
	RichTextActionsAndObjectives string `json:"rich_text_actions_and_objectives,omitempty"`

	// rich text command and control
	RichTextCommandAndControl string `json:"rich_text_command_and_control,omitempty"`

	// rich text delivery
	RichTextDelivery string `json:"rich_text_delivery,omitempty"`

	// rich text exploitation
	RichTextExploitation string `json:"rich_text_exploitation,omitempty"`

	// rich text installation
	RichTextInstallation string `json:"rich_text_installation,omitempty"`

	// rich text objectives
	RichTextObjectives string `json:"rich_text_objectives,omitempty"`

	// rich text reconnaissance
	RichTextReconnaissance string `json:"rich_text_reconnaissance,omitempty"`

	// rich text weaponization
	RichTextWeaponization string `json:"rich_text_weaponization,omitempty"`

	// weaponization
	Weaponization string `json:"weaponization,omitempty"`
}

// Validate validates this domain kill chain
func (m *DomainKillChain) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this domain kill chain based on context it is used
func (m *DomainKillChain) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainKillChain) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainKillChain) UnmarshalBinary(b []byte) error {
	var res DomainKillChain
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
