// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db status breakdown a53a14fb45054dd282a3eab1cbd0c1db
//
// swagger:model Status_Breakdown_a53a14fb45054dd282a3eab1cbd0c1db
type StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db struct {

	// Cant run
	// Required: true
	CantRun *int64 `json:"cant_run"`

	// Dismissed
	// Required: true
	Dismissed *int64 `json:"dismissed"`

	// Failed
	// Required: true
	Failed *int64 `json:"failed"`

	// Passed
	// Required: true
	Passed *int64 `json:"passed"`

	// Pending
	// Required: true
	Pending *int64 `json:"pending"`

	// Stale
	// Required: true
	Stale *int64 `json:"stale"`
}

// Validate validates this status breakdown a53a14fb45054dd282a3eab1cbd0c1db
func (m *StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCantRun(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDismissed(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFailed(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePassed(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePending(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStale(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db) validateCantRun(formats strfmt.Registry) error {

	if err := validate.Required("cant_run", "body", m.CantRun); err != nil {
		return err
	}

	return nil
}

func (m *StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db) validateDismissed(formats strfmt.Registry) error {

	if err := validate.Required("dismissed", "body", m.Dismissed); err != nil {
		return err
	}

	return nil
}

func (m *StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db) validateFailed(formats strfmt.Registry) error {

	if err := validate.Required("failed", "body", m.Failed); err != nil {
		return err
	}

	return nil
}

func (m *StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db) validatePassed(formats strfmt.Registry) error {

	if err := validate.Required("passed", "body", m.Passed); err != nil {
		return err
	}

	return nil
}

func (m *StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db) validatePending(formats strfmt.Registry) error {

	if err := validate.Required("pending", "body", m.Pending); err != nil {
		return err
	}

	return nil
}

func (m *StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db) validateStale(formats strfmt.Registry) error {

	if err := validate.Required("stale", "body", m.Stale); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this status breakdown a53a14fb45054dd282a3eab1cbd0c1db based on context it is used
func (m *StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db) UnmarshalBinary(b []byte) error {
	var res StatusBreakdownA53a14fb45054dd282a3eab1cbd0c1db
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
