// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureTokenResource azure token resource
//
// swagger:model azure.TokenResource
type AzureTokenResource struct {

	// access token
	// Required: true
	AccessToken *string `json:"access_token"`

	// expires in
	// Required: true
	ExpiresIn *string `json:"expires_in"`

	// ext expires in
	// Required: true
	ExtExpiresIn *string `json:"ext_expires_in"`

	// resource
	// Required: true
	Resource *string `json:"resource"`

	// token type
	// Required: true
	TokenType *string `json:"token_type"`
}

// Validate validates this azure token resource
func (m *AzureTokenResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessToken(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExpiresIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExtExpiresIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResource(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTokenType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureTokenResource) validateAccessToken(formats strfmt.Registry) error {

	if err := validate.Required("access_token", "body", m.AccessToken); err != nil {
		return err
	}

	return nil
}

func (m *AzureTokenResource) validateExpiresIn(formats strfmt.Registry) error {

	if err := validate.Required("expires_in", "body", m.ExpiresIn); err != nil {
		return err
	}

	return nil
}

func (m *AzureTokenResource) validateExtExpiresIn(formats strfmt.Registry) error {

	if err := validate.Required("ext_expires_in", "body", m.ExtExpiresIn); err != nil {
		return err
	}

	return nil
}

func (m *AzureTokenResource) validateResource(formats strfmt.Registry) error {

	if err := validate.Required("resource", "body", m.Resource); err != nil {
		return err
	}

	return nil
}

func (m *AzureTokenResource) validateTokenType(formats strfmt.Registry) error {

	if err := validate.Required("token_type", "body", m.TokenType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this azure token resource based on context it is used
func (m *AzureTokenResource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureTokenResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureTokenResource) UnmarshalBinary(b []byte) error {
	var res AzureTokenResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
