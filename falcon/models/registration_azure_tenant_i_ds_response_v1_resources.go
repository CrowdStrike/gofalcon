// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RegistrationAzureTenantIDsResponseV1Resources registration azure tenant i ds response v1 resources
//
// swagger:model registration.AzureTenantIDsResponseV1.resources
type RegistrationAzureTenantIDsResponseV1Resources struct {

	// subscription ids
	// Required: true
	SubscriptionIds []string `json:"subscription_ids"`

	// tenant id
	// Required: true
	TenantID *string `json:"tenant_id"`
}

// Validate validates this registration azure tenant i ds response v1 resources
func (m *RegistrationAzureTenantIDsResponseV1Resources) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSubscriptionIds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTenantID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RegistrationAzureTenantIDsResponseV1Resources) validateSubscriptionIds(formats strfmt.Registry) error {

	if err := validate.Required("subscription_ids", "body", m.SubscriptionIds); err != nil {
		return err
	}

	return nil
}

func (m *RegistrationAzureTenantIDsResponseV1Resources) validateTenantID(formats strfmt.Registry) error {

	if err := validate.Required("tenant_id", "body", m.TenantID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this registration azure tenant i ds response v1 resources based on context it is used
func (m *RegistrationAzureTenantIDsResponseV1Resources) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RegistrationAzureTenantIDsResponseV1Resources) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RegistrationAzureTenantIDsResponseV1Resources) UnmarshalBinary(b []byte) error {
	var res RegistrationAzureTenantIDsResponseV1Resources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
