// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DomainVulnerabilityCvssV3 domain vulnerability cvss v3
//
// swagger:model domain.VulnerabilityCvssV3
type DomainVulnerabilityCvssV3 struct {

	// Describes the conditions beyond the attackerâ€™s control that must exist in order to exploit the vulnerability, one of: Low, High
	AttackComplexity string `json:"attack_complexity,omitempty"`

	// Reflects the context by which vulnerability exploitation is possible, one of: Network, Adjacent, Local, Physical
	AttackVector string `json:"attack_vector,omitempty"`

	// Measures the potential impact to availability of a successfully exploited misuse vulnerability, one of: None, Low, High
	AvailabilityImpact string `json:"availability_impact,omitempty"`

	// Measures the potential impact on confidentiality of a successfully exploited misuse vulnerability, one of: None, Low, High
	ConfidentialityImpact string `json:"confidentiality_impact,omitempty"`

	// Measures the potential impact to integrity of a successfully exploited misuse vulnerability, one of: None, Low, High
	IntegrityImpact string `json:"integrity_impact,omitempty"`

	// Describes the level of privileges an attacker must possess before successfully exploiting the vulnerability, one of: None, Low, High
	PrivilegesRequired string `json:"privileges_required,omitempty"`

	// The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope, one of: Unchanged, Changed
	Scope string `json:"scope,omitempty"`

	// Score of the vulnerability - which is between 0 and 10, the higher is the score - the more riskier the vulnerability is
	Score float64 `json:"score,omitempty"`

	// Severity of the vulnerability, can be empty or one of: LOW, MEDIUM, HIGH, CRITICAL
	Severity string `json:"severity,omitempty"`

	// Captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component, one of: None, Required
	UserInteraction string `json:"user_interaction,omitempty"`
}

// Validate validates this domain vulnerability cvss v3
func (m *DomainVulnerabilityCvssV3) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this domain vulnerability cvss v3 based on context it is used
func (m *DomainVulnerabilityCvssV3) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainVulnerabilityCvssV3) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainVulnerabilityCvssV3) UnmarshalBinary(b []byte) error {
	var res DomainVulnerabilityCvssV3
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
