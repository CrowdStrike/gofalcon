// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DomainIotImportedHost domain iot imported host
//
// swagger:model domain.IotImportedHost
type DomainIotImportedHost struct {

	// field 1
	Field1 string `json:"field_1,omitempty"`

	// field 10
	Field10 string `json:"field_10,omitempty"`

	// field 11
	Field11 string `json:"field_11,omitempty"`

	// field 12
	Field12 string `json:"field_12,omitempty"`

	// field 13
	Field13 string `json:"field_13,omitempty"`

	// field 14
	Field14 string `json:"field_14,omitempty"`

	// field 15
	Field15 string `json:"field_15,omitempty"`

	// field 16
	Field16 string `json:"field_16,omitempty"`

	// field 17
	Field17 string `json:"field_17,omitempty"`

	// field 18
	Field18 string `json:"field_18,omitempty"`

	// field 19
	Field19 string `json:"field_19,omitempty"`

	// field 2
	Field2 string `json:"field_2,omitempty"`

	// field 20
	Field20 string `json:"field_20,omitempty"`

	// field 3
	Field3 string `json:"field_3,omitempty"`

	// field 4
	Field4 string `json:"field_4,omitempty"`

	// field 5
	Field5 string `json:"field_5,omitempty"`

	// field 6
	Field6 string `json:"field_6,omitempty"`

	// field 7
	Field7 string `json:"field_7,omitempty"`

	// field 8
	Field8 string `json:"field_8,omitempty"`

	// field 9
	Field9 string `json:"field_9,omitempty"`
}

// Validate validates this domain iot imported host
func (m *DomainIotImportedHost) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this domain iot imported host based on context it is used
func (m *DomainIotImportedHost) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainIotImportedHost) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainIotImportedHost) UnmarshalBinary(b []byte) error {
	var res DomainIotImportedHost
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
