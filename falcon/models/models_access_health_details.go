// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ModelsAccessHealthDetails models access health details
//
// swagger:model models.accessHealthDetails
type ModelsAccessHealthDetails struct {

	// Timestamp of the when access was last verified.
	LastChecked string `json:"last_checked,omitempty"`

	// If valid is false, the reported reason why access is failing.
	Reason string `json:"reason,omitempty"`

	// A true or false value indicating whether access was successful based on last_checked.
	// Required: true
	Valid *bool `json:"valid"`
}

// Validate validates this models access health details
func (m *ModelsAccessHealthDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValid(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelsAccessHealthDetails) validateValid(formats strfmt.Registry) error {

	if err := validate.Required("valid", "body", m.Valid); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this models access health details based on context it is used
func (m *ModelsAccessHealthDetails) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelsAccessHealthDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsAccessHealthDetails) UnmarshalBinary(b []byte) error {
	var res ModelsAccessHealthDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
