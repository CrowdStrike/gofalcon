// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RestCloudAWSAccountCreateExtV1 rest cloud a w s account create ext v1
//
// swagger:model rest.CloudAWSAccountCreateExtV1
type RestCloudAWSAccountCreateExtV1 struct {

	// account id
	AccountID string `json:"account_id,omitempty"`

	// account type
	AccountType string `json:"account_type,omitempty"`

	// cloudformation stack arn
	CloudformationStackArn string `json:"cloudformation_stack_arn,omitempty"`

	// cloudtrail region
	CloudtrailRegion string `json:"cloudtrail_region,omitempty"`

	// csp events
	CspEvents bool `json:"csp_events,omitempty"`

	// deployment method
	DeploymentMethod string `json:"deployment_method,omitempty"`

	// dspm role
	DspmRole string `json:"dspm_role,omitempty"`

	// falcon client id
	FalconClientID string `json:"falcon_client_id,omitempty"`

	// iam role arn
	IamRoleArn string `json:"iam_role_arn,omitempty"`

	// is master
	IsMaster bool `json:"is_master,omitempty"`

	// organization id
	OrganizationID string `json:"organization_id,omitempty"`

	// products
	Products []*RestAccountProductRequestExtV1 `json:"products"`

	// resource name prefix
	ResourceNamePrefix string `json:"resource_name_prefix,omitempty"`

	// resource name suffix
	ResourceNameSuffix string `json:"resource_name_suffix,omitempty"`

	// root stack id
	RootStackID string `json:"root_stack_id,omitempty"`

	// target ous
	TargetOus []string `json:"target_ous"`

	// use existing cloudtrail
	// Required: true
	UseExistingCloudtrail *bool `json:"use_existing_cloudtrail"`
}

// Validate validates this rest cloud a w s account create ext v1
func (m *RestCloudAWSAccountCreateExtV1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProducts(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUseExistingCloudtrail(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestCloudAWSAccountCreateExtV1) validateProducts(formats strfmt.Registry) error {
	if swag.IsZero(m.Products) { // not required
		return nil
	}

	for i := 0; i < len(m.Products); i++ {
		if swag.IsZero(m.Products[i]) { // not required
			continue
		}

		if m.Products[i] != nil {
			if err := m.Products[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("products" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RestCloudAWSAccountCreateExtV1) validateUseExistingCloudtrail(formats strfmt.Registry) error {

	if err := validate.Required("use_existing_cloudtrail", "body", m.UseExistingCloudtrail); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this rest cloud a w s account create ext v1 based on the context it is used
func (m *RestCloudAWSAccountCreateExtV1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateProducts(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RestCloudAWSAccountCreateExtV1) contextValidateProducts(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Products); i++ {

		if m.Products[i] != nil {

			if swag.IsZero(m.Products[i]) { // not required
				return nil
			}

			if err := m.Products[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("products" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *RestCloudAWSAccountCreateExtV1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RestCloudAWSAccountCreateExtV1) UnmarshalBinary(b []byte) error {
	var res RestCloudAWSAccountCreateExtV1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
