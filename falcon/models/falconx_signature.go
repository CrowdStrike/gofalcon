// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FalconxSignature falconx signature
//
// swagger:model falconx.Signature
type FalconxSignature struct {

	// attack id
	AttackID string `json:"attack_id,omitempty"`

	// category
	Category string `json:"category,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// identifier
	Identifier string `json:"identifier,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// origin
	Origin string `json:"origin,omitempty"`

	// relevance
	Relevance int32 `json:"relevance,omitempty"`

	// threat level
	ThreatLevel int32 `json:"threat_level,omitempty"`

	// threat level human
	ThreatLevelHuman string `json:"threat_level_human,omitempty"`

	// type
	Type int32 `json:"type,omitempty"`
}

// Validate validates this falconx signature
func (m *FalconxSignature) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this falconx signature based on context it is used
func (m *FalconxSignature) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FalconxSignature) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FalconxSignature) UnmarshalBinary(b []byte) error {
	var res FalconxSignature
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
