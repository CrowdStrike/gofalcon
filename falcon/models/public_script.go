// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PublicScript public script
//
// swagger:model public.Script
type PublicScript struct {

	// The type of action to perform. Can be script, command, or script_file.
	ActionType string `json:"action_type,omitempty"`

	// The arguments to execute the script file with.
	Args string `json:"args,omitempty"`

	// The script content to execute. Can be empty if a script_file_id is provided with the script_file action type.
	Content string `json:"content,omitempty"`

	// The list of file IDs to execute.
	FileIds []string `json:"file_ids"`

	// The scripting language to use. Can be empty when action type is set to command or script_file.
	Language string `json:"language,omitempty"`

	// The file ID of the script file to execute files with.
	ScriptFileID string `json:"script_file_id,omitempty"`
}

// Validate validates this public script
func (m *PublicScript) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this public script based on context it is used
func (m *PublicScript) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PublicScript) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PublicScript) UnmarshalBinary(b []byte) error {
	var res PublicScript
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
