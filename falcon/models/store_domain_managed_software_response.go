// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StoreDomainManagedSoftwareResponse store domain managed software response
//
// swagger:model store.domain.managedSoftwareResponse
type StoreDomainManagedSoftwareResponse struct {

	// cpu
	CPU string `json:"cpu,omitempty"`

	// disk
	Disk string `json:"disk,omitempty"`

	// docs url
	DocsURL string `json:"docs_url,omitempty"`

	// memory
	Memory string `json:"memory,omitempty"`

	// os support
	OsSupport string `json:"os_support,omitempty"`

	// platform
	Platform string `json:"platform,omitempty"`

	// policy url
	PolicyURL string `json:"policy_url,omitempty"`

	// required domains
	RequiredDomains []string `json:"required_domains"`

	// self updating
	// Required: true
	SelfUpdating *bool `json:"self_updating"`
}

// Validate validates this store domain managed software response
func (m *StoreDomainManagedSoftwareResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSelfUpdating(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StoreDomainManagedSoftwareResponse) validateSelfUpdating(formats strfmt.Registry) error {

	if err := validate.Required("self_updating", "body", m.SelfUpdating); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this store domain managed software response based on context it is used
func (m *StoreDomainManagedSoftwareResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StoreDomainManagedSoftwareResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StoreDomainManagedSoftwareResponse) UnmarshalBinary(b []byte) error {
	var res StoreDomainManagedSoftwareResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
