// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ModelsDeliverySettingsInput models delivery settings input
//
// swagger:model models.DeliverySettingsInput
type ModelsDeliverySettingsInput struct {

	// delivery cadence
	// Required: true
	DeliveryCadence *string `json:"delivery_cadence"`

	// delivery type
	// Required: true
	DeliveryType *string `json:"delivery_type"`
}

// Validate validates this models delivery settings input
func (m *ModelsDeliverySettingsInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeliveryCadence(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeliveryType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelsDeliverySettingsInput) validateDeliveryCadence(formats strfmt.Registry) error {

	if err := validate.Required("delivery_cadence", "body", m.DeliveryCadence); err != nil {
		return err
	}

	return nil
}

func (m *ModelsDeliverySettingsInput) validateDeliveryType(formats strfmt.Registry) error {

	if err := validate.Required("delivery_type", "body", m.DeliveryType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this models delivery settings input based on context it is used
func (m *ModelsDeliverySettingsInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelsDeliverySettingsInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsDeliverySettingsInput) UnmarshalBinary(b []byte) error {
	var res ModelsDeliverySettingsInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
