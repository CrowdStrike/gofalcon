// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DomainIOMCounts domain i o m counts
//
// swagger:model domain.IOMCounts
type DomainIOMCounts struct {

	// critical
	// Required: true
	Critical *float64 `json:"critical"`

	// high
	// Required: true
	High *float64 `json:"high"`

	// informational
	Informational float64 `json:"informational,omitempty"`

	// low
	Low float64 `json:"low,omitempty"`

	// medium
	Medium float64 `json:"medium,omitempty"`
}

// Validate validates this domain i o m counts
func (m *DomainIOMCounts) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCritical(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHigh(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DomainIOMCounts) validateCritical(formats strfmt.Registry) error {

	if err := validate.Required("critical", "body", m.Critical); err != nil {
		return err
	}

	return nil
}

func (m *DomainIOMCounts) validateHigh(formats strfmt.Registry) error {

	if err := validate.Required("high", "body", m.High); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this domain i o m counts based on context it is used
func (m *DomainIOMCounts) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainIOMCounts) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainIOMCounts) UnmarshalBinary(b []byte) error {
	var res DomainIOMCounts
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
