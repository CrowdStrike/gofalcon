// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ModelsImageSummaryPackagesInfo models image summary packages info
//
// swagger:model models.ImageSummaryPackagesInfo
type ModelsImageSummaryPackagesInfo struct {

	// count with vulnerabilities
	// Required: true
	CountWithVulnerabilities *int32 `json:"count_with_vulnerabilities"`

	// total count
	// Required: true
	TotalCount *int32 `json:"total_count"`
}

// Validate validates this models image summary packages info
func (m *ModelsImageSummaryPackagesInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCountWithVulnerabilities(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelsImageSummaryPackagesInfo) validateCountWithVulnerabilities(formats strfmt.Registry) error {

	if err := validate.Required("count_with_vulnerabilities", "body", m.CountWithVulnerabilities); err != nil {
		return err
	}

	return nil
}

func (m *ModelsImageSummaryPackagesInfo) validateTotalCount(formats strfmt.Registry) error {

	if err := validate.Required("total_count", "body", m.TotalCount); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this models image summary packages info based on context it is used
func (m *ModelsImageSummaryPackagesInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelsImageSummaryPackagesInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsImageSummaryPackagesInfo) UnmarshalBinary(b []byte) error {
	var res ModelsImageSummaryPackagesInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
