// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureDeletedAccountSummary azure deleted account summary
//
// swagger:model azure.DeletedAccountSummary
type AzureDeletedAccountSummary struct {

	// cs infra subscription id
	// Required: true
	CsInfraSubscriptionID *string `json:"cs_infra_subscription_id"`

	// deployment method
	// Required: true
	DeploymentMethod *string `json:"deployment_method"`

	// deployment stack location
	// Required: true
	DeploymentStackLocation *string `json:"deployment_stack_location"`

	// deployment stack name
	// Required: true
	DeploymentStackName *string `json:"deployment_stack_name"`

	// deployment stack scope
	// Required: true
	DeploymentStackScope *string `json:"deployment_stack_scope"`

	// management group id
	// Required: true
	ManagementGroupID *string `json:"management_group_id"`

	// products
	// Required: true
	Products []*DomainProductFeatures `json:"products"`

	// subscription id
	// Required: true
	SubscriptionID *string `json:"subscription_id"`

	// subscription name
	// Required: true
	SubscriptionName *string `json:"subscription_name"`

	// tenant id
	// Required: true
	TenantID *string `json:"tenant_id"`

	// tenant name
	// Required: true
	TenantName *string `json:"tenant_name"`
}

// Validate validates this azure deleted account summary
func (m *AzureDeletedAccountSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCsInfraSubscriptionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeploymentMethod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeploymentStackLocation(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeploymentStackName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeploymentStackScope(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateManagementGroupID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProducts(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubscriptionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubscriptionName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTenantID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTenantName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureDeletedAccountSummary) validateCsInfraSubscriptionID(formats strfmt.Registry) error {

	if err := validate.Required("cs_infra_subscription_id", "body", m.CsInfraSubscriptionID); err != nil {
		return err
	}

	return nil
}

func (m *AzureDeletedAccountSummary) validateDeploymentMethod(formats strfmt.Registry) error {

	if err := validate.Required("deployment_method", "body", m.DeploymentMethod); err != nil {
		return err
	}

	return nil
}

func (m *AzureDeletedAccountSummary) validateDeploymentStackLocation(formats strfmt.Registry) error {

	if err := validate.Required("deployment_stack_location", "body", m.DeploymentStackLocation); err != nil {
		return err
	}

	return nil
}

func (m *AzureDeletedAccountSummary) validateDeploymentStackName(formats strfmt.Registry) error {

	if err := validate.Required("deployment_stack_name", "body", m.DeploymentStackName); err != nil {
		return err
	}

	return nil
}

func (m *AzureDeletedAccountSummary) validateDeploymentStackScope(formats strfmt.Registry) error {

	if err := validate.Required("deployment_stack_scope", "body", m.DeploymentStackScope); err != nil {
		return err
	}

	return nil
}

func (m *AzureDeletedAccountSummary) validateManagementGroupID(formats strfmt.Registry) error {

	if err := validate.Required("management_group_id", "body", m.ManagementGroupID); err != nil {
		return err
	}

	return nil
}

func (m *AzureDeletedAccountSummary) validateProducts(formats strfmt.Registry) error {

	if err := validate.Required("products", "body", m.Products); err != nil {
		return err
	}

	for i := 0; i < len(m.Products); i++ {
		if swag.IsZero(m.Products[i]) { // not required
			continue
		}

		if m.Products[i] != nil {
			if err := m.Products[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("products" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AzureDeletedAccountSummary) validateSubscriptionID(formats strfmt.Registry) error {

	if err := validate.Required("subscription_id", "body", m.SubscriptionID); err != nil {
		return err
	}

	return nil
}

func (m *AzureDeletedAccountSummary) validateSubscriptionName(formats strfmt.Registry) error {

	if err := validate.Required("subscription_name", "body", m.SubscriptionName); err != nil {
		return err
	}

	return nil
}

func (m *AzureDeletedAccountSummary) validateTenantID(formats strfmt.Registry) error {

	if err := validate.Required("tenant_id", "body", m.TenantID); err != nil {
		return err
	}

	return nil
}

func (m *AzureDeletedAccountSummary) validateTenantName(formats strfmt.Registry) error {

	if err := validate.Required("tenant_name", "body", m.TenantName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this azure deleted account summary based on the context it is used
func (m *AzureDeletedAccountSummary) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateProducts(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureDeletedAccountSummary) contextValidateProducts(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Products); i++ {

		if m.Products[i] != nil {

			if swag.IsZero(m.Products[i]) { // not required
				return nil
			}

			if err := m.Products[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("products" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *AzureDeletedAccountSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureDeletedAccountSummary) UnmarshalBinary(b []byte) error {
	var res AzureDeletedAccountSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
