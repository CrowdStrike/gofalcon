// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DomainDiscoverAPINetworkInterface The local IPv4 address or addresses of the network interface associated with the asset over time.
//
// swagger:model domain.DiscoverAPINetworkInterface
type DomainDiscoverAPINetworkInterface struct {

	// The name or alias of the network interface associated with the asset.
	InterfaceAlias string `json:"interface_alias,omitempty"`

	// The description of the network interface associated with the asset.
	InterfaceDescription string `json:"interface_description,omitempty"`

	// The local IPv4 address or addresses of the network interface associated with the asset over time
	LocalIP string `json:"local_ip,omitempty"`

	// The MAC address of the network interface associated with the asset.
	MacAddress string `json:"mac_address,omitempty"`

	// The prefix or prefixes of the network over time, made of the first two bytes of the IP address.
	NetworkPrefix string `json:"network_prefix,omitempty"`
}

// Validate validates this domain discover API network interface
func (m *DomainDiscoverAPINetworkInterface) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this domain discover API network interface based on context it is used
func (m *DomainDiscoverAPINetworkInterface) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainDiscoverAPINetworkInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainDiscoverAPINetworkInterface) UnmarshalBinary(b []byte) error {
	var res DomainDiscoverAPINetworkInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
