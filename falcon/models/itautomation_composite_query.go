// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ItautomationCompositeQuery itautomation composite query
//
// swagger:model itautomation.CompositeQuery
type ItautomationCompositeQuery struct {

	// List of host attributes referenced by the composite query. Example: ["tags", "ou"]
	HostAttributes []string `json:"host_attributes"`

	// List of task ids referenced by the composite query. Example: ["12f478f5eff244e59f61f8187a99719e","78db486bd0664713b16d6d35458518bc"]
	// Required: true
	TaskIds []string `json:"task_ids"`
}

// Validate validates this itautomation composite query
func (m *ItautomationCompositeQuery) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTaskIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ItautomationCompositeQuery) validateTaskIds(formats strfmt.Registry) error {

	if err := validate.Required("task_ids", "body", m.TaskIds); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this itautomation composite query based on context it is used
func (m *ItautomationCompositeQuery) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ItautomationCompositeQuery) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ItautomationCompositeQuery) UnmarshalBinary(b []byte) error {
	var res ItautomationCompositeQuery
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
