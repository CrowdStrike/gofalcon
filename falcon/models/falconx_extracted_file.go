// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FalconxExtractedFile falconx extracted file
//
// swagger:model falconx.ExtractedFile
type FalconxExtractedFile struct {

	// description
	Description string `json:"description,omitempty"`

	// file available to download
	FileAvailableToDownload bool `json:"file_available_to_download,omitempty"`

	// file path
	FilePath string `json:"file_path,omitempty"`

	// file size
	FileSize int32 `json:"file_size,omitempty"`

	// md5
	Md5 string `json:"md5,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// runtime process
	RuntimeProcess string `json:"runtime_process,omitempty"`

	// sha1
	Sha1 string `json:"sha1,omitempty"`

	// sha256
	Sha256 string `json:"sha256,omitempty"`

	// threat level
	ThreatLevel int32 `json:"threat_level,omitempty"`

	// threat level readable
	ThreatLevelReadable string `json:"threat_level_readable,omitempty"`

	// type tags
	TypeTags []string `json:"type_tags"`
}

// Validate validates this falconx extracted file
func (m *FalconxExtractedFile) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this falconx extracted file based on context it is used
func (m *FalconxExtractedFile) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FalconxExtractedFile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FalconxExtractedFile) UnmarshalBinary(b []byte) error {
	var res FalconxExtractedFile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
