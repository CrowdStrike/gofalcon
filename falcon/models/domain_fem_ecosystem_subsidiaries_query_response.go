// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DomainFemEcosystemSubsidiariesQueryResponse domain fem ecosystem subsidiaries query response
//
// swagger:model domain.FemEcosystemSubsidiariesQueryResponse
type DomainFemEcosystemSubsidiariesQueryResponse struct {

	// fem ecosystem subsidiaries response fields
	// Required: true
	FemEcosystemSubsidiariesResponseFields *DomainFemEcosystemSubsidiariesResponseFields `json:"FemEcosystemSubsidiariesResponseFields"`

	// Contains entities returned by the API
	// Required: true
	Resources []string `json:"resources"`
}

// Validate validates this domain fem ecosystem subsidiaries query response
func (m *DomainFemEcosystemSubsidiariesQueryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFemEcosystemSubsidiariesResponseFields(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DomainFemEcosystemSubsidiariesQueryResponse) validateFemEcosystemSubsidiariesResponseFields(formats strfmt.Registry) error {

	if err := validate.Required("FemEcosystemSubsidiariesResponseFields", "body", m.FemEcosystemSubsidiariesResponseFields); err != nil {
		return err
	}

	if m.FemEcosystemSubsidiariesResponseFields != nil {
		if err := m.FemEcosystemSubsidiariesResponseFields.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("FemEcosystemSubsidiariesResponseFields")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("FemEcosystemSubsidiariesResponseFields")
			}
			return err
		}
	}

	return nil
}

func (m *DomainFemEcosystemSubsidiariesQueryResponse) validateResources(formats strfmt.Registry) error {

	if err := validate.Required("resources", "body", m.Resources); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this domain fem ecosystem subsidiaries query response based on the context it is used
func (m *DomainFemEcosystemSubsidiariesQueryResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateFemEcosystemSubsidiariesResponseFields(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DomainFemEcosystemSubsidiariesQueryResponse) contextValidateFemEcosystemSubsidiariesResponseFields(ctx context.Context, formats strfmt.Registry) error {

	if m.FemEcosystemSubsidiariesResponseFields != nil {

		if err := m.FemEcosystemSubsidiariesResponseFields.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("FemEcosystemSubsidiariesResponseFields")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("FemEcosystemSubsidiariesResponseFields")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DomainFemEcosystemSubsidiariesQueryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainFemEcosystemSubsidiariesQueryResponse) UnmarshalBinary(b []byte) error {
	var res DomainFemEcosystemSubsidiariesQueryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
