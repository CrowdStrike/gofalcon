// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ModelsLayerInfoType models layer info type
//
// swagger:model models.LayerInfoType
type ModelsLayerInfoType struct {

	// created at
	// Required: true
	CreatedAt *string `json:"CreatedAt"`

	// created by
	// Required: true
	CreatedBy *string `json:"CreatedBy"`

	// digest
	// Required: true
	Digest *string `json:"Digest"`

	// size
	// Required: true
	Size *int64 `json:"Size"`

	// layer inventory s3 key
	LayerInventoryS3Key string `json:"layer_inventory_s3_key,omitempty"`

	// layer reference key
	LayerReferenceKey string `json:"layer_reference_key,omitempty"`

	// layer reference type
	LayerReferenceType int64 `json:"layer_reference_type,omitempty"`

	// type
	// Required: true
	Type *int64 `json:"type"`
}

// Validate validates this models layer info type
func (m *ModelsLayerInfoType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDigest(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelsLayerInfoType) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("CreatedAt", "body", m.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (m *ModelsLayerInfoType) validateCreatedBy(formats strfmt.Registry) error {

	if err := validate.Required("CreatedBy", "body", m.CreatedBy); err != nil {
		return err
	}

	return nil
}

func (m *ModelsLayerInfoType) validateDigest(formats strfmt.Registry) error {

	if err := validate.Required("Digest", "body", m.Digest); err != nil {
		return err
	}

	return nil
}

func (m *ModelsLayerInfoType) validateSize(formats strfmt.Registry) error {

	if err := validate.Required("Size", "body", m.Size); err != nil {
		return err
	}

	return nil
}

func (m *ModelsLayerInfoType) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this models layer info type based on context it is used
func (m *ModelsLayerInfoType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelsLayerInfoType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelsLayerInfoType) UnmarshalBinary(b []byte) error {
	var res ModelsLayerInfoType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
