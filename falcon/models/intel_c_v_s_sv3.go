// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IntelCVSSv3 intel c v s sv3
//
// swagger:model intel.CVSSv3
type IntelCVSSv3 struct {

	// attack complexity
	AttackComplexity string `json:"attack_complexity,omitempty"`

	// attack vector
	AttackVector string `json:"attack_vector,omitempty"`

	// availability impact
	AvailabilityImpact string `json:"availability_impact,omitempty"`

	// confidentiality impact
	ConfidentialityImpact string `json:"confidentiality_impact,omitempty"`

	// integrity impact
	IntegrityImpact string `json:"integrity_impact,omitempty"`

	// privileges required
	PrivilegesRequired string `json:"privileges_required,omitempty"`

	// scope
	Scope string `json:"scope,omitempty"`

	// score
	Score float64 `json:"score,omitempty"`

	// severity
	Severity string `json:"severity,omitempty"`

	// user interaction
	UserInteraction string `json:"user_interaction,omitempty"`
}

// Validate validates this intel c v s sv3
func (m *IntelCVSSv3) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this intel c v s sv3 based on context it is used
func (m *IntelCVSSv3) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IntelCVSSv3) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IntelCVSSv3) UnmarshalBinary(b []byte) error {
	var res IntelCVSSv3
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
