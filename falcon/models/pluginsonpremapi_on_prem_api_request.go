// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PluginsonpremapiOnPremAPIRequest pluginsonpremapi on prem API request
//
// swagger:model pluginsonpremapi.OnPremAPIRequest
type PluginsonpremapiOnPremAPIRequest struct {

	// encrypted http request
	// Required: true
	EncryptedHTTPRequest *string `json:"encrypted_http_request"`

	// host group id
	// Required: true
	HostGroupID *string `json:"host_group_id"`
}

// Validate validates this pluginsonpremapi on prem API request
func (m *PluginsonpremapiOnPremAPIRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEncryptedHTTPRequest(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHostGroupID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PluginsonpremapiOnPremAPIRequest) validateEncryptedHTTPRequest(formats strfmt.Registry) error {

	if err := validate.Required("encrypted_http_request", "body", m.EncryptedHTTPRequest); err != nil {
		return err
	}

	return nil
}

func (m *PluginsonpremapiOnPremAPIRequest) validateHostGroupID(formats strfmt.Registry) error {

	if err := validate.Required("host_group_id", "body", m.HostGroupID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this pluginsonpremapi on prem API request based on context it is used
func (m *PluginsonpremapiOnPremAPIRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PluginsonpremapiOnPremAPIRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PluginsonpremapiOnPremAPIRequest) UnmarshalBinary(b []byte) error {
	var res PluginsonpremapiOnPremAPIRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
