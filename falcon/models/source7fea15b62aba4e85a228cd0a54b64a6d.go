// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Source7fea15b62aba4e85a228cd0a54b64a6d source 7fea15b62aba4e85a228cd0a54b64a6d
//
// swagger:model Source_7fea15b62aba4e85a228cd0a54b64a6d
type Source7fea15b62aba4e85a228cd0a54b64a6d struct {

	// Count
	Count int64 `json:"count,omitempty"`

	// Data source id
	// Required: true
	// Min Length: 1
	DataSourceID *string `json:"data_source_id"`

	// Name
	// Required: true
	// Min Length: 1
	Name *string `json:"name"`

	// Use previous data
	UsePreviousData bool `json:"use_previous_data,omitempty"`
}

// Validate validates this source 7fea15b62aba4e85a228cd0a54b64a6d
func (m *Source7fea15b62aba4e85a228cd0a54b64a6d) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDataSourceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Source7fea15b62aba4e85a228cd0a54b64a6d) validateDataSourceID(formats strfmt.Registry) error {

	if err := validate.Required("data_source_id", "body", m.DataSourceID); err != nil {
		return err
	}

	if err := validate.MinLength("data_source_id", "body", *m.DataSourceID, 1); err != nil {
		return err
	}

	return nil
}

func (m *Source7fea15b62aba4e85a228cd0a54b64a6d) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	if err := validate.MinLength("name", "body", *m.Name, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this source 7fea15b62aba4e85a228cd0a54b64a6d based on context it is used
func (m *Source7fea15b62aba4e85a228cd0a54b64a6d) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Source7fea15b62aba4e85a228cd0a54b64a6d) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Source7fea15b62aba4e85a228cd0a54b64a6d) UnmarshalBinary(b []byte) error {
	var res Source7fea15b62aba4e85a228cd0a54b64a6d
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
