// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DomainCloudOCIFeature domain cloud o c i feature
//
// swagger:model domain.CloudOCIFeature
type DomainCloudOCIFeature struct {

	// OCI Tenancy registration deployment method
	DeploymentMethod string `json:"deployment_method,omitempty"`

	// feature
	// Required: true
	Feature *string `json:"feature"`

	// is enabled
	IsEnabled bool `json:"is_enabled,omitempty"`

	// Person who register OCI Tenancy
	// Required: true
	Persona *string `json:"persona"`

	// OCI Tenancy detailed status
	// Required: true
	RegistrationDetailedStatus *string `json:"registration_detailed_status"`
}

// Validate validates this domain cloud o c i feature
func (m *DomainCloudOCIFeature) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFeature(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePersona(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegistrationDetailedStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DomainCloudOCIFeature) validateFeature(formats strfmt.Registry) error {

	if err := validate.Required("feature", "body", m.Feature); err != nil {
		return err
	}

	return nil
}

func (m *DomainCloudOCIFeature) validatePersona(formats strfmt.Registry) error {

	if err := validate.Required("persona", "body", m.Persona); err != nil {
		return err
	}

	return nil
}

func (m *DomainCloudOCIFeature) validateRegistrationDetailedStatus(formats strfmt.Registry) error {

	if err := validate.Required("registration_detailed_status", "body", m.RegistrationDetailedStatus); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this domain cloud o c i feature based on context it is used
func (m *DomainCloudOCIFeature) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainCloudOCIFeature) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainCloudOCIFeature) UnmarshalBinary(b []byte) error {
	var res DomainCloudOCIFeature
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
