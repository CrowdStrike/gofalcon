// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DomainAPISimplifiedEvaluationLogicItemV1 domain API simplified evaluation logic item v1
//
// swagger:model domain.APISimplifiedEvaluationLogicItemV1
type DomainAPISimplifiedEvaluationLogicItemV1 struct {

	// checks
	Checks string `json:"checks,omitempty"`

	// data
	// Required: true
	Data []string `json:"data"`

	// found
	Found []string `json:"found"`

	// id
	ID int64 `json:"id,omitempty"`

	// match required
	MatchRequired string `json:"match_required,omitempty"`

	// negate
	Negate bool `json:"negate,omitempty"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this domain API simplified evaluation logic item v1
func (m *DomainAPISimplifiedEvaluationLogicItemV1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DomainAPISimplifiedEvaluationLogicItemV1) validateData(formats strfmt.Registry) error {

	if err := validate.Required("data", "body", m.Data); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this domain API simplified evaluation logic item v1 based on context it is used
func (m *DomainAPISimplifiedEvaluationLogicItemV1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainAPISimplifiedEvaluationLogicItemV1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainAPISimplifiedEvaluationLogicItemV1) UnmarshalBinary(b []byte) error {
	var res DomainAPISimplifiedEvaluationLogicItemV1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
