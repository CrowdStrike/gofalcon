// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APIEnterpriseAccountCreateRequestV1 api enterprise account create request v1
//
// swagger:model api.EnterpriseAccountCreateRequestV1
type APIEnterpriseAccountCreateRequestV1 struct {

	// application group id
	// Required: true
	ApplicationGroupID *string `json:"application_group_id"`

	// domains
	// Required: true
	Domains []string `json:"domains"`

	// name
	// Required: true
	Name *string `json:"name"`

	// plugin config id
	// Required: true
	PluginConfigID *string `json:"plugin_config_id"`
}

// Validate validates this api enterprise account create request v1
func (m *APIEnterpriseAccountCreateRequestV1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateApplicationGroupID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDomains(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePluginConfigID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIEnterpriseAccountCreateRequestV1) validateApplicationGroupID(formats strfmt.Registry) error {

	if err := validate.Required("application_group_id", "body", m.ApplicationGroupID); err != nil {
		return err
	}

	return nil
}

func (m *APIEnterpriseAccountCreateRequestV1) validateDomains(formats strfmt.Registry) error {

	if err := validate.Required("domains", "body", m.Domains); err != nil {
		return err
	}

	return nil
}

func (m *APIEnterpriseAccountCreateRequestV1) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *APIEnterpriseAccountCreateRequestV1) validatePluginConfigID(formats strfmt.Registry) error {

	if err := validate.Required("plugin_config_id", "body", m.PluginConfigID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this api enterprise account create request v1 based on context it is used
func (m *APIEnterpriseAccountCreateRequestV1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APIEnterpriseAccountCreateRequestV1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIEnterpriseAccountCreateRequestV1) UnmarshalBinary(b []byte) error {
	var res APIEnterpriseAccountCreateRequestV1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
