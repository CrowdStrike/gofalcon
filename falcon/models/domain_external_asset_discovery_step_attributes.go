// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DomainExternalAssetDiscoveryStepAttributes domain external asset discovery step attributes
//
// swagger:model domain.ExternalAssetDiscoveryStepAttributes
type DomainExternalAssetDiscoveryStepAttributes struct {

	// The reasoning behind this association
	// Required: true
	Clue *string `json:"clue"`

	// The step entity
	// Required: true
	Entity *string `json:"entity"`

	// The entity type of the described entity
	// Required: true
	EntityType *string `json:"entity_type"`

	// The discovery step identifier
	ID string `json:"id,omitempty"`

	// The redirect path
	RedirectPath []*DomainExternalAssetRedirectStepAttributes `json:"redirect_path"`
}

// Validate validates this domain external asset discovery step attributes
func (m *DomainExternalAssetDiscoveryStepAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClue(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntityType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRedirectPath(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DomainExternalAssetDiscoveryStepAttributes) validateClue(formats strfmt.Registry) error {

	if err := validate.Required("clue", "body", m.Clue); err != nil {
		return err
	}

	return nil
}

func (m *DomainExternalAssetDiscoveryStepAttributes) validateEntity(formats strfmt.Registry) error {

	if err := validate.Required("entity", "body", m.Entity); err != nil {
		return err
	}

	return nil
}

func (m *DomainExternalAssetDiscoveryStepAttributes) validateEntityType(formats strfmt.Registry) error {

	if err := validate.Required("entity_type", "body", m.EntityType); err != nil {
		return err
	}

	return nil
}

func (m *DomainExternalAssetDiscoveryStepAttributes) validateRedirectPath(formats strfmt.Registry) error {
	if swag.IsZero(m.RedirectPath) { // not required
		return nil
	}

	for i := 0; i < len(m.RedirectPath); i++ {
		if swag.IsZero(m.RedirectPath[i]) { // not required
			continue
		}

		if m.RedirectPath[i] != nil {
			if err := m.RedirectPath[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("redirect_path" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("redirect_path" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this domain external asset discovery step attributes based on the context it is used
func (m *DomainExternalAssetDiscoveryStepAttributes) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateRedirectPath(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DomainExternalAssetDiscoveryStepAttributes) contextValidateRedirectPath(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.RedirectPath); i++ {

		if m.RedirectPath[i] != nil {

			if swag.IsZero(m.RedirectPath[i]) { // not required
				return nil
			}

			if err := m.RedirectPath[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("redirect_path" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("redirect_path" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DomainExternalAssetDiscoveryStepAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainExternalAssetDiscoveryStepAttributes) UnmarshalBinary(b []byte) error {
	var res DomainExternalAssetDiscoveryStepAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
