// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Remediation remediation
//
// swagger:model .remediation
type Remediation struct {

	// actual value
	// Required: true
	ActualValue *string `json:"actual_value"`

	// expected value
	// Required: true
	ExpectedValue *string `json:"expected_value"`
}

// Validate validates this remediation
func (m *Remediation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActualValue(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExpectedValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Remediation) validateActualValue(formats strfmt.Registry) error {

	if err := validate.Required("actual_value", "body", m.ActualValue); err != nil {
		return err
	}

	return nil
}

func (m *Remediation) validateExpectedValue(formats strfmt.Registry) error {

	if err := validate.Required("expected_value", "body", m.ExpectedValue); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this remediation based on context it is used
func (m *Remediation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Remediation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Remediation) UnmarshalBinary(b []byte) error {
	var res Remediation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
