// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ItautomationExecutionConfig itautomation execution config
//
// swagger:model itautomation.ExecutionConfig
type ItautomationExecutionConfig struct {

	// Whether OSQuery functionality is enabled
	EnableOsQuery *bool `json:"enable_os_query,omitempty"`

	// Whether Python script execution is enabled
	EnablePythonExecution *bool `json:"enable_python_execution,omitempty"`

	// Whether script execution is enabled
	EnableScriptExecution *bool `json:"enable_script_execution,omitempty"`

	// Maximum time a script can run before timing out. Example: 100
	ExecutionTimeout int32 `json:"execution_timeout,omitempty"`

	// Unit of time for execution timeout
	// Enum: ["Minutes","Hours"]
	ExecutionTimeoutUnit string `json:"execution_timeout_unit,omitempty"`
}

// Validate validates this itautomation execution config
func (m *ItautomationExecutionConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExecutionTimeoutUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var itautomationExecutionConfigTypeExecutionTimeoutUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Minutes","Hours"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		itautomationExecutionConfigTypeExecutionTimeoutUnitPropEnum = append(itautomationExecutionConfigTypeExecutionTimeoutUnitPropEnum, v)
	}
}

const (

	// ItautomationExecutionConfigExecutionTimeoutUnitMinutes captures enum value "Minutes"
	ItautomationExecutionConfigExecutionTimeoutUnitMinutes string = "Minutes"

	// ItautomationExecutionConfigExecutionTimeoutUnitHours captures enum value "Hours"
	ItautomationExecutionConfigExecutionTimeoutUnitHours string = "Hours"
)

// prop value enum
func (m *ItautomationExecutionConfig) validateExecutionTimeoutUnitEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, itautomationExecutionConfigTypeExecutionTimeoutUnitPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ItautomationExecutionConfig) validateExecutionTimeoutUnit(formats strfmt.Registry) error {
	if swag.IsZero(m.ExecutionTimeoutUnit) { // not required
		return nil
	}

	// value enum
	if err := m.validateExecutionTimeoutUnitEnum("execution_timeout_unit", "body", m.ExecutionTimeoutUnit); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this itautomation execution config based on context it is used
func (m *ItautomationExecutionConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ItautomationExecutionConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ItautomationExecutionConfig) UnmarshalBinary(b []byte) error {
	var res ItautomationExecutionConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
