// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FalconxHTTPRequest falconx HTTP request
//
// swagger:model falconx.HTTPRequest
type FalconxHTTPRequest struct {

	// header
	Header string `json:"header,omitempty"`

	// host
	Host string `json:"host,omitempty"`

	// host ip
	HostIP string `json:"host_ip,omitempty"`

	// host port
	HostPort int32 `json:"host_port,omitempty"`

	// method
	Method string `json:"method,omitempty"`

	// response code
	ResponseCode int32 `json:"response_code,omitempty"`

	// response phrase
	ResponsePhrase string `json:"response_phrase,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this falconx HTTP request
func (m *FalconxHTTPRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this falconx HTTP request based on context it is used
func (m *FalconxHTTPRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FalconxHTTPRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FalconxHTTPRequest) UnmarshalBinary(b []byte) error {
	var res FalconxHTTPRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
