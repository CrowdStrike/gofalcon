// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4 data transaction response dto 0a818d8964b64fd4bf08a6ec2ade7cd4
//
// swagger:model DataTransactionResponseDto_0a818d8964b64fd4bf08a6ec2ade7cd4
type DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4 struct {

	// Account id
	// Required: true
	// Min Length: 1
	AccountID *string `json:"account_id"`

	// Account integration id
	// Required: true
	// Min Length: 1
	AccountIntegrationID *string `json:"account_integration_id"`

	// Last update
	// Required: true
	// Format: date-time
	LastUpdate *strfmt.DateTime `json:"last_update"`

	// sources
	// Required: true
	Sources []*SourceCa9bfc30c6344fbea49b790d5a09af89 `json:"sources"`

	// Status
	// Required: true
	// Enum: [cancelled closed done in_progress pending]
	Status *string `json:"status"`
}

// Validate validates this data transaction response dto 0a818d8964b64fd4bf08a6ec2ade7cd4
func (m *DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAccountIntegrationID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastUpdate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSources(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4) validateAccountID(formats strfmt.Registry) error {

	if err := validate.Required("account_id", "body", m.AccountID); err != nil {
		return err
	}

	if err := validate.MinLength("account_id", "body", *m.AccountID, 1); err != nil {
		return err
	}

	return nil
}

func (m *DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4) validateAccountIntegrationID(formats strfmt.Registry) error {

	if err := validate.Required("account_integration_id", "body", m.AccountIntegrationID); err != nil {
		return err
	}

	if err := validate.MinLength("account_integration_id", "body", *m.AccountIntegrationID, 1); err != nil {
		return err
	}

	return nil
}

func (m *DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4) validateLastUpdate(formats strfmt.Registry) error {

	if err := validate.Required("last_update", "body", m.LastUpdate); err != nil {
		return err
	}

	if err := validate.FormatOf("last_update", "body", "date-time", m.LastUpdate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4) validateSources(formats strfmt.Registry) error {

	if err := validate.Required("sources", "body", m.Sources); err != nil {
		return err
	}

	for i := 0; i < len(m.Sources); i++ {
		if swag.IsZero(m.Sources[i]) { // not required
			continue
		}

		if m.Sources[i] != nil {
			if err := m.Sources[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sources" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("sources" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var dataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4TypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["cancelled","closed","done","in_progress","pending"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4TypeStatusPropEnum = append(dataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4TypeStatusPropEnum, v)
	}
}

const (

	// DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4StatusCancelled captures enum value "cancelled"
	DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4StatusCancelled string = "cancelled"

	// DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4StatusClosed captures enum value "closed"
	DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4StatusClosed string = "closed"

	// DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4StatusDone captures enum value "done"
	DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4StatusDone string = "done"

	// DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4StatusInProgress captures enum value "in_progress"
	DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4StatusInProgress string = "in_progress"

	// DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4StatusPending captures enum value "pending"
	DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4StatusPending string = "pending"
)

// prop value enum
func (m *DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4TypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this data transaction response dto 0a818d8964b64fd4bf08a6ec2ade7cd4 based on the context it is used
func (m *DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSources(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4) contextValidateSources(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Sources); i++ {

		if m.Sources[i] != nil {

			if swag.IsZero(m.Sources[i]) { // not required
				return nil
			}

			if err := m.Sources[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sources" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("sources" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4) UnmarshalBinary(b []byte) error {
	var res DataTransactionResponseDto0a818d8964b64fd4bf08a6ec2ade7cd4
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
