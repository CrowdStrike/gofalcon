// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DomainAPIVulnerabilityCVECISAInfo domain API vulnerability c v e c i s a info
//
// swagger:model domain.APIVulnerabilityCVECISAInfo
type DomainAPIVulnerabilityCVECISAInfo struct {

	// Refers to the deadline or target date set by the Cybersecurity and Infrastructure Security Agency (CISA) for addressing or mitigating a Critical Infrastructure Security Advisory Key (CISAK) vulnerability
	DueDate string `json:"due_date,omitempty"`

	// Refers to the designation of a vulnerability as a Critical Infrastructure Security Advisory Key (CISAK) by the Cybersecurity and Infrastructure Security Agency (CISA), indicating its significance and potential impact on critical infrastructure systems and operations
	// Required: true
	IsCisaKev *bool `json:"is_cisa_kev"`
}

// Validate validates this domain API vulnerability c v e c i s a info
func (m *DomainAPIVulnerabilityCVECISAInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIsCisaKev(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DomainAPIVulnerabilityCVECISAInfo) validateIsCisaKev(formats strfmt.Registry) error {

	if err := validate.Required("is_cisa_kev", "body", m.IsCisaKev); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this domain API vulnerability c v e c i s a info based on context it is used
func (m *DomainAPIVulnerabilityCVECISAInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainAPIVulnerabilityCVECISAInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainAPIVulnerabilityCVECISAInfo) UnmarshalBinary(b []byte) error {
	var res DomainAPIVulnerabilityCVECISAInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
