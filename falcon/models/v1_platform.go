// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1Platform v1 platform
//
// swagger:model v1.Platform
type V1Platform struct {

	// architecture
	// Required: true
	Architecture *string `json:"architecture"`

	// os
	// Required: true
	Os *string `json:"os"`

	// os features
	OsFeatures []string `json:"os.features"`

	// os version
	OsVersion string `json:"os.version,omitempty"`

	// variant
	Variant string `json:"variant,omitempty"`
}

// Validate validates this v1 platform
func (m *V1Platform) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateArchitecture(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1Platform) validateArchitecture(formats strfmt.Registry) error {

	if err := validate.Required("architecture", "body", m.Architecture); err != nil {
		return err
	}

	return nil
}

func (m *V1Platform) validateOs(formats strfmt.Registry) error {

	if err := validate.Required("os", "body", m.Os); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 platform based on context it is used
func (m *V1Platform) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1Platform) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1Platform) UnmarshalBinary(b []byte) error {
	var res V1Platform
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
