// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CsdomainManagedApps csdomain managed apps
//
// swagger:model csdomain.ManagedApps
type CsdomainManagedApps struct {

	// airlock
	Airlock *CsdomainManagedApp `json:"airlock,omitempty"`

	// automox
	Automox *CsdomainManagedApp `json:"automox,omitempty"`

	// netskope
	Netskope *CsdomainManagedApp `json:"netskope,omitempty"`
}

// Validate validates this csdomain managed apps
func (m *CsdomainManagedApps) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAirlock(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAutomox(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNetskope(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CsdomainManagedApps) validateAirlock(formats strfmt.Registry) error {

	if swag.IsZero(m.Airlock) { // not required
		return nil
	}

	if m.Airlock != nil {
		if err := m.Airlock.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("airlock")
			}
			return err
		}
	}

	return nil
}

func (m *CsdomainManagedApps) validateAutomox(formats strfmt.Registry) error {

	if swag.IsZero(m.Automox) { // not required
		return nil
	}

	if m.Automox != nil {
		if err := m.Automox.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("automox")
			}
			return err
		}
	}

	return nil
}

func (m *CsdomainManagedApps) validateNetskope(formats strfmt.Registry) error {

	if swag.IsZero(m.Netskope) { // not required
		return nil
	}

	if m.Netskope != nil {
		if err := m.Netskope.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("netskope")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CsdomainManagedApps) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CsdomainManagedApps) UnmarshalBinary(b []byte) error {
	var res CsdomainManagedApps
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
