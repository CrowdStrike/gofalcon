// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExecutionsAncestorExecution executions ancestor execution
//
// swagger:model executions.AncestorExecution
type ExecutionsAncestorExecution struct {

	// Display name of the input field to the parent execution loop node.
	// Required: true
	Field *string `json:"field"`

	// Unique id of the ancestor execution id.
	// Required: true
	ID *string `json:"id"`

	// Index number indicating what iteration of the parent execution this given execution is associated with.
	// Required: true
	Iteration *int32 `json:"iteration"`
}

// Validate validates this executions ancestor execution
func (m *ExecutionsAncestorExecution) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateField(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIteration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExecutionsAncestorExecution) validateField(formats strfmt.Registry) error {

	if err := validate.Required("field", "body", m.Field); err != nil {
		return err
	}

	return nil
}

func (m *ExecutionsAncestorExecution) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *ExecutionsAncestorExecution) validateIteration(formats strfmt.Registry) error {

	if err := validate.Required("iteration", "body", m.Iteration); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this executions ancestor execution based on context it is used
func (m *ExecutionsAncestorExecution) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ExecutionsAncestorExecution) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExecutionsAncestorExecution) UnmarshalBinary(b []byte) error {
	var res ExecutionsAncestorExecution
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
