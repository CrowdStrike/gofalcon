// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MessagecenterActivityCreationRequest messagecenter activity creation request
//
// swagger:model messagecenter.ActivityCreationRequest
type MessagecenterActivityCreationRequest struct {

	// body
	// Required: true
	Body *string `json:"body"`

	// case id
	// Required: true
	CaseID *string `json:"case_id"`

	// type
	// Required: true
	Type *string `json:"type"`

	// user uuid
	// Required: true
	UserUUID *string `json:"user_uuid"`
}

// Validate validates this messagecenter activity creation request
func (m *MessagecenterActivityCreationRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBody(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCaseID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserUUID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MessagecenterActivityCreationRequest) validateBody(formats strfmt.Registry) error {

	if err := validate.Required("body", "body", m.Body); err != nil {
		return err
	}

	return nil
}

func (m *MessagecenterActivityCreationRequest) validateCaseID(formats strfmt.Registry) error {

	if err := validate.Required("case_id", "body", m.CaseID); err != nil {
		return err
	}

	return nil
}

func (m *MessagecenterActivityCreationRequest) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

func (m *MessagecenterActivityCreationRequest) validateUserUUID(formats strfmt.Registry) error {

	if err := validate.Required("user_uuid", "body", m.UserUUID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this messagecenter activity creation request based on context it is used
func (m *MessagecenterActivityCreationRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MessagecenterActivityCreationRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MessagecenterActivityCreationRequest) UnmarshalBinary(b []byte) error {
	var res MessagecenterActivityCreationRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
