// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VulnerabilitymetadataapiCISAKnownExploitedVulnerabilitiesInfo vulnerabilitymetadataapi c i s a known exploited vulnerabilities info
//
// swagger:model vulnerabilitymetadataapi.CISAKnownExploitedVulnerabilitiesInfo
type VulnerabilitymetadataapiCISAKnownExploitedVulnerabilitiesInfo struct {

	// due date
	// Required: true
	// Format: date-time
	DueDate *strfmt.DateTime `json:"due_date"`

	// is cisa kev
	// Required: true
	IsCisaKev *bool `json:"is_cisa_kev"`
}

// Validate validates this vulnerabilitymetadataapi c i s a known exploited vulnerabilities info
func (m *VulnerabilitymetadataapiCISAKnownExploitedVulnerabilitiesInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDueDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsCisaKev(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VulnerabilitymetadataapiCISAKnownExploitedVulnerabilitiesInfo) validateDueDate(formats strfmt.Registry) error {

	if err := validate.Required("due_date", "body", m.DueDate); err != nil {
		return err
	}

	if err := validate.FormatOf("due_date", "body", "date-time", m.DueDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *VulnerabilitymetadataapiCISAKnownExploitedVulnerabilitiesInfo) validateIsCisaKev(formats strfmt.Registry) error {

	if err := validate.Required("is_cisa_kev", "body", m.IsCisaKev); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this vulnerabilitymetadataapi c i s a known exploited vulnerabilities info based on context it is used
func (m *VulnerabilitymetadataapiCISAKnownExploitedVulnerabilitiesInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VulnerabilitymetadataapiCISAKnownExploitedVulnerabilitiesInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VulnerabilitymetadataapiCISAKnownExploitedVulnerabilitiesInfo) UnmarshalBinary(b []byte) error {
	var res VulnerabilitymetadataapiCISAKnownExploitedVulnerabilitiesInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
