// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CommonOSCompliance common o s compliance
//
// swagger:model common.OSCompliance
type CommonOSCompliance struct {

	// average overall score
	// Required: true
	AverageOverallScore *float64 `json:"average_overall_score"`

	// compliance
	// Required: true
	Compliance map[string]float64 `json:"compliance"`

	// name
	// Required: true
	Name *string `json:"name"`

	// num aids
	// Required: true
	NumAids *int64 `json:"num_aids"`
}

// Validate validates this common o s compliance
func (m *CommonOSCompliance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAverageOverallScore(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCompliance(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumAids(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommonOSCompliance) validateAverageOverallScore(formats strfmt.Registry) error {

	if err := validate.Required("average_overall_score", "body", m.AverageOverallScore); err != nil {
		return err
	}

	return nil
}

func (m *CommonOSCompliance) validateCompliance(formats strfmt.Registry) error {

	if err := validate.Required("compliance", "body", m.Compliance); err != nil {
		return err
	}

	return nil
}

func (m *CommonOSCompliance) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *CommonOSCompliance) validateNumAids(formats strfmt.Registry) error {

	if err := validate.Required("num_aids", "body", m.NumAids); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this common o s compliance based on context it is used
func (m *CommonOSCompliance) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CommonOSCompliance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommonOSCompliance) UnmarshalBinary(b []byte) error {
	var res CommonOSCompliance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
