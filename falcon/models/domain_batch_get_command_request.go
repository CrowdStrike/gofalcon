// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DomainBatchGetCommandRequest domain batch get command request
//
// swagger:model domain.BatchGetCommandRequest
type DomainBatchGetCommandRequest struct {

	// batch id
	// Required: true
	BatchID *string `json:"batch_id"`

	// file path
	// Required: true
	FilePath *string `json:"file_path"`

	// optional hosts
	// Required: true
	OptionalHosts []string `json:"optional_hosts"`
}

// Validate validates this domain batch get command request
func (m *DomainBatchGetCommandRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBatchID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFilePath(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOptionalHosts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DomainBatchGetCommandRequest) validateBatchID(formats strfmt.Registry) error {

	if err := validate.Required("batch_id", "body", m.BatchID); err != nil {
		return err
	}

	return nil
}

func (m *DomainBatchGetCommandRequest) validateFilePath(formats strfmt.Registry) error {

	if err := validate.Required("file_path", "body", m.FilePath); err != nil {
		return err
	}

	return nil
}

func (m *DomainBatchGetCommandRequest) validateOptionalHosts(formats strfmt.Registry) error {

	if err := validate.Required("optional_hosts", "body", m.OptionalHosts); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this domain batch get command request based on context it is used
func (m *DomainBatchGetCommandRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainBatchGetCommandRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainBatchGetCommandRequest) UnmarshalBinary(b []byte) error {
	var res DomainBatchGetCommandRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
