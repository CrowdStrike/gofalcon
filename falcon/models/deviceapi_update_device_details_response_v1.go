// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeviceapiUpdateDeviceDetailsResponseV1 deviceapi update device details response v1
//
// swagger:model deviceapi.UpdateDeviceDetailsResponseV1
type DeviceapiUpdateDeviceDetailsResponseV1 struct {

	// code
	Code int32 `json:"code,omitempty"`

	// device id
	// Required: true
	DeviceID *string `json:"device_id"`

	// error
	Error string `json:"error,omitempty"`

	// updated
	// Required: true
	Updated *bool `json:"updated"`
}

// Validate validates this deviceapi update device details response v1
func (m *DeviceapiUpdateDeviceDetailsResponseV1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeviceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdated(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeviceapiUpdateDeviceDetailsResponseV1) validateDeviceID(formats strfmt.Registry) error {

	if err := validate.Required("device_id", "body", m.DeviceID); err != nil {
		return err
	}

	return nil
}

func (m *DeviceapiUpdateDeviceDetailsResponseV1) validateUpdated(formats strfmt.Registry) error {

	if err := validate.Required("updated", "body", m.Updated); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this deviceapi update device details response v1 based on context it is used
func (m *DeviceapiUpdateDeviceDetailsResponseV1) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeviceapiUpdateDeviceDetailsResponseV1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeviceapiUpdateDeviceDetailsResponseV1) UnmarshalBinary(b []byte) error {
	var res DeviceapiUpdateDeviceDetailsResponseV1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
