// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DomainExternalAssetCloudVM domain external asset cloud VM
//
// swagger:model domain.ExternalAssetCloudVM
type DomainExternalAssetCloudVM struct {

	// The VM description
	Description string `json:"description,omitempty"`

	// The ID of the cloud VM
	InstanceID string `json:"instance_id,omitempty"`

	// The lifecycle phase
	Lifecycle string `json:"lifecycle,omitempty"`

	// MAC address of the VM
	MacAddress string `json:"mac_address,omitempty"`

	// VM owner ID
	OwnerID string `json:"owner_id,omitempty"`

	// VM platform information
	Platform string `json:"platform,omitempty"`

	// VM private IP address
	PrivateIP string `json:"private_ip,omitempty"`

	// VM public IP address
	PublicIP string `json:"public_ip,omitempty"`

	// The cloud region
	Region string `json:"region,omitempty"`

	// Security groups
	SecurityGroups []string `json:"security_groups"`

	// The VM source image
	Source string `json:"source,omitempty"`

	// Connectivity status of the cloud VM
	Status string `json:"status,omitempty"`
}

// Validate validates this domain external asset cloud VM
func (m *DomainExternalAssetCloudVM) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this domain external asset cloud VM based on context it is used
func (m *DomainExternalAssetCloudVM) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainExternalAssetCloudVM) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainExternalAssetCloudVM) UnmarshalBinary(b []byte) error {
	var res DomainExternalAssetCloudVM
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
