// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DomainDiscoverAPIDeviceSlot domain discover API device slot
//
// swagger:model domain.DiscoverAPIDeviceSlot
type DomainDiscoverAPIDeviceSlot struct {

	// The Firmware of the Rack Slot of IoT Asset
	SlotFirmware string `json:"slot_firmware,omitempty"`

	// The IoT asset's IP address
	SlotIPAddress string `json:"slot_ip_address,omitempty"`

	// The IoT asset's MAC address
	SlotMacAddress string `json:"slot_mac_address,omitempty"`

	// The Model of the Rack Slot of IoT Asset
	SlotModel string `json:"slot_model,omitempty"`

	// The Name of the Rack Slot of IoT Asset
	SlotName string `json:"slot_name,omitempty"`

	// The Slot Number of the Rack Slot of IoT Asset
	SlotNumber int32 `json:"slot_number,omitempty"`

	// The Serial Number of the Rack Slot of IoT Asset
	SlotSerialNumber string `json:"slot_serial_number,omitempty"`

	// The IoT asset's slot type
	SlotType string `json:"slot_type,omitempty"`

	// The Vendor of the Rack Slot of IoT Asset
	SlotVendor string `json:"slot_vendor,omitempty"`
}

// Validate validates this domain discover API device slot
func (m *DomainDiscoverAPIDeviceSlot) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this domain discover API device slot based on context it is used
func (m *DomainDiscoverAPIDeviceSlot) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainDiscoverAPIDeviceSlot) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainDiscoverAPIDeviceSlot) UnmarshalBinary(b []byte) error {
	var res DomainDiscoverAPIDeviceSlot
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
