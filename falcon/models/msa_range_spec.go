// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MsaRangeSpec msa range spec
//
// swagger:model msa.RangeSpec
type MsaRangeSpec struct {

	// from
	// Required: true
	From *float64 `json:"From"`

	// to
	// Required: true
	To *float64 `json:"To"`
}

// Validate validates this msa range spec
func (m *MsaRangeSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFrom(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MsaRangeSpec) validateFrom(formats strfmt.Registry) error {

	if err := validate.Required("From", "body", m.From); err != nil {
		return err
	}

	return nil
}

func (m *MsaRangeSpec) validateTo(formats strfmt.Registry) error {

	if err := validate.Required("To", "body", m.To); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this msa range spec based on context it is used
func (m *MsaRangeSpec) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MsaRangeSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MsaRangeSpec) UnmarshalBinary(b []byte) error {
	var res MsaRangeSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
