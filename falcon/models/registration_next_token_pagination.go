// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RegistrationNextTokenPagination registration next token pagination
//
// swagger:model registration.NextTokenPagination
type RegistrationNextTokenPagination struct {

	// limit
	// Required: true
	Limit *int32 `json:"limit"`

	// next token
	NextToken string `json:"next_token,omitempty"`

	// offset
	Offset int32 `json:"offset,omitempty"`

	// total
	Total int32 `json:"total,omitempty"`
}

// Validate validates this registration next token pagination
func (m *RegistrationNextTokenPagination) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLimit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RegistrationNextTokenPagination) validateLimit(formats strfmt.Registry) error {

	if err := validate.Required("limit", "body", m.Limit); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this registration next token pagination based on context it is used
func (m *RegistrationNextTokenPagination) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RegistrationNextTokenPagination) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RegistrationNextTokenPagination) UnmarshalBinary(b []byte) error {
	var res RegistrationNextTokenPagination
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
