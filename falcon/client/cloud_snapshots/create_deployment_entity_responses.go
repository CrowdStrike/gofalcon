// Code generated by go-swagger; DO NOT EDIT.

package cloud_snapshots

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// CreateDeploymentEntityReader is a Reader for the CreateDeploymentEntity structure.
type CreateDeploymentEntityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDeploymentEntityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateDeploymentEntityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDeploymentEntityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateDeploymentEntityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateDeploymentEntityTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDeploymentEntityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /snapshots/entities/deployments/v1] CreateDeploymentEntity", response, response.Code())
	}
}

// NewCreateDeploymentEntityOK creates a CreateDeploymentEntityOK with default headers values
func NewCreateDeploymentEntityOK() *CreateDeploymentEntityOK {
	return &CreateDeploymentEntityOK{}
}

/*
CreateDeploymentEntityOK describes a response with status code 200, with default header values.

OK
*/
type CreateDeploymentEntityOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.DeploymentsEntityResponse
}

// IsSuccess returns true when this create deployment entity o k response has a 2xx status code
func (o *CreateDeploymentEntityOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create deployment entity o k response has a 3xx status code
func (o *CreateDeploymentEntityOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create deployment entity o k response has a 4xx status code
func (o *CreateDeploymentEntityOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create deployment entity o k response has a 5xx status code
func (o *CreateDeploymentEntityOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create deployment entity o k response a status code equal to that given
func (o *CreateDeploymentEntityOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create deployment entity o k response
func (o *CreateDeploymentEntityOK) Code() int {
	return 200
}

func (o *CreateDeploymentEntityOK) Error() string {
	return fmt.Sprintf("[POST /snapshots/entities/deployments/v1][%d] createDeploymentEntityOK  %+v", 200, o.Payload)
}

func (o *CreateDeploymentEntityOK) String() string {
	return fmt.Sprintf("[POST /snapshots/entities/deployments/v1][%d] createDeploymentEntityOK  %+v", 200, o.Payload)
}

func (o *CreateDeploymentEntityOK) GetPayload() *models.DeploymentsEntityResponse {
	return o.Payload
}

func (o *CreateDeploymentEntityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.DeploymentsEntityResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDeploymentEntityBadRequest creates a CreateDeploymentEntityBadRequest with default headers values
func NewCreateDeploymentEntityBadRequest() *CreateDeploymentEntityBadRequest {
	return &CreateDeploymentEntityBadRequest{}
}

/*
CreateDeploymentEntityBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateDeploymentEntityBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this create deployment entity bad request response has a 2xx status code
func (o *CreateDeploymentEntityBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create deployment entity bad request response has a 3xx status code
func (o *CreateDeploymentEntityBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create deployment entity bad request response has a 4xx status code
func (o *CreateDeploymentEntityBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create deployment entity bad request response has a 5xx status code
func (o *CreateDeploymentEntityBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create deployment entity bad request response a status code equal to that given
func (o *CreateDeploymentEntityBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create deployment entity bad request response
func (o *CreateDeploymentEntityBadRequest) Code() int {
	return 400
}

func (o *CreateDeploymentEntityBadRequest) Error() string {
	return fmt.Sprintf("[POST /snapshots/entities/deployments/v1][%d] createDeploymentEntityBadRequest  %+v", 400, o.Payload)
}

func (o *CreateDeploymentEntityBadRequest) String() string {
	return fmt.Sprintf("[POST /snapshots/entities/deployments/v1][%d] createDeploymentEntityBadRequest  %+v", 400, o.Payload)
}

func (o *CreateDeploymentEntityBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CreateDeploymentEntityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDeploymentEntityForbidden creates a CreateDeploymentEntityForbidden with default headers values
func NewCreateDeploymentEntityForbidden() *CreateDeploymentEntityForbidden {
	return &CreateDeploymentEntityForbidden{}
}

/*
CreateDeploymentEntityForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateDeploymentEntityForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this create deployment entity forbidden response has a 2xx status code
func (o *CreateDeploymentEntityForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create deployment entity forbidden response has a 3xx status code
func (o *CreateDeploymentEntityForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create deployment entity forbidden response has a 4xx status code
func (o *CreateDeploymentEntityForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create deployment entity forbidden response has a 5xx status code
func (o *CreateDeploymentEntityForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create deployment entity forbidden response a status code equal to that given
func (o *CreateDeploymentEntityForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create deployment entity forbidden response
func (o *CreateDeploymentEntityForbidden) Code() int {
	return 403
}

func (o *CreateDeploymentEntityForbidden) Error() string {
	return fmt.Sprintf("[POST /snapshots/entities/deployments/v1][%d] createDeploymentEntityForbidden  %+v", 403, o.Payload)
}

func (o *CreateDeploymentEntityForbidden) String() string {
	return fmt.Sprintf("[POST /snapshots/entities/deployments/v1][%d] createDeploymentEntityForbidden  %+v", 403, o.Payload)
}

func (o *CreateDeploymentEntityForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CreateDeploymentEntityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDeploymentEntityTooManyRequests creates a CreateDeploymentEntityTooManyRequests with default headers values
func NewCreateDeploymentEntityTooManyRequests() *CreateDeploymentEntityTooManyRequests {
	return &CreateDeploymentEntityTooManyRequests{}
}

/*
CreateDeploymentEntityTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CreateDeploymentEntityTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this create deployment entity too many requests response has a 2xx status code
func (o *CreateDeploymentEntityTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create deployment entity too many requests response has a 3xx status code
func (o *CreateDeploymentEntityTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create deployment entity too many requests response has a 4xx status code
func (o *CreateDeploymentEntityTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create deployment entity too many requests response has a 5xx status code
func (o *CreateDeploymentEntityTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create deployment entity too many requests response a status code equal to that given
func (o *CreateDeploymentEntityTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create deployment entity too many requests response
func (o *CreateDeploymentEntityTooManyRequests) Code() int {
	return 429
}

func (o *CreateDeploymentEntityTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /snapshots/entities/deployments/v1][%d] createDeploymentEntityTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateDeploymentEntityTooManyRequests) String() string {
	return fmt.Sprintf("[POST /snapshots/entities/deployments/v1][%d] createDeploymentEntityTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateDeploymentEntityTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CreateDeploymentEntityTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDeploymentEntityInternalServerError creates a CreateDeploymentEntityInternalServerError with default headers values
func NewCreateDeploymentEntityInternalServerError() *CreateDeploymentEntityInternalServerError {
	return &CreateDeploymentEntityInternalServerError{}
}

/*
CreateDeploymentEntityInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateDeploymentEntityInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this create deployment entity internal server error response has a 2xx status code
func (o *CreateDeploymentEntityInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create deployment entity internal server error response has a 3xx status code
func (o *CreateDeploymentEntityInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create deployment entity internal server error response has a 4xx status code
func (o *CreateDeploymentEntityInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create deployment entity internal server error response has a 5xx status code
func (o *CreateDeploymentEntityInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create deployment entity internal server error response a status code equal to that given
func (o *CreateDeploymentEntityInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create deployment entity internal server error response
func (o *CreateDeploymentEntityInternalServerError) Code() int {
	return 500
}

func (o *CreateDeploymentEntityInternalServerError) Error() string {
	return fmt.Sprintf("[POST /snapshots/entities/deployments/v1][%d] createDeploymentEntityInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateDeploymentEntityInternalServerError) String() string {
	return fmt.Sprintf("[POST /snapshots/entities/deployments/v1][%d] createDeploymentEntityInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateDeploymentEntityInternalServerError) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CreateDeploymentEntityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
