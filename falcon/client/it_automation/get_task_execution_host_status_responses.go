// Code generated by go-swagger; DO NOT EDIT.

package it_automation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// GetTaskExecutionHostStatusReader is a Reader for the GetTaskExecutionHostStatus structure.
type GetTaskExecutionHostStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTaskExecutionHostStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTaskExecutionHostStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTaskExecutionHostStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /it-automation/entities/task-execution-host-status/v1] GetTaskExecutionHostStatus", response, response.Code())
	}
}

// NewGetTaskExecutionHostStatusOK creates a GetTaskExecutionHostStatusOK with default headers values
func NewGetTaskExecutionHostStatusOK() *GetTaskExecutionHostStatusOK {
	return &GetTaskExecutionHostStatusOK{}
}

/*
GetTaskExecutionHostStatusOK describes a response with status code 200, with default header values.

OK
*/
type GetTaskExecutionHostStatusOK struct {
	Payload *models.TaskexecutionsGetTaskExecutionHostStatusResponse
}

// IsSuccess returns true when this get task execution host status o k response has a 2xx status code
func (o *GetTaskExecutionHostStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get task execution host status o k response has a 3xx status code
func (o *GetTaskExecutionHostStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task execution host status o k response has a 4xx status code
func (o *GetTaskExecutionHostStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get task execution host status o k response has a 5xx status code
func (o *GetTaskExecutionHostStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get task execution host status o k response a status code equal to that given
func (o *GetTaskExecutionHostStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get task execution host status o k response
func (o *GetTaskExecutionHostStatusOK) Code() int {
	return 200
}

func (o *GetTaskExecutionHostStatusOK) Error() string {
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-host-status/v1][%d] getTaskExecutionHostStatusOK  %+v", 200, o.Payload)
}

func (o *GetTaskExecutionHostStatusOK) String() string {
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-host-status/v1][%d] getTaskExecutionHostStatusOK  %+v", 200, o.Payload)
}

func (o *GetTaskExecutionHostStatusOK) GetPayload() *models.TaskexecutionsGetTaskExecutionHostStatusResponse {
	return o.Payload
}

func (o *GetTaskExecutionHostStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskexecutionsGetTaskExecutionHostStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskExecutionHostStatusBadRequest creates a GetTaskExecutionHostStatusBadRequest with default headers values
func NewGetTaskExecutionHostStatusBadRequest() *GetTaskExecutionHostStatusBadRequest {
	return &GetTaskExecutionHostStatusBadRequest{}
}

/*
GetTaskExecutionHostStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTaskExecutionHostStatusBadRequest struct {
	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this get task execution host status bad request response has a 2xx status code
func (o *GetTaskExecutionHostStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get task execution host status bad request response has a 3xx status code
func (o *GetTaskExecutionHostStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get task execution host status bad request response has a 4xx status code
func (o *GetTaskExecutionHostStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get task execution host status bad request response has a 5xx status code
func (o *GetTaskExecutionHostStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get task execution host status bad request response a status code equal to that given
func (o *GetTaskExecutionHostStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get task execution host status bad request response
func (o *GetTaskExecutionHostStatusBadRequest) Code() int {
	return 400
}

func (o *GetTaskExecutionHostStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-host-status/v1][%d] getTaskExecutionHostStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetTaskExecutionHostStatusBadRequest) String() string {
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-host-status/v1][%d] getTaskExecutionHostStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetTaskExecutionHostStatusBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *GetTaskExecutionHostStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
