// Code generated by go-swagger; DO NOT EDIT.

package it_automation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// ITAutomationStartExecutionResultsSearchReader is a Reader for the ITAutomationStartExecutionResultsSearch structure.
type ITAutomationStartExecutionResultsSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ITAutomationStartExecutionResultsSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewITAutomationStartExecutionResultsSearchCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewITAutomationStartExecutionResultsSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewITAutomationStartExecutionResultsSearchTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewITAutomationStartExecutionResultsSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /it-automation/entities/task-execution-results-search/v1] ITAutomationStartExecutionResultsSearch", response, response.Code())
	}
}

// NewITAutomationStartExecutionResultsSearchCreated creates a ITAutomationStartExecutionResultsSearchCreated with default headers values
func NewITAutomationStartExecutionResultsSearchCreated() *ITAutomationStartExecutionResultsSearchCreated {
	return &ITAutomationStartExecutionResultsSearchCreated{}
}

/*
ITAutomationStartExecutionResultsSearchCreated describes a response with status code 201, with default header values.

Created
*/
type ITAutomationStartExecutionResultsSearchCreated struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.ItautomationSearchStatusResponse
}

// IsSuccess returns true when this i t automation start execution results search created response has a 2xx status code
func (o *ITAutomationStartExecutionResultsSearchCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this i t automation start execution results search created response has a 3xx status code
func (o *ITAutomationStartExecutionResultsSearchCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation start execution results search created response has a 4xx status code
func (o *ITAutomationStartExecutionResultsSearchCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this i t automation start execution results search created response has a 5xx status code
func (o *ITAutomationStartExecutionResultsSearchCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation start execution results search created response a status code equal to that given
func (o *ITAutomationStartExecutionResultsSearchCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the i t automation start execution results search created response
func (o *ITAutomationStartExecutionResultsSearchCreated) Code() int {
	return 201
}

func (o *ITAutomationStartExecutionResultsSearchCreated) Error() string {
	return fmt.Sprintf("[POST /it-automation/entities/task-execution-results-search/v1][%d] iTAutomationStartExecutionResultsSearchCreated  %+v", 201, o.Payload)
}

func (o *ITAutomationStartExecutionResultsSearchCreated) String() string {
	return fmt.Sprintf("[POST /it-automation/entities/task-execution-results-search/v1][%d] iTAutomationStartExecutionResultsSearchCreated  %+v", 201, o.Payload)
}

func (o *ITAutomationStartExecutionResultsSearchCreated) GetPayload() *models.ItautomationSearchStatusResponse {
	return o.Payload
}

func (o *ITAutomationStartExecutionResultsSearchCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.ItautomationSearchStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationStartExecutionResultsSearchForbidden creates a ITAutomationStartExecutionResultsSearchForbidden with default headers values
func NewITAutomationStartExecutionResultsSearchForbidden() *ITAutomationStartExecutionResultsSearchForbidden {
	return &ITAutomationStartExecutionResultsSearchForbidden{}
}

/*
ITAutomationStartExecutionResultsSearchForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ITAutomationStartExecutionResultsSearchForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this i t automation start execution results search forbidden response has a 2xx status code
func (o *ITAutomationStartExecutionResultsSearchForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation start execution results search forbidden response has a 3xx status code
func (o *ITAutomationStartExecutionResultsSearchForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation start execution results search forbidden response has a 4xx status code
func (o *ITAutomationStartExecutionResultsSearchForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this i t automation start execution results search forbidden response has a 5xx status code
func (o *ITAutomationStartExecutionResultsSearchForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation start execution results search forbidden response a status code equal to that given
func (o *ITAutomationStartExecutionResultsSearchForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the i t automation start execution results search forbidden response
func (o *ITAutomationStartExecutionResultsSearchForbidden) Code() int {
	return 403
}

func (o *ITAutomationStartExecutionResultsSearchForbidden) Error() string {
	return fmt.Sprintf("[POST /it-automation/entities/task-execution-results-search/v1][%d] iTAutomationStartExecutionResultsSearchForbidden  %+v", 403, o.Payload)
}

func (o *ITAutomationStartExecutionResultsSearchForbidden) String() string {
	return fmt.Sprintf("[POST /it-automation/entities/task-execution-results-search/v1][%d] iTAutomationStartExecutionResultsSearchForbidden  %+v", 403, o.Payload)
}

func (o *ITAutomationStartExecutionResultsSearchForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *ITAutomationStartExecutionResultsSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationStartExecutionResultsSearchTooManyRequests creates a ITAutomationStartExecutionResultsSearchTooManyRequests with default headers values
func NewITAutomationStartExecutionResultsSearchTooManyRequests() *ITAutomationStartExecutionResultsSearchTooManyRequests {
	return &ITAutomationStartExecutionResultsSearchTooManyRequests{}
}

/*
ITAutomationStartExecutionResultsSearchTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type ITAutomationStartExecutionResultsSearchTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this i t automation start execution results search too many requests response has a 2xx status code
func (o *ITAutomationStartExecutionResultsSearchTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation start execution results search too many requests response has a 3xx status code
func (o *ITAutomationStartExecutionResultsSearchTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation start execution results search too many requests response has a 4xx status code
func (o *ITAutomationStartExecutionResultsSearchTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this i t automation start execution results search too many requests response has a 5xx status code
func (o *ITAutomationStartExecutionResultsSearchTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation start execution results search too many requests response a status code equal to that given
func (o *ITAutomationStartExecutionResultsSearchTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the i t automation start execution results search too many requests response
func (o *ITAutomationStartExecutionResultsSearchTooManyRequests) Code() int {
	return 429
}

func (o *ITAutomationStartExecutionResultsSearchTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /it-automation/entities/task-execution-results-search/v1][%d] iTAutomationStartExecutionResultsSearchTooManyRequests  %+v", 429, o.Payload)
}

func (o *ITAutomationStartExecutionResultsSearchTooManyRequests) String() string {
	return fmt.Sprintf("[POST /it-automation/entities/task-execution-results-search/v1][%d] iTAutomationStartExecutionResultsSearchTooManyRequests  %+v", 429, o.Payload)
}

func (o *ITAutomationStartExecutionResultsSearchTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *ITAutomationStartExecutionResultsSearchTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationStartExecutionResultsSearchInternalServerError creates a ITAutomationStartExecutionResultsSearchInternalServerError with default headers values
func NewITAutomationStartExecutionResultsSearchInternalServerError() *ITAutomationStartExecutionResultsSearchInternalServerError {
	return &ITAutomationStartExecutionResultsSearchInternalServerError{}
}

/*
ITAutomationStartExecutionResultsSearchInternalServerError describes a response with status code 500, with default header values.

Unexpected Error
*/
type ITAutomationStartExecutionResultsSearchInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this i t automation start execution results search internal server error response has a 2xx status code
func (o *ITAutomationStartExecutionResultsSearchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation start execution results search internal server error response has a 3xx status code
func (o *ITAutomationStartExecutionResultsSearchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation start execution results search internal server error response has a 4xx status code
func (o *ITAutomationStartExecutionResultsSearchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this i t automation start execution results search internal server error response has a 5xx status code
func (o *ITAutomationStartExecutionResultsSearchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this i t automation start execution results search internal server error response a status code equal to that given
func (o *ITAutomationStartExecutionResultsSearchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the i t automation start execution results search internal server error response
func (o *ITAutomationStartExecutionResultsSearchInternalServerError) Code() int {
	return 500
}

func (o *ITAutomationStartExecutionResultsSearchInternalServerError) Error() string {
	return fmt.Sprintf("[POST /it-automation/entities/task-execution-results-search/v1][%d] iTAutomationStartExecutionResultsSearchInternalServerError  %+v", 500, o.Payload)
}

func (o *ITAutomationStartExecutionResultsSearchInternalServerError) String() string {
	return fmt.Sprintf("[POST /it-automation/entities/task-execution-results-search/v1][%d] iTAutomationStartExecutionResultsSearchInternalServerError  %+v", 500, o.Payload)
}

func (o *ITAutomationStartExecutionResultsSearchInternalServerError) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *ITAutomationStartExecutionResultsSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
