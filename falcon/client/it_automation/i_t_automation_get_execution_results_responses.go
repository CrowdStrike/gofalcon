// Code generated by go-swagger; DO NOT EDIT.

package it_automation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// ITAutomationGetExecutionResultsReader is a Reader for the ITAutomationGetExecutionResults structure.
type ITAutomationGetExecutionResultsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ITAutomationGetExecutionResultsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewITAutomationGetExecutionResultsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewITAutomationGetExecutionResultsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewITAutomationGetExecutionResultsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewITAutomationGetExecutionResultsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewITAutomationGetExecutionResultsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /it-automation/entities/task-execution-results/v1] ITAutomationGetExecutionResults", response, response.Code())
	}
}

// NewITAutomationGetExecutionResultsOK creates a ITAutomationGetExecutionResultsOK with default headers values
func NewITAutomationGetExecutionResultsOK() *ITAutomationGetExecutionResultsOK {
	return &ITAutomationGetExecutionResultsOK{}
}

/*
ITAutomationGetExecutionResultsOK describes a response with status code 200, with default header values.

OK
*/
type ITAutomationGetExecutionResultsOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.ItautomationTaskExecutionResultsResponse
}

// IsSuccess returns true when this i t automation get execution results o k response has a 2xx status code
func (o *ITAutomationGetExecutionResultsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this i t automation get execution results o k response has a 3xx status code
func (o *ITAutomationGetExecutionResultsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation get execution results o k response has a 4xx status code
func (o *ITAutomationGetExecutionResultsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this i t automation get execution results o k response has a 5xx status code
func (o *ITAutomationGetExecutionResultsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation get execution results o k response a status code equal to that given
func (o *ITAutomationGetExecutionResultsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the i t automation get execution results o k response
func (o *ITAutomationGetExecutionResultsOK) Code() int {
	return 200
}

func (o *ITAutomationGetExecutionResultsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] iTAutomationGetExecutionResultsOK %s", 200, payload)
}

func (o *ITAutomationGetExecutionResultsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] iTAutomationGetExecutionResultsOK %s", 200, payload)
}

func (o *ITAutomationGetExecutionResultsOK) GetPayload() *models.ItautomationTaskExecutionResultsResponse {
	return o.Payload
}

func (o *ITAutomationGetExecutionResultsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.ItautomationTaskExecutionResultsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationGetExecutionResultsBadRequest creates a ITAutomationGetExecutionResultsBadRequest with default headers values
func NewITAutomationGetExecutionResultsBadRequest() *ITAutomationGetExecutionResultsBadRequest {
	return &ITAutomationGetExecutionResultsBadRequest{}
}

/*
ITAutomationGetExecutionResultsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ITAutomationGetExecutionResultsBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this i t automation get execution results bad request response has a 2xx status code
func (o *ITAutomationGetExecutionResultsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation get execution results bad request response has a 3xx status code
func (o *ITAutomationGetExecutionResultsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation get execution results bad request response has a 4xx status code
func (o *ITAutomationGetExecutionResultsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this i t automation get execution results bad request response has a 5xx status code
func (o *ITAutomationGetExecutionResultsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation get execution results bad request response a status code equal to that given
func (o *ITAutomationGetExecutionResultsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the i t automation get execution results bad request response
func (o *ITAutomationGetExecutionResultsBadRequest) Code() int {
	return 400
}

func (o *ITAutomationGetExecutionResultsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] iTAutomationGetExecutionResultsBadRequest %s", 400, payload)
}

func (o *ITAutomationGetExecutionResultsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] iTAutomationGetExecutionResultsBadRequest %s", 400, payload)
}

func (o *ITAutomationGetExecutionResultsBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *ITAutomationGetExecutionResultsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationGetExecutionResultsForbidden creates a ITAutomationGetExecutionResultsForbidden with default headers values
func NewITAutomationGetExecutionResultsForbidden() *ITAutomationGetExecutionResultsForbidden {
	return &ITAutomationGetExecutionResultsForbidden{}
}

/*
ITAutomationGetExecutionResultsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ITAutomationGetExecutionResultsForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this i t automation get execution results forbidden response has a 2xx status code
func (o *ITAutomationGetExecutionResultsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation get execution results forbidden response has a 3xx status code
func (o *ITAutomationGetExecutionResultsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation get execution results forbidden response has a 4xx status code
func (o *ITAutomationGetExecutionResultsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this i t automation get execution results forbidden response has a 5xx status code
func (o *ITAutomationGetExecutionResultsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation get execution results forbidden response a status code equal to that given
func (o *ITAutomationGetExecutionResultsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the i t automation get execution results forbidden response
func (o *ITAutomationGetExecutionResultsForbidden) Code() int {
	return 403
}

func (o *ITAutomationGetExecutionResultsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] iTAutomationGetExecutionResultsForbidden %s", 403, payload)
}

func (o *ITAutomationGetExecutionResultsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] iTAutomationGetExecutionResultsForbidden %s", 403, payload)
}

func (o *ITAutomationGetExecutionResultsForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *ITAutomationGetExecutionResultsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationGetExecutionResultsTooManyRequests creates a ITAutomationGetExecutionResultsTooManyRequests with default headers values
func NewITAutomationGetExecutionResultsTooManyRequests() *ITAutomationGetExecutionResultsTooManyRequests {
	return &ITAutomationGetExecutionResultsTooManyRequests{}
}

/*
ITAutomationGetExecutionResultsTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type ITAutomationGetExecutionResultsTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this i t automation get execution results too many requests response has a 2xx status code
func (o *ITAutomationGetExecutionResultsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation get execution results too many requests response has a 3xx status code
func (o *ITAutomationGetExecutionResultsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation get execution results too many requests response has a 4xx status code
func (o *ITAutomationGetExecutionResultsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this i t automation get execution results too many requests response has a 5xx status code
func (o *ITAutomationGetExecutionResultsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation get execution results too many requests response a status code equal to that given
func (o *ITAutomationGetExecutionResultsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the i t automation get execution results too many requests response
func (o *ITAutomationGetExecutionResultsTooManyRequests) Code() int {
	return 429
}

func (o *ITAutomationGetExecutionResultsTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] iTAutomationGetExecutionResultsTooManyRequests %s", 429, payload)
}

func (o *ITAutomationGetExecutionResultsTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] iTAutomationGetExecutionResultsTooManyRequests %s", 429, payload)
}

func (o *ITAutomationGetExecutionResultsTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *ITAutomationGetExecutionResultsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationGetExecutionResultsInternalServerError creates a ITAutomationGetExecutionResultsInternalServerError with default headers values
func NewITAutomationGetExecutionResultsInternalServerError() *ITAutomationGetExecutionResultsInternalServerError {
	return &ITAutomationGetExecutionResultsInternalServerError{}
}

/*
ITAutomationGetExecutionResultsInternalServerError describes a response with status code 500, with default header values.

Unexpected Error
*/
type ITAutomationGetExecutionResultsInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this i t automation get execution results internal server error response has a 2xx status code
func (o *ITAutomationGetExecutionResultsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation get execution results internal server error response has a 3xx status code
func (o *ITAutomationGetExecutionResultsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation get execution results internal server error response has a 4xx status code
func (o *ITAutomationGetExecutionResultsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this i t automation get execution results internal server error response has a 5xx status code
func (o *ITAutomationGetExecutionResultsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this i t automation get execution results internal server error response a status code equal to that given
func (o *ITAutomationGetExecutionResultsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the i t automation get execution results internal server error response
func (o *ITAutomationGetExecutionResultsInternalServerError) Code() int {
	return 500
}

func (o *ITAutomationGetExecutionResultsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] iTAutomationGetExecutionResultsInternalServerError %s", 500, payload)
}

func (o *ITAutomationGetExecutionResultsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] iTAutomationGetExecutionResultsInternalServerError %s", 500, payload)
}

func (o *ITAutomationGetExecutionResultsInternalServerError) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *ITAutomationGetExecutionResultsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
