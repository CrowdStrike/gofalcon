// Code generated by go-swagger; DO NOT EDIT.

package it_automation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// GetExecutionResultsReader is a Reader for the GetExecutionResults structure.
type GetExecutionResultsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExecutionResultsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExecutionResultsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /it-automation/entities/task-execution-results/v1] GetExecutionResults", response, response.Code())
	}
}

// NewGetExecutionResultsOK creates a GetExecutionResultsOK with default headers values
func NewGetExecutionResultsOK() *GetExecutionResultsOK {
	return &GetExecutionResultsOK{}
}

/*
GetExecutionResultsOK describes a response with status code 200, with default header values.

OK
*/
type GetExecutionResultsOK struct {
	Payload *models.TaskexecresultsTaskExecutionResultsResponse
}

// IsSuccess returns true when this get execution results o k response has a 2xx status code
func (o *GetExecutionResultsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get execution results o k response has a 3xx status code
func (o *GetExecutionResultsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get execution results o k response has a 4xx status code
func (o *GetExecutionResultsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get execution results o k response has a 5xx status code
func (o *GetExecutionResultsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get execution results o k response a status code equal to that given
func (o *GetExecutionResultsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get execution results o k response
func (o *GetExecutionResultsOK) Code() int {
	return 200
}

func (o *GetExecutionResultsOK) Error() string {
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] getExecutionResultsOK  %+v", 200, o.Payload)
}

func (o *GetExecutionResultsOK) String() string {
	return fmt.Sprintf("[GET /it-automation/entities/task-execution-results/v1][%d] getExecutionResultsOK  %+v", 200, o.Payload)
}

func (o *GetExecutionResultsOK) GetPayload() *models.TaskexecresultsTaskExecutionResultsResponse {
	return o.Payload
}

func (o *GetExecutionResultsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskexecresultsTaskExecutionResultsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
