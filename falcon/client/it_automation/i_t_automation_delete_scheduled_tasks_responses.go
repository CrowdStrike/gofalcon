// Code generated by go-swagger; DO NOT EDIT.

package it_automation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// ITAutomationDeleteScheduledTasksReader is a Reader for the ITAutomationDeleteScheduledTasks structure.
type ITAutomationDeleteScheduledTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ITAutomationDeleteScheduledTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewITAutomationDeleteScheduledTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewITAutomationDeleteScheduledTasksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewITAutomationDeleteScheduledTasksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewITAutomationDeleteScheduledTasksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewITAutomationDeleteScheduledTasksTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewITAutomationDeleteScheduledTasksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /it-automation/entities/scheduled-tasks/v1] ITAutomationDeleteScheduledTasks", response, response.Code())
	}
}

// NewITAutomationDeleteScheduledTasksOK creates a ITAutomationDeleteScheduledTasksOK with default headers values
func NewITAutomationDeleteScheduledTasksOK() *ITAutomationDeleteScheduledTasksOK {
	return &ITAutomationDeleteScheduledTasksOK{}
}

/*
ITAutomationDeleteScheduledTasksOK describes a response with status code 200, with default header values.

OK
*/
type ITAutomationDeleteScheduledTasksOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.ItautomationDeleteScheduledTasksResponse
}

// IsSuccess returns true when this i t automation delete scheduled tasks o k response has a 2xx status code
func (o *ITAutomationDeleteScheduledTasksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this i t automation delete scheduled tasks o k response has a 3xx status code
func (o *ITAutomationDeleteScheduledTasksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation delete scheduled tasks o k response has a 4xx status code
func (o *ITAutomationDeleteScheduledTasksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this i t automation delete scheduled tasks o k response has a 5xx status code
func (o *ITAutomationDeleteScheduledTasksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation delete scheduled tasks o k response a status code equal to that given
func (o *ITAutomationDeleteScheduledTasksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the i t automation delete scheduled tasks o k response
func (o *ITAutomationDeleteScheduledTasksOK) Code() int {
	return 200
}

func (o *ITAutomationDeleteScheduledTasksOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksOK %s", 200, payload)
}

func (o *ITAutomationDeleteScheduledTasksOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksOK %s", 200, payload)
}

func (o *ITAutomationDeleteScheduledTasksOK) GetPayload() *models.ItautomationDeleteScheduledTasksResponse {
	return o.Payload
}

func (o *ITAutomationDeleteScheduledTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.ItautomationDeleteScheduledTasksResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationDeleteScheduledTasksBadRequest creates a ITAutomationDeleteScheduledTasksBadRequest with default headers values
func NewITAutomationDeleteScheduledTasksBadRequest() *ITAutomationDeleteScheduledTasksBadRequest {
	return &ITAutomationDeleteScheduledTasksBadRequest{}
}

/*
ITAutomationDeleteScheduledTasksBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ITAutomationDeleteScheduledTasksBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this i t automation delete scheduled tasks bad request response has a 2xx status code
func (o *ITAutomationDeleteScheduledTasksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation delete scheduled tasks bad request response has a 3xx status code
func (o *ITAutomationDeleteScheduledTasksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation delete scheduled tasks bad request response has a 4xx status code
func (o *ITAutomationDeleteScheduledTasksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this i t automation delete scheduled tasks bad request response has a 5xx status code
func (o *ITAutomationDeleteScheduledTasksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation delete scheduled tasks bad request response a status code equal to that given
func (o *ITAutomationDeleteScheduledTasksBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the i t automation delete scheduled tasks bad request response
func (o *ITAutomationDeleteScheduledTasksBadRequest) Code() int {
	return 400
}

func (o *ITAutomationDeleteScheduledTasksBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksBadRequest %s", 400, payload)
}

func (o *ITAutomationDeleteScheduledTasksBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksBadRequest %s", 400, payload)
}

func (o *ITAutomationDeleteScheduledTasksBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *ITAutomationDeleteScheduledTasksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationDeleteScheduledTasksForbidden creates a ITAutomationDeleteScheduledTasksForbidden with default headers values
func NewITAutomationDeleteScheduledTasksForbidden() *ITAutomationDeleteScheduledTasksForbidden {
	return &ITAutomationDeleteScheduledTasksForbidden{}
}

/*
ITAutomationDeleteScheduledTasksForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ITAutomationDeleteScheduledTasksForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this i t automation delete scheduled tasks forbidden response has a 2xx status code
func (o *ITAutomationDeleteScheduledTasksForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation delete scheduled tasks forbidden response has a 3xx status code
func (o *ITAutomationDeleteScheduledTasksForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation delete scheduled tasks forbidden response has a 4xx status code
func (o *ITAutomationDeleteScheduledTasksForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this i t automation delete scheduled tasks forbidden response has a 5xx status code
func (o *ITAutomationDeleteScheduledTasksForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation delete scheduled tasks forbidden response a status code equal to that given
func (o *ITAutomationDeleteScheduledTasksForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the i t automation delete scheduled tasks forbidden response
func (o *ITAutomationDeleteScheduledTasksForbidden) Code() int {
	return 403
}

func (o *ITAutomationDeleteScheduledTasksForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksForbidden %s", 403, payload)
}

func (o *ITAutomationDeleteScheduledTasksForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksForbidden %s", 403, payload)
}

func (o *ITAutomationDeleteScheduledTasksForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *ITAutomationDeleteScheduledTasksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationDeleteScheduledTasksNotFound creates a ITAutomationDeleteScheduledTasksNotFound with default headers values
func NewITAutomationDeleteScheduledTasksNotFound() *ITAutomationDeleteScheduledTasksNotFound {
	return &ITAutomationDeleteScheduledTasksNotFound{}
}

/*
ITAutomationDeleteScheduledTasksNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ITAutomationDeleteScheduledTasksNotFound struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this i t automation delete scheduled tasks not found response has a 2xx status code
func (o *ITAutomationDeleteScheduledTasksNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation delete scheduled tasks not found response has a 3xx status code
func (o *ITAutomationDeleteScheduledTasksNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation delete scheduled tasks not found response has a 4xx status code
func (o *ITAutomationDeleteScheduledTasksNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this i t automation delete scheduled tasks not found response has a 5xx status code
func (o *ITAutomationDeleteScheduledTasksNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation delete scheduled tasks not found response a status code equal to that given
func (o *ITAutomationDeleteScheduledTasksNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the i t automation delete scheduled tasks not found response
func (o *ITAutomationDeleteScheduledTasksNotFound) Code() int {
	return 404
}

func (o *ITAutomationDeleteScheduledTasksNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksNotFound %s", 404, payload)
}

func (o *ITAutomationDeleteScheduledTasksNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksNotFound %s", 404, payload)
}

func (o *ITAutomationDeleteScheduledTasksNotFound) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *ITAutomationDeleteScheduledTasksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationDeleteScheduledTasksTooManyRequests creates a ITAutomationDeleteScheduledTasksTooManyRequests with default headers values
func NewITAutomationDeleteScheduledTasksTooManyRequests() *ITAutomationDeleteScheduledTasksTooManyRequests {
	return &ITAutomationDeleteScheduledTasksTooManyRequests{}
}

/*
ITAutomationDeleteScheduledTasksTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type ITAutomationDeleteScheduledTasksTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this i t automation delete scheduled tasks too many requests response has a 2xx status code
func (o *ITAutomationDeleteScheduledTasksTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation delete scheduled tasks too many requests response has a 3xx status code
func (o *ITAutomationDeleteScheduledTasksTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation delete scheduled tasks too many requests response has a 4xx status code
func (o *ITAutomationDeleteScheduledTasksTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this i t automation delete scheduled tasks too many requests response has a 5xx status code
func (o *ITAutomationDeleteScheduledTasksTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this i t automation delete scheduled tasks too many requests response a status code equal to that given
func (o *ITAutomationDeleteScheduledTasksTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the i t automation delete scheduled tasks too many requests response
func (o *ITAutomationDeleteScheduledTasksTooManyRequests) Code() int {
	return 429
}

func (o *ITAutomationDeleteScheduledTasksTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksTooManyRequests %s", 429, payload)
}

func (o *ITAutomationDeleteScheduledTasksTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksTooManyRequests %s", 429, payload)
}

func (o *ITAutomationDeleteScheduledTasksTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *ITAutomationDeleteScheduledTasksTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewITAutomationDeleteScheduledTasksInternalServerError creates a ITAutomationDeleteScheduledTasksInternalServerError with default headers values
func NewITAutomationDeleteScheduledTasksInternalServerError() *ITAutomationDeleteScheduledTasksInternalServerError {
	return &ITAutomationDeleteScheduledTasksInternalServerError{}
}

/*
ITAutomationDeleteScheduledTasksInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ITAutomationDeleteScheduledTasksInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this i t automation delete scheduled tasks internal server error response has a 2xx status code
func (o *ITAutomationDeleteScheduledTasksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this i t automation delete scheduled tasks internal server error response has a 3xx status code
func (o *ITAutomationDeleteScheduledTasksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this i t automation delete scheduled tasks internal server error response has a 4xx status code
func (o *ITAutomationDeleteScheduledTasksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this i t automation delete scheduled tasks internal server error response has a 5xx status code
func (o *ITAutomationDeleteScheduledTasksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this i t automation delete scheduled tasks internal server error response a status code equal to that given
func (o *ITAutomationDeleteScheduledTasksInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the i t automation delete scheduled tasks internal server error response
func (o *ITAutomationDeleteScheduledTasksInternalServerError) Code() int {
	return 500
}

func (o *ITAutomationDeleteScheduledTasksInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksInternalServerError %s", 500, payload)
}

func (o *ITAutomationDeleteScheduledTasksInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /it-automation/entities/scheduled-tasks/v1][%d] iTAutomationDeleteScheduledTasksInternalServerError %s", 500, payload)
}

func (o *ITAutomationDeleteScheduledTasksInternalServerError) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *ITAutomationDeleteScheduledTasksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
