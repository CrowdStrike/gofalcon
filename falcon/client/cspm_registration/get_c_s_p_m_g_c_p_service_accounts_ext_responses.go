// Code generated by go-swagger; DO NOT EDIT.

package cspm_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// GetCSPMGCPServiceAccountsExtReader is a Reader for the GetCSPMGCPServiceAccountsExt structure.
type GetCSPMGCPServiceAccountsExtReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCSPMGCPServiceAccountsExtReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCSPMGCPServiceAccountsExtOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCSPMGCPServiceAccountsExtBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCSPMGCPServiceAccountsExtForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCSPMGCPServiceAccountsExtTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCSPMGCPServiceAccountsExtInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cloud-connect-cspm-gcp/entities/service-accounts/v1] GetCSPMGCPServiceAccountsExt", response, response.Code())
	}
}

// NewGetCSPMGCPServiceAccountsExtOK creates a GetCSPMGCPServiceAccountsExtOK with default headers values
func NewGetCSPMGCPServiceAccountsExtOK() *GetCSPMGCPServiceAccountsExtOK {
	return &GetCSPMGCPServiceAccountsExtOK{}
}

/*
GetCSPMGCPServiceAccountsExtOK describes a response with status code 200, with default header values.

OK
*/
type GetCSPMGCPServiceAccountsExtOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationGCPServiceAccountResponseExtV1
}

// IsSuccess returns true when this get c s p m g c p service accounts ext o k response has a 2xx status code
func (o *GetCSPMGCPServiceAccountsExtOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get c s p m g c p service accounts ext o k response has a 3xx status code
func (o *GetCSPMGCPServiceAccountsExtOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m g c p service accounts ext o k response has a 4xx status code
func (o *GetCSPMGCPServiceAccountsExtOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c s p m g c p service accounts ext o k response has a 5xx status code
func (o *GetCSPMGCPServiceAccountsExtOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get c s p m g c p service accounts ext o k response a status code equal to that given
func (o *GetCSPMGCPServiceAccountsExtOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get c s p m g c p service accounts ext o k response
func (o *GetCSPMGCPServiceAccountsExtOK) Code() int {
	return 200
}

func (o *GetCSPMGCPServiceAccountsExtOK) Error() string {
	return fmt.Sprintf("[GET /cloud-connect-cspm-gcp/entities/service-accounts/v1][%d] getCSPMGCPServiceAccountsExtOK  %+v", 200, o.Payload)
}

func (o *GetCSPMGCPServiceAccountsExtOK) String() string {
	return fmt.Sprintf("[GET /cloud-connect-cspm-gcp/entities/service-accounts/v1][%d] getCSPMGCPServiceAccountsExtOK  %+v", 200, o.Payload)
}

func (o *GetCSPMGCPServiceAccountsExtOK) GetPayload() *models.RegistrationGCPServiceAccountResponseExtV1 {
	return o.Payload
}

func (o *GetCSPMGCPServiceAccountsExtOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationGCPServiceAccountResponseExtV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCSPMGCPServiceAccountsExtBadRequest creates a GetCSPMGCPServiceAccountsExtBadRequest with default headers values
func NewGetCSPMGCPServiceAccountsExtBadRequest() *GetCSPMGCPServiceAccountsExtBadRequest {
	return &GetCSPMGCPServiceAccountsExtBadRequest{}
}

/*
GetCSPMGCPServiceAccountsExtBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetCSPMGCPServiceAccountsExtBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationGCPServiceAccountResponseExtV1
}

// IsSuccess returns true when this get c s p m g c p service accounts ext bad request response has a 2xx status code
func (o *GetCSPMGCPServiceAccountsExtBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s p m g c p service accounts ext bad request response has a 3xx status code
func (o *GetCSPMGCPServiceAccountsExtBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m g c p service accounts ext bad request response has a 4xx status code
func (o *GetCSPMGCPServiceAccountsExtBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c s p m g c p service accounts ext bad request response has a 5xx status code
func (o *GetCSPMGCPServiceAccountsExtBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get c s p m g c p service accounts ext bad request response a status code equal to that given
func (o *GetCSPMGCPServiceAccountsExtBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get c s p m g c p service accounts ext bad request response
func (o *GetCSPMGCPServiceAccountsExtBadRequest) Code() int {
	return 400
}

func (o *GetCSPMGCPServiceAccountsExtBadRequest) Error() string {
	return fmt.Sprintf("[GET /cloud-connect-cspm-gcp/entities/service-accounts/v1][%d] getCSPMGCPServiceAccountsExtBadRequest  %+v", 400, o.Payload)
}

func (o *GetCSPMGCPServiceAccountsExtBadRequest) String() string {
	return fmt.Sprintf("[GET /cloud-connect-cspm-gcp/entities/service-accounts/v1][%d] getCSPMGCPServiceAccountsExtBadRequest  %+v", 400, o.Payload)
}

func (o *GetCSPMGCPServiceAccountsExtBadRequest) GetPayload() *models.RegistrationGCPServiceAccountResponseExtV1 {
	return o.Payload
}

func (o *GetCSPMGCPServiceAccountsExtBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationGCPServiceAccountResponseExtV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCSPMGCPServiceAccountsExtForbidden creates a GetCSPMGCPServiceAccountsExtForbidden with default headers values
func NewGetCSPMGCPServiceAccountsExtForbidden() *GetCSPMGCPServiceAccountsExtForbidden {
	return &GetCSPMGCPServiceAccountsExtForbidden{}
}

/*
GetCSPMGCPServiceAccountsExtForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCSPMGCPServiceAccountsExtForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this get c s p m g c p service accounts ext forbidden response has a 2xx status code
func (o *GetCSPMGCPServiceAccountsExtForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s p m g c p service accounts ext forbidden response has a 3xx status code
func (o *GetCSPMGCPServiceAccountsExtForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m g c p service accounts ext forbidden response has a 4xx status code
func (o *GetCSPMGCPServiceAccountsExtForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c s p m g c p service accounts ext forbidden response has a 5xx status code
func (o *GetCSPMGCPServiceAccountsExtForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get c s p m g c p service accounts ext forbidden response a status code equal to that given
func (o *GetCSPMGCPServiceAccountsExtForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get c s p m g c p service accounts ext forbidden response
func (o *GetCSPMGCPServiceAccountsExtForbidden) Code() int {
	return 403
}

func (o *GetCSPMGCPServiceAccountsExtForbidden) Error() string {
	return fmt.Sprintf("[GET /cloud-connect-cspm-gcp/entities/service-accounts/v1][%d] getCSPMGCPServiceAccountsExtForbidden  %+v", 403, o.Payload)
}

func (o *GetCSPMGCPServiceAccountsExtForbidden) String() string {
	return fmt.Sprintf("[GET /cloud-connect-cspm-gcp/entities/service-accounts/v1][%d] getCSPMGCPServiceAccountsExtForbidden  %+v", 403, o.Payload)
}

func (o *GetCSPMGCPServiceAccountsExtForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *GetCSPMGCPServiceAccountsExtForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCSPMGCPServiceAccountsExtTooManyRequests creates a GetCSPMGCPServiceAccountsExtTooManyRequests with default headers values
func NewGetCSPMGCPServiceAccountsExtTooManyRequests() *GetCSPMGCPServiceAccountsExtTooManyRequests {
	return &GetCSPMGCPServiceAccountsExtTooManyRequests{}
}

/*
GetCSPMGCPServiceAccountsExtTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetCSPMGCPServiceAccountsExtTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this get c s p m g c p service accounts ext too many requests response has a 2xx status code
func (o *GetCSPMGCPServiceAccountsExtTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s p m g c p service accounts ext too many requests response has a 3xx status code
func (o *GetCSPMGCPServiceAccountsExtTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m g c p service accounts ext too many requests response has a 4xx status code
func (o *GetCSPMGCPServiceAccountsExtTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c s p m g c p service accounts ext too many requests response has a 5xx status code
func (o *GetCSPMGCPServiceAccountsExtTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get c s p m g c p service accounts ext too many requests response a status code equal to that given
func (o *GetCSPMGCPServiceAccountsExtTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get c s p m g c p service accounts ext too many requests response
func (o *GetCSPMGCPServiceAccountsExtTooManyRequests) Code() int {
	return 429
}

func (o *GetCSPMGCPServiceAccountsExtTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /cloud-connect-cspm-gcp/entities/service-accounts/v1][%d] getCSPMGCPServiceAccountsExtTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCSPMGCPServiceAccountsExtTooManyRequests) String() string {
	return fmt.Sprintf("[GET /cloud-connect-cspm-gcp/entities/service-accounts/v1][%d] getCSPMGCPServiceAccountsExtTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCSPMGCPServiceAccountsExtTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *GetCSPMGCPServiceAccountsExtTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCSPMGCPServiceAccountsExtInternalServerError creates a GetCSPMGCPServiceAccountsExtInternalServerError with default headers values
func NewGetCSPMGCPServiceAccountsExtInternalServerError() *GetCSPMGCPServiceAccountsExtInternalServerError {
	return &GetCSPMGCPServiceAccountsExtInternalServerError{}
}

/*
GetCSPMGCPServiceAccountsExtInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetCSPMGCPServiceAccountsExtInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationGCPServiceAccountResponseExtV1
}

// IsSuccess returns true when this get c s p m g c p service accounts ext internal server error response has a 2xx status code
func (o *GetCSPMGCPServiceAccountsExtInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s p m g c p service accounts ext internal server error response has a 3xx status code
func (o *GetCSPMGCPServiceAccountsExtInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m g c p service accounts ext internal server error response has a 4xx status code
func (o *GetCSPMGCPServiceAccountsExtInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c s p m g c p service accounts ext internal server error response has a 5xx status code
func (o *GetCSPMGCPServiceAccountsExtInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get c s p m g c p service accounts ext internal server error response a status code equal to that given
func (o *GetCSPMGCPServiceAccountsExtInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get c s p m g c p service accounts ext internal server error response
func (o *GetCSPMGCPServiceAccountsExtInternalServerError) Code() int {
	return 500
}

func (o *GetCSPMGCPServiceAccountsExtInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cloud-connect-cspm-gcp/entities/service-accounts/v1][%d] getCSPMGCPServiceAccountsExtInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCSPMGCPServiceAccountsExtInternalServerError) String() string {
	return fmt.Sprintf("[GET /cloud-connect-cspm-gcp/entities/service-accounts/v1][%d] getCSPMGCPServiceAccountsExtInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCSPMGCPServiceAccountsExtInternalServerError) GetPayload() *models.RegistrationGCPServiceAccountResponseExtV1 {
	return o.Payload
}

func (o *GetCSPMGCPServiceAccountsExtInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationGCPServiceAccountResponseExtV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
