// Code generated by go-swagger; DO NOT EDIT.

package cspm_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// UpdateCSPMAzureAccountReader is a Reader for the UpdateCSPMAzureAccount structure.
type UpdateCSPMAzureAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCSPMAzureAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateCSPMAzureAccountCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 207:
		result := NewUpdateCSPMAzureAccountMultiStatus()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCSPMAzureAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCSPMAzureAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateCSPMAzureAccountTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCSPMAzureAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /cloud-connect-cspm-azure/entities/account/v1] UpdateCSPMAzureAccount", response, response.Code())
	}
}

// NewUpdateCSPMAzureAccountCreated creates a UpdateCSPMAzureAccountCreated with default headers values
func NewUpdateCSPMAzureAccountCreated() *UpdateCSPMAzureAccountCreated {
	return &UpdateCSPMAzureAccountCreated{}
}

/*
UpdateCSPMAzureAccountCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateCSPMAzureAccountCreated struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationAzureAccountResponseV1
}

// IsSuccess returns true when this update c s p m azure account created response has a 2xx status code
func (o *UpdateCSPMAzureAccountCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update c s p m azure account created response has a 3xx status code
func (o *UpdateCSPMAzureAccountCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update c s p m azure account created response has a 4xx status code
func (o *UpdateCSPMAzureAccountCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update c s p m azure account created response has a 5xx status code
func (o *UpdateCSPMAzureAccountCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update c s p m azure account created response a status code equal to that given
func (o *UpdateCSPMAzureAccountCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update c s p m azure account created response
func (o *UpdateCSPMAzureAccountCreated) Code() int {
	return 201
}

func (o *UpdateCSPMAzureAccountCreated) Error() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountCreated  %+v", 201, o.Payload)
}

func (o *UpdateCSPMAzureAccountCreated) String() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountCreated  %+v", 201, o.Payload)
}

func (o *UpdateCSPMAzureAccountCreated) GetPayload() *models.RegistrationAzureAccountResponseV1 {
	return o.Payload
}

func (o *UpdateCSPMAzureAccountCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationAzureAccountResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCSPMAzureAccountMultiStatus creates a UpdateCSPMAzureAccountMultiStatus with default headers values
func NewUpdateCSPMAzureAccountMultiStatus() *UpdateCSPMAzureAccountMultiStatus {
	return &UpdateCSPMAzureAccountMultiStatus{}
}

/*
UpdateCSPMAzureAccountMultiStatus describes a response with status code 207, with default header values.

Multi-Status
*/
type UpdateCSPMAzureAccountMultiStatus struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationAzureAccountResponseV1
}

// IsSuccess returns true when this update c s p m azure account multi status response has a 2xx status code
func (o *UpdateCSPMAzureAccountMultiStatus) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update c s p m azure account multi status response has a 3xx status code
func (o *UpdateCSPMAzureAccountMultiStatus) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update c s p m azure account multi status response has a 4xx status code
func (o *UpdateCSPMAzureAccountMultiStatus) IsClientError() bool {
	return false
}

// IsServerError returns true when this update c s p m azure account multi status response has a 5xx status code
func (o *UpdateCSPMAzureAccountMultiStatus) IsServerError() bool {
	return false
}

// IsCode returns true when this update c s p m azure account multi status response a status code equal to that given
func (o *UpdateCSPMAzureAccountMultiStatus) IsCode(code int) bool {
	return code == 207
}

// Code gets the status code for the update c s p m azure account multi status response
func (o *UpdateCSPMAzureAccountMultiStatus) Code() int {
	return 207
}

func (o *UpdateCSPMAzureAccountMultiStatus) Error() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountMultiStatus  %+v", 207, o.Payload)
}

func (o *UpdateCSPMAzureAccountMultiStatus) String() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountMultiStatus  %+v", 207, o.Payload)
}

func (o *UpdateCSPMAzureAccountMultiStatus) GetPayload() *models.RegistrationAzureAccountResponseV1 {
	return o.Payload
}

func (o *UpdateCSPMAzureAccountMultiStatus) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationAzureAccountResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCSPMAzureAccountBadRequest creates a UpdateCSPMAzureAccountBadRequest with default headers values
func NewUpdateCSPMAzureAccountBadRequest() *UpdateCSPMAzureAccountBadRequest {
	return &UpdateCSPMAzureAccountBadRequest{}
}

/*
UpdateCSPMAzureAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateCSPMAzureAccountBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationAzureAccountResponseV1
}

// IsSuccess returns true when this update c s p m azure account bad request response has a 2xx status code
func (o *UpdateCSPMAzureAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update c s p m azure account bad request response has a 3xx status code
func (o *UpdateCSPMAzureAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update c s p m azure account bad request response has a 4xx status code
func (o *UpdateCSPMAzureAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update c s p m azure account bad request response has a 5xx status code
func (o *UpdateCSPMAzureAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update c s p m azure account bad request response a status code equal to that given
func (o *UpdateCSPMAzureAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update c s p m azure account bad request response
func (o *UpdateCSPMAzureAccountBadRequest) Code() int {
	return 400
}

func (o *UpdateCSPMAzureAccountBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCSPMAzureAccountBadRequest) String() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCSPMAzureAccountBadRequest) GetPayload() *models.RegistrationAzureAccountResponseV1 {
	return o.Payload
}

func (o *UpdateCSPMAzureAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationAzureAccountResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCSPMAzureAccountForbidden creates a UpdateCSPMAzureAccountForbidden with default headers values
func NewUpdateCSPMAzureAccountForbidden() *UpdateCSPMAzureAccountForbidden {
	return &UpdateCSPMAzureAccountForbidden{}
}

/*
UpdateCSPMAzureAccountForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCSPMAzureAccountForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this update c s p m azure account forbidden response has a 2xx status code
func (o *UpdateCSPMAzureAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update c s p m azure account forbidden response has a 3xx status code
func (o *UpdateCSPMAzureAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update c s p m azure account forbidden response has a 4xx status code
func (o *UpdateCSPMAzureAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update c s p m azure account forbidden response has a 5xx status code
func (o *UpdateCSPMAzureAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update c s p m azure account forbidden response a status code equal to that given
func (o *UpdateCSPMAzureAccountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update c s p m azure account forbidden response
func (o *UpdateCSPMAzureAccountForbidden) Code() int {
	return 403
}

func (o *UpdateCSPMAzureAccountForbidden) Error() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountForbidden  %+v", 403, o.Payload)
}

func (o *UpdateCSPMAzureAccountForbidden) String() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountForbidden  %+v", 403, o.Payload)
}

func (o *UpdateCSPMAzureAccountForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *UpdateCSPMAzureAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCSPMAzureAccountTooManyRequests creates a UpdateCSPMAzureAccountTooManyRequests with default headers values
func NewUpdateCSPMAzureAccountTooManyRequests() *UpdateCSPMAzureAccountTooManyRequests {
	return &UpdateCSPMAzureAccountTooManyRequests{}
}

/*
UpdateCSPMAzureAccountTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type UpdateCSPMAzureAccountTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this update c s p m azure account too many requests response has a 2xx status code
func (o *UpdateCSPMAzureAccountTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update c s p m azure account too many requests response has a 3xx status code
func (o *UpdateCSPMAzureAccountTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update c s p m azure account too many requests response has a 4xx status code
func (o *UpdateCSPMAzureAccountTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update c s p m azure account too many requests response has a 5xx status code
func (o *UpdateCSPMAzureAccountTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update c s p m azure account too many requests response a status code equal to that given
func (o *UpdateCSPMAzureAccountTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the update c s p m azure account too many requests response
func (o *UpdateCSPMAzureAccountTooManyRequests) Code() int {
	return 429
}

func (o *UpdateCSPMAzureAccountTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateCSPMAzureAccountTooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateCSPMAzureAccountTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *UpdateCSPMAzureAccountTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCSPMAzureAccountInternalServerError creates a UpdateCSPMAzureAccountInternalServerError with default headers values
func NewUpdateCSPMAzureAccountInternalServerError() *UpdateCSPMAzureAccountInternalServerError {
	return &UpdateCSPMAzureAccountInternalServerError{}
}

/*
UpdateCSPMAzureAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateCSPMAzureAccountInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationAzureAccountResponseV1
}

// IsSuccess returns true when this update c s p m azure account internal server error response has a 2xx status code
func (o *UpdateCSPMAzureAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update c s p m azure account internal server error response has a 3xx status code
func (o *UpdateCSPMAzureAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update c s p m azure account internal server error response has a 4xx status code
func (o *UpdateCSPMAzureAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update c s p m azure account internal server error response has a 5xx status code
func (o *UpdateCSPMAzureAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update c s p m azure account internal server error response a status code equal to that given
func (o *UpdateCSPMAzureAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update c s p m azure account internal server error response
func (o *UpdateCSPMAzureAccountInternalServerError) Code() int {
	return 500
}

func (o *UpdateCSPMAzureAccountInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateCSPMAzureAccountInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /cloud-connect-cspm-azure/entities/account/v1][%d] updateCSPMAzureAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateCSPMAzureAccountInternalServerError) GetPayload() *models.RegistrationAzureAccountResponseV1 {
	return o.Payload
}

func (o *UpdateCSPMAzureAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationAzureAccountResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
