// Code generated by go-swagger; DO NOT EDIT.

package cspm_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// ValidateCSPMGCPServiceAccountExtReader is a Reader for the ValidateCSPMGCPServiceAccountExt structure.
type ValidateCSPMGCPServiceAccountExtReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateCSPMGCPServiceAccountExtReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateCSPMGCPServiceAccountExtOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 207:
		result := NewValidateCSPMGCPServiceAccountExtMultiStatus()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateCSPMGCPServiceAccountExtBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewValidateCSPMGCPServiceAccountExtForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateCSPMGCPServiceAccountExtNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewValidateCSPMGCPServiceAccountExtTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateCSPMGCPServiceAccountExtInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1] ValidateCSPMGCPServiceAccountExt", response, response.Code())
	}
}

// NewValidateCSPMGCPServiceAccountExtOK creates a ValidateCSPMGCPServiceAccountExtOK with default headers values
func NewValidateCSPMGCPServiceAccountExtOK() *ValidateCSPMGCPServiceAccountExtOK {
	return &ValidateCSPMGCPServiceAccountExtOK{}
}

/*
ValidateCSPMGCPServiceAccountExtOK describes a response with status code 200, with default header values.

Created
*/
type ValidateCSPMGCPServiceAccountExtOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationGCPServiceAccountValidationResponseV1
}

// IsSuccess returns true when this validate c s p m g c p service account ext o k response has a 2xx status code
func (o *ValidateCSPMGCPServiceAccountExtOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate c s p m g c p service account ext o k response has a 3xx status code
func (o *ValidateCSPMGCPServiceAccountExtOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate c s p m g c p service account ext o k response has a 4xx status code
func (o *ValidateCSPMGCPServiceAccountExtOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate c s p m g c p service account ext o k response has a 5xx status code
func (o *ValidateCSPMGCPServiceAccountExtOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate c s p m g c p service account ext o k response a status code equal to that given
func (o *ValidateCSPMGCPServiceAccountExtOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate c s p m g c p service account ext o k response
func (o *ValidateCSPMGCPServiceAccountExtOK) Code() int {
	return 200
}

func (o *ValidateCSPMGCPServiceAccountExtOK) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtOK  %+v", 200, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtOK) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtOK  %+v", 200, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtOK) GetPayload() *models.RegistrationGCPServiceAccountValidationResponseV1 {
	return o.Payload
}

func (o *ValidateCSPMGCPServiceAccountExtOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationGCPServiceAccountValidationResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateCSPMGCPServiceAccountExtMultiStatus creates a ValidateCSPMGCPServiceAccountExtMultiStatus with default headers values
func NewValidateCSPMGCPServiceAccountExtMultiStatus() *ValidateCSPMGCPServiceAccountExtMultiStatus {
	return &ValidateCSPMGCPServiceAccountExtMultiStatus{}
}

/*
ValidateCSPMGCPServiceAccountExtMultiStatus describes a response with status code 207, with default header values.

Multi-Status
*/
type ValidateCSPMGCPServiceAccountExtMultiStatus struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationGCPServiceAccountValidationResponseV1
}

// IsSuccess returns true when this validate c s p m g c p service account ext multi status response has a 2xx status code
func (o *ValidateCSPMGCPServiceAccountExtMultiStatus) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate c s p m g c p service account ext multi status response has a 3xx status code
func (o *ValidateCSPMGCPServiceAccountExtMultiStatus) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate c s p m g c p service account ext multi status response has a 4xx status code
func (o *ValidateCSPMGCPServiceAccountExtMultiStatus) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate c s p m g c p service account ext multi status response has a 5xx status code
func (o *ValidateCSPMGCPServiceAccountExtMultiStatus) IsServerError() bool {
	return false
}

// IsCode returns true when this validate c s p m g c p service account ext multi status response a status code equal to that given
func (o *ValidateCSPMGCPServiceAccountExtMultiStatus) IsCode(code int) bool {
	return code == 207
}

// Code gets the status code for the validate c s p m g c p service account ext multi status response
func (o *ValidateCSPMGCPServiceAccountExtMultiStatus) Code() int {
	return 207
}

func (o *ValidateCSPMGCPServiceAccountExtMultiStatus) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtMultiStatus  %+v", 207, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtMultiStatus) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtMultiStatus  %+v", 207, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtMultiStatus) GetPayload() *models.RegistrationGCPServiceAccountValidationResponseV1 {
	return o.Payload
}

func (o *ValidateCSPMGCPServiceAccountExtMultiStatus) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationGCPServiceAccountValidationResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateCSPMGCPServiceAccountExtBadRequest creates a ValidateCSPMGCPServiceAccountExtBadRequest with default headers values
func NewValidateCSPMGCPServiceAccountExtBadRequest() *ValidateCSPMGCPServiceAccountExtBadRequest {
	return &ValidateCSPMGCPServiceAccountExtBadRequest{}
}

/*
ValidateCSPMGCPServiceAccountExtBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateCSPMGCPServiceAccountExtBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationGCPServiceAccountValidationResponseV1
}

// IsSuccess returns true when this validate c s p m g c p service account ext bad request response has a 2xx status code
func (o *ValidateCSPMGCPServiceAccountExtBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate c s p m g c p service account ext bad request response has a 3xx status code
func (o *ValidateCSPMGCPServiceAccountExtBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate c s p m g c p service account ext bad request response has a 4xx status code
func (o *ValidateCSPMGCPServiceAccountExtBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate c s p m g c p service account ext bad request response has a 5xx status code
func (o *ValidateCSPMGCPServiceAccountExtBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate c s p m g c p service account ext bad request response a status code equal to that given
func (o *ValidateCSPMGCPServiceAccountExtBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the validate c s p m g c p service account ext bad request response
func (o *ValidateCSPMGCPServiceAccountExtBadRequest) Code() int {
	return 400
}

func (o *ValidateCSPMGCPServiceAccountExtBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtBadRequest) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtBadRequest) GetPayload() *models.RegistrationGCPServiceAccountValidationResponseV1 {
	return o.Payload
}

func (o *ValidateCSPMGCPServiceAccountExtBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationGCPServiceAccountValidationResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateCSPMGCPServiceAccountExtForbidden creates a ValidateCSPMGCPServiceAccountExtForbidden with default headers values
func NewValidateCSPMGCPServiceAccountExtForbidden() *ValidateCSPMGCPServiceAccountExtForbidden {
	return &ValidateCSPMGCPServiceAccountExtForbidden{}
}

/*
ValidateCSPMGCPServiceAccountExtForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ValidateCSPMGCPServiceAccountExtForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this validate c s p m g c p service account ext forbidden response has a 2xx status code
func (o *ValidateCSPMGCPServiceAccountExtForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate c s p m g c p service account ext forbidden response has a 3xx status code
func (o *ValidateCSPMGCPServiceAccountExtForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate c s p m g c p service account ext forbidden response has a 4xx status code
func (o *ValidateCSPMGCPServiceAccountExtForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate c s p m g c p service account ext forbidden response has a 5xx status code
func (o *ValidateCSPMGCPServiceAccountExtForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this validate c s p m g c p service account ext forbidden response a status code equal to that given
func (o *ValidateCSPMGCPServiceAccountExtForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the validate c s p m g c p service account ext forbidden response
func (o *ValidateCSPMGCPServiceAccountExtForbidden) Code() int {
	return 403
}

func (o *ValidateCSPMGCPServiceAccountExtForbidden) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtForbidden  %+v", 403, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtForbidden) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtForbidden  %+v", 403, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *ValidateCSPMGCPServiceAccountExtForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateCSPMGCPServiceAccountExtNotFound creates a ValidateCSPMGCPServiceAccountExtNotFound with default headers values
func NewValidateCSPMGCPServiceAccountExtNotFound() *ValidateCSPMGCPServiceAccountExtNotFound {
	return &ValidateCSPMGCPServiceAccountExtNotFound{}
}

/*
ValidateCSPMGCPServiceAccountExtNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateCSPMGCPServiceAccountExtNotFound struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationGCPServiceAccountValidationResponseV1
}

// IsSuccess returns true when this validate c s p m g c p service account ext not found response has a 2xx status code
func (o *ValidateCSPMGCPServiceAccountExtNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate c s p m g c p service account ext not found response has a 3xx status code
func (o *ValidateCSPMGCPServiceAccountExtNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate c s p m g c p service account ext not found response has a 4xx status code
func (o *ValidateCSPMGCPServiceAccountExtNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate c s p m g c p service account ext not found response has a 5xx status code
func (o *ValidateCSPMGCPServiceAccountExtNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate c s p m g c p service account ext not found response a status code equal to that given
func (o *ValidateCSPMGCPServiceAccountExtNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the validate c s p m g c p service account ext not found response
func (o *ValidateCSPMGCPServiceAccountExtNotFound) Code() int {
	return 404
}

func (o *ValidateCSPMGCPServiceAccountExtNotFound) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtNotFound  %+v", 404, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtNotFound) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtNotFound  %+v", 404, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtNotFound) GetPayload() *models.RegistrationGCPServiceAccountValidationResponseV1 {
	return o.Payload
}

func (o *ValidateCSPMGCPServiceAccountExtNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationGCPServiceAccountValidationResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateCSPMGCPServiceAccountExtTooManyRequests creates a ValidateCSPMGCPServiceAccountExtTooManyRequests with default headers values
func NewValidateCSPMGCPServiceAccountExtTooManyRequests() *ValidateCSPMGCPServiceAccountExtTooManyRequests {
	return &ValidateCSPMGCPServiceAccountExtTooManyRequests{}
}

/*
ValidateCSPMGCPServiceAccountExtTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type ValidateCSPMGCPServiceAccountExtTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this validate c s p m g c p service account ext too many requests response has a 2xx status code
func (o *ValidateCSPMGCPServiceAccountExtTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate c s p m g c p service account ext too many requests response has a 3xx status code
func (o *ValidateCSPMGCPServiceAccountExtTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate c s p m g c p service account ext too many requests response has a 4xx status code
func (o *ValidateCSPMGCPServiceAccountExtTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate c s p m g c p service account ext too many requests response has a 5xx status code
func (o *ValidateCSPMGCPServiceAccountExtTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this validate c s p m g c p service account ext too many requests response a status code equal to that given
func (o *ValidateCSPMGCPServiceAccountExtTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the validate c s p m g c p service account ext too many requests response
func (o *ValidateCSPMGCPServiceAccountExtTooManyRequests) Code() int {
	return 429
}

func (o *ValidateCSPMGCPServiceAccountExtTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtTooManyRequests  %+v", 429, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtTooManyRequests) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtTooManyRequests  %+v", 429, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *ValidateCSPMGCPServiceAccountExtTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateCSPMGCPServiceAccountExtInternalServerError creates a ValidateCSPMGCPServiceAccountExtInternalServerError with default headers values
func NewValidateCSPMGCPServiceAccountExtInternalServerError() *ValidateCSPMGCPServiceAccountExtInternalServerError {
	return &ValidateCSPMGCPServiceAccountExtInternalServerError{}
}

/*
ValidateCSPMGCPServiceAccountExtInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ValidateCSPMGCPServiceAccountExtInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationGCPServiceAccountValidationResponseV1
}

// IsSuccess returns true when this validate c s p m g c p service account ext internal server error response has a 2xx status code
func (o *ValidateCSPMGCPServiceAccountExtInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate c s p m g c p service account ext internal server error response has a 3xx status code
func (o *ValidateCSPMGCPServiceAccountExtInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate c s p m g c p service account ext internal server error response has a 4xx status code
func (o *ValidateCSPMGCPServiceAccountExtInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate c s p m g c p service account ext internal server error response has a 5xx status code
func (o *ValidateCSPMGCPServiceAccountExtInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate c s p m g c p service account ext internal server error response a status code equal to that given
func (o *ValidateCSPMGCPServiceAccountExtInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the validate c s p m g c p service account ext internal server error response
func (o *ValidateCSPMGCPServiceAccountExtInternalServerError) Code() int {
	return 500
}

func (o *ValidateCSPMGCPServiceAccountExtInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtInternalServerError) String() string {
	return fmt.Sprintf("[POST /cloud-connect-cspm-gcp/entities/service-accounts/validate/v1][%d] validateCSPMGCPServiceAccountExtInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateCSPMGCPServiceAccountExtInternalServerError) GetPayload() *models.RegistrationGCPServiceAccountValidationResponseV1 {
	return o.Payload
}

func (o *ValidateCSPMGCPServiceAccountExtInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationGCPServiceAccountValidationResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
