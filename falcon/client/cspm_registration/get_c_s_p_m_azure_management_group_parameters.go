// Code generated by go-swagger; DO NOT EDIT.

package cspm_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetCSPMAzureManagementGroupParams creates a new GetCSPMAzureManagementGroupParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetCSPMAzureManagementGroupParams() *GetCSPMAzureManagementGroupParams {
	return &GetCSPMAzureManagementGroupParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetCSPMAzureManagementGroupParamsWithTimeout creates a new GetCSPMAzureManagementGroupParams object
// with the ability to set a timeout on a request.
func NewGetCSPMAzureManagementGroupParamsWithTimeout(timeout time.Duration) *GetCSPMAzureManagementGroupParams {
	return &GetCSPMAzureManagementGroupParams{
		timeout: timeout,
	}
}

// NewGetCSPMAzureManagementGroupParamsWithContext creates a new GetCSPMAzureManagementGroupParams object
// with the ability to set a context for a request.
func NewGetCSPMAzureManagementGroupParamsWithContext(ctx context.Context) *GetCSPMAzureManagementGroupParams {
	return &GetCSPMAzureManagementGroupParams{
		Context: ctx,
	}
}

// NewGetCSPMAzureManagementGroupParamsWithHTTPClient creates a new GetCSPMAzureManagementGroupParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetCSPMAzureManagementGroupParamsWithHTTPClient(client *http.Client) *GetCSPMAzureManagementGroupParams {
	return &GetCSPMAzureManagementGroupParams{
		HTTPClient: client,
	}
}

/*
GetCSPMAzureManagementGroupParams contains all the parameters to send to the API endpoint

	for the get c s p m azure management group operation.

	Typically these are written to a http.Request.
*/
type GetCSPMAzureManagementGroupParams struct {

	/* Limit.

	   The maximum records to return. Defaults to 100.

	   Default: 100
	*/
	Limit *int64

	/* Offset.

	   The offset to start retrieving records from
	*/
	Offset *int64

	/* TenantIds.

	   Tenant ids to filter azure accounts
	*/
	TenantIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get c s p m azure management group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCSPMAzureManagementGroupParams) WithDefaults() *GetCSPMAzureManagementGroupParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get c s p m azure management group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCSPMAzureManagementGroupParams) SetDefaults() {
	var (
		limitDefault = int64(100)
	)

	val := GetCSPMAzureManagementGroupParams{
		Limit: &limitDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) WithTimeout(timeout time.Duration) *GetCSPMAzureManagementGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) WithContext(ctx context.Context) *GetCSPMAzureManagementGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) WithHTTPClient(client *http.Client) *GetCSPMAzureManagementGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) WithLimit(limit *int64) *GetCSPMAzureManagementGroupParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) WithOffset(offset *int64) *GetCSPMAzureManagementGroupParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithTenantIds adds the tenantIds to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) WithTenantIds(tenantIds []string) *GetCSPMAzureManagementGroupParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the get c s p m azure management group params
func (o *GetCSPMAzureManagementGroupParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetCSPMAzureManagementGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.TenantIds != nil {

		// binding items for tenant_ids
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenant_ids
		if err := r.SetQueryParam("tenant_ids", joinedTenantIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetCSPMAzureManagementGroup binds the parameter tenant_ids
func (o *GetCSPMAzureManagementGroupParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: "multi"
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "multi")

	return tenantIdsIS
}
