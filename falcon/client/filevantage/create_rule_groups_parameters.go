// Code generated by go-swagger; DO NOT EDIT.

package filevantage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// NewCreateRuleGroupsParams creates a new CreateRuleGroupsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateRuleGroupsParams() *CreateRuleGroupsParams {
	return &CreateRuleGroupsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateRuleGroupsParamsWithTimeout creates a new CreateRuleGroupsParams object
// with the ability to set a timeout on a request.
func NewCreateRuleGroupsParamsWithTimeout(timeout time.Duration) *CreateRuleGroupsParams {
	return &CreateRuleGroupsParams{
		timeout: timeout,
	}
}

// NewCreateRuleGroupsParamsWithContext creates a new CreateRuleGroupsParams object
// with the ability to set a context for a request.
func NewCreateRuleGroupsParamsWithContext(ctx context.Context) *CreateRuleGroupsParams {
	return &CreateRuleGroupsParams{
		Context: ctx,
	}
}

// NewCreateRuleGroupsParamsWithHTTPClient creates a new CreateRuleGroupsParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateRuleGroupsParamsWithHTTPClient(client *http.Client) *CreateRuleGroupsParams {
	return &CreateRuleGroupsParams{
		HTTPClient: client,
	}
}

/*
CreateRuleGroupsParams contains all the parameters to send to the API endpoint

	for the create rule groups operation.

	Typically these are written to a http.Request.
*/
type CreateRuleGroupsParams struct {

	/* Body.

	    Create a new rule group of a specific type.

	* `name` must be between 1 and 100 characters.

	* `type` must be one of `WindowsFiles`, `WindowsRegistry`, `LinuxFiles` or `MacFiles`.

	* `description` can be between 0 and 500 characters.

	Note: rules are added/removed from rule groups using their dedicated end-points.
	*/
	Body *models.RulegroupsCreateRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create rule groups params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateRuleGroupsParams) WithDefaults() *CreateRuleGroupsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create rule groups params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateRuleGroupsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create rule groups params
func (o *CreateRuleGroupsParams) WithTimeout(timeout time.Duration) *CreateRuleGroupsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create rule groups params
func (o *CreateRuleGroupsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create rule groups params
func (o *CreateRuleGroupsParams) WithContext(ctx context.Context) *CreateRuleGroupsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create rule groups params
func (o *CreateRuleGroupsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create rule groups params
func (o *CreateRuleGroupsParams) WithHTTPClient(client *http.Client) *CreateRuleGroupsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create rule groups params
func (o *CreateRuleGroupsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create rule groups params
func (o *CreateRuleGroupsParams) WithBody(body *models.RulegroupsCreateRequest) *CreateRuleGroupsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create rule groups params
func (o *CreateRuleGroupsParams) SetBody(body *models.RulegroupsCreateRequest) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *CreateRuleGroupsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
