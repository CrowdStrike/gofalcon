// Code generated by go-swagger; DO NOT EDIT.

package cloud_security_compliance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// CloudComplianceRulePostureSummariesReader is a Reader for the CloudComplianceRulePostureSummaries structure.
type CloudComplianceRulePostureSummariesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudComplianceRulePostureSummariesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudComplianceRulePostureSummariesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloudComplianceRulePostureSummariesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloudComplianceRulePostureSummariesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewCloudComplianceRulePostureSummariesRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCloudComplianceRulePostureSummariesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudComplianceRulePostureSummariesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1] cloud-compliance-rule-posture-summaries", response, response.Code())
	}
}

// NewCloudComplianceRulePostureSummariesOK creates a CloudComplianceRulePostureSummariesOK with default headers values
func NewCloudComplianceRulePostureSummariesOK() *CloudComplianceRulePostureSummariesOK {
	return &CloudComplianceRulePostureSummariesOK{}
}

/*
CloudComplianceRulePostureSummariesOK describes a response with status code 200, with default header values.

OK
*/
type CloudComplianceRulePostureSummariesOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.ComplianceRulePostureSummaryResponse
}

// IsSuccess returns true when this cloud compliance rule posture summaries o k response has a 2xx status code
func (o *CloudComplianceRulePostureSummariesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud compliance rule posture summaries o k response has a 3xx status code
func (o *CloudComplianceRulePostureSummariesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud compliance rule posture summaries o k response has a 4xx status code
func (o *CloudComplianceRulePostureSummariesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud compliance rule posture summaries o k response has a 5xx status code
func (o *CloudComplianceRulePostureSummariesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud compliance rule posture summaries o k response a status code equal to that given
func (o *CloudComplianceRulePostureSummariesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cloud compliance rule posture summaries o k response
func (o *CloudComplianceRulePostureSummariesOK) Code() int {
	return 200
}

func (o *CloudComplianceRulePostureSummariesOK) Error() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesOK  %+v", 200, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesOK) String() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesOK  %+v", 200, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesOK) GetPayload() *models.ComplianceRulePostureSummaryResponse {
	return o.Payload
}

func (o *CloudComplianceRulePostureSummariesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.ComplianceRulePostureSummaryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudComplianceRulePostureSummariesBadRequest creates a CloudComplianceRulePostureSummariesBadRequest with default headers values
func NewCloudComplianceRulePostureSummariesBadRequest() *CloudComplianceRulePostureSummariesBadRequest {
	return &CloudComplianceRulePostureSummariesBadRequest{}
}

/*
CloudComplianceRulePostureSummariesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloudComplianceRulePostureSummariesBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RestCursorResponseFields
}

// IsSuccess returns true when this cloud compliance rule posture summaries bad request response has a 2xx status code
func (o *CloudComplianceRulePostureSummariesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud compliance rule posture summaries bad request response has a 3xx status code
func (o *CloudComplianceRulePostureSummariesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud compliance rule posture summaries bad request response has a 4xx status code
func (o *CloudComplianceRulePostureSummariesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud compliance rule posture summaries bad request response has a 5xx status code
func (o *CloudComplianceRulePostureSummariesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud compliance rule posture summaries bad request response a status code equal to that given
func (o *CloudComplianceRulePostureSummariesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cloud compliance rule posture summaries bad request response
func (o *CloudComplianceRulePostureSummariesBadRequest) Code() int {
	return 400
}

func (o *CloudComplianceRulePostureSummariesBadRequest) Error() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesBadRequest  %+v", 400, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesBadRequest) String() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesBadRequest  %+v", 400, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesBadRequest) GetPayload() *models.RestCursorResponseFields {
	return o.Payload
}

func (o *CloudComplianceRulePostureSummariesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RestCursorResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudComplianceRulePostureSummariesForbidden creates a CloudComplianceRulePostureSummariesForbidden with default headers values
func NewCloudComplianceRulePostureSummariesForbidden() *CloudComplianceRulePostureSummariesForbidden {
	return &CloudComplianceRulePostureSummariesForbidden{}
}

/*
CloudComplianceRulePostureSummariesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloudComplianceRulePostureSummariesForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this cloud compliance rule posture summaries forbidden response has a 2xx status code
func (o *CloudComplianceRulePostureSummariesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud compliance rule posture summaries forbidden response has a 3xx status code
func (o *CloudComplianceRulePostureSummariesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud compliance rule posture summaries forbidden response has a 4xx status code
func (o *CloudComplianceRulePostureSummariesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud compliance rule posture summaries forbidden response has a 5xx status code
func (o *CloudComplianceRulePostureSummariesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud compliance rule posture summaries forbidden response a status code equal to that given
func (o *CloudComplianceRulePostureSummariesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cloud compliance rule posture summaries forbidden response
func (o *CloudComplianceRulePostureSummariesForbidden) Code() int {
	return 403
}

func (o *CloudComplianceRulePostureSummariesForbidden) Error() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesForbidden  %+v", 403, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesForbidden) String() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesForbidden  %+v", 403, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CloudComplianceRulePostureSummariesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudComplianceRulePostureSummariesRequestTimeout creates a CloudComplianceRulePostureSummariesRequestTimeout with default headers values
func NewCloudComplianceRulePostureSummariesRequestTimeout() *CloudComplianceRulePostureSummariesRequestTimeout {
	return &CloudComplianceRulePostureSummariesRequestTimeout{}
}

/*
CloudComplianceRulePostureSummariesRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type CloudComplianceRulePostureSummariesRequestTimeout struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RestCursorResponseFields
}

// IsSuccess returns true when this cloud compliance rule posture summaries request timeout response has a 2xx status code
func (o *CloudComplianceRulePostureSummariesRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud compliance rule posture summaries request timeout response has a 3xx status code
func (o *CloudComplianceRulePostureSummariesRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud compliance rule posture summaries request timeout response has a 4xx status code
func (o *CloudComplianceRulePostureSummariesRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud compliance rule posture summaries request timeout response has a 5xx status code
func (o *CloudComplianceRulePostureSummariesRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud compliance rule posture summaries request timeout response a status code equal to that given
func (o *CloudComplianceRulePostureSummariesRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the cloud compliance rule posture summaries request timeout response
func (o *CloudComplianceRulePostureSummariesRequestTimeout) Code() int {
	return 408
}

func (o *CloudComplianceRulePostureSummariesRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesRequestTimeout  %+v", 408, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesRequestTimeout) String() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesRequestTimeout  %+v", 408, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesRequestTimeout) GetPayload() *models.RestCursorResponseFields {
	return o.Payload
}

func (o *CloudComplianceRulePostureSummariesRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RestCursorResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudComplianceRulePostureSummariesTooManyRequests creates a CloudComplianceRulePostureSummariesTooManyRequests with default headers values
func NewCloudComplianceRulePostureSummariesTooManyRequests() *CloudComplianceRulePostureSummariesTooManyRequests {
	return &CloudComplianceRulePostureSummariesTooManyRequests{}
}

/*
CloudComplianceRulePostureSummariesTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CloudComplianceRulePostureSummariesTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this cloud compliance rule posture summaries too many requests response has a 2xx status code
func (o *CloudComplianceRulePostureSummariesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud compliance rule posture summaries too many requests response has a 3xx status code
func (o *CloudComplianceRulePostureSummariesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud compliance rule posture summaries too many requests response has a 4xx status code
func (o *CloudComplianceRulePostureSummariesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud compliance rule posture summaries too many requests response has a 5xx status code
func (o *CloudComplianceRulePostureSummariesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud compliance rule posture summaries too many requests response a status code equal to that given
func (o *CloudComplianceRulePostureSummariesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the cloud compliance rule posture summaries too many requests response
func (o *CloudComplianceRulePostureSummariesTooManyRequests) Code() int {
	return 429
}

func (o *CloudComplianceRulePostureSummariesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesTooManyRequests  %+v", 429, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesTooManyRequests  %+v", 429, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CloudComplianceRulePostureSummariesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudComplianceRulePostureSummariesInternalServerError creates a CloudComplianceRulePostureSummariesInternalServerError with default headers values
func NewCloudComplianceRulePostureSummariesInternalServerError() *CloudComplianceRulePostureSummariesInternalServerError {
	return &CloudComplianceRulePostureSummariesInternalServerError{}
}

/*
CloudComplianceRulePostureSummariesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CloudComplianceRulePostureSummariesInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RestCursorResponseFields
}

// IsSuccess returns true when this cloud compliance rule posture summaries internal server error response has a 2xx status code
func (o *CloudComplianceRulePostureSummariesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud compliance rule posture summaries internal server error response has a 3xx status code
func (o *CloudComplianceRulePostureSummariesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud compliance rule posture summaries internal server error response has a 4xx status code
func (o *CloudComplianceRulePostureSummariesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud compliance rule posture summaries internal server error response has a 5xx status code
func (o *CloudComplianceRulePostureSummariesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud compliance rule posture summaries internal server error response a status code equal to that given
func (o *CloudComplianceRulePostureSummariesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cloud compliance rule posture summaries internal server error response
func (o *CloudComplianceRulePostureSummariesInternalServerError) Code() int {
	return 500
}

func (o *CloudComplianceRulePostureSummariesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesInternalServerError) String() string {
	return fmt.Sprintf("[GET /cloud-security-compliance/entities/rule-posture-summaries/v1][%d] cloudComplianceRulePostureSummariesInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudComplianceRulePostureSummariesInternalServerError) GetPayload() *models.RestCursorResponseFields {
	return o.Payload
}

func (o *CloudComplianceRulePostureSummariesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RestCursorResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
