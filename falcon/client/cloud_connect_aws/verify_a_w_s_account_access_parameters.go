// Code generated by go-swagger; DO NOT EDIT.

package cloud_connect_aws

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewVerifyAWSAccountAccessParams creates a new VerifyAWSAccountAccessParams object
// with the default values initialized.
func NewVerifyAWSAccountAccessParams() *VerifyAWSAccountAccessParams {
	var ()
	return &VerifyAWSAccountAccessParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewVerifyAWSAccountAccessParamsWithTimeout creates a new VerifyAWSAccountAccessParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewVerifyAWSAccountAccessParamsWithTimeout(timeout time.Duration) *VerifyAWSAccountAccessParams {
	var ()
	return &VerifyAWSAccountAccessParams{

		timeout: timeout,
	}
}

// NewVerifyAWSAccountAccessParamsWithContext creates a new VerifyAWSAccountAccessParams object
// with the default values initialized, and the ability to set a context for a request
func NewVerifyAWSAccountAccessParamsWithContext(ctx context.Context) *VerifyAWSAccountAccessParams {
	var ()
	return &VerifyAWSAccountAccessParams{

		Context: ctx,
	}
}

// NewVerifyAWSAccountAccessParamsWithHTTPClient creates a new VerifyAWSAccountAccessParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewVerifyAWSAccountAccessParamsWithHTTPClient(client *http.Client) *VerifyAWSAccountAccessParams {
	var ()
	return &VerifyAWSAccountAccessParams{
		HTTPClient: client,
	}
}

/*VerifyAWSAccountAccessParams contains all the parameters to send to the API endpoint
for the verify a w s account access operation typically these are written to a http.Request
*/
type VerifyAWSAccountAccessParams struct {

	/*Ids
	  IDs of accounts to verify access on

	*/
	Ids []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the verify a w s account access params
func (o *VerifyAWSAccountAccessParams) WithTimeout(timeout time.Duration) *VerifyAWSAccountAccessParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the verify a w s account access params
func (o *VerifyAWSAccountAccessParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the verify a w s account access params
func (o *VerifyAWSAccountAccessParams) WithContext(ctx context.Context) *VerifyAWSAccountAccessParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the verify a w s account access params
func (o *VerifyAWSAccountAccessParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the verify a w s account access params
func (o *VerifyAWSAccountAccessParams) WithHTTPClient(client *http.Client) *VerifyAWSAccountAccessParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the verify a w s account access params
func (o *VerifyAWSAccountAccessParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIds adds the ids to the verify a w s account access params
func (o *VerifyAWSAccountAccessParams) WithIds(ids []string) *VerifyAWSAccountAccessParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the verify a w s account access params
func (o *VerifyAWSAccountAccessParams) SetIds(ids []string) {
	o.Ids = ids
}

// WriteToRequest writes these params to a swagger request
func (o *VerifyAWSAccountAccessParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesIds := o.Ids

	joinedIds := swag.JoinByFormat(valuesIds, "multi")
	// query array param ids
	if err := r.SetQueryParam("ids", joinedIds...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
