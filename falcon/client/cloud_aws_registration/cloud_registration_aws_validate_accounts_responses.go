// Code generated by go-swagger; DO NOT EDIT.

package cloud_aws_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// CloudRegistrationAwsValidateAccountsReader is a Reader for the CloudRegistrationAwsValidateAccounts structure.
type CloudRegistrationAwsValidateAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudRegistrationAwsValidateAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudRegistrationAwsValidateAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloudRegistrationAwsValidateAccountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloudRegistrationAwsValidateAccountsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCloudRegistrationAwsValidateAccountsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudRegistrationAwsValidateAccountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cloud-security-registration-aws/entities/account/validate/v1] cloud-registration-aws-validate-accounts", response, response.Code())
	}
}

// NewCloudRegistrationAwsValidateAccountsOK creates a CloudRegistrationAwsValidateAccountsOK with default headers values
func NewCloudRegistrationAwsValidateAccountsOK() *CloudRegistrationAwsValidateAccountsOK {
	return &CloudRegistrationAwsValidateAccountsOK{}
}

/*
CloudRegistrationAwsValidateAccountsOK describes a response with status code 200, with default header values.

OK
*/
type CloudRegistrationAwsValidateAccountsOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RestAWSAccountValidationResponse
}

// IsSuccess returns true when this cloud registration aws validate accounts o k response has a 2xx status code
func (o *CloudRegistrationAwsValidateAccountsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud registration aws validate accounts o k response has a 3xx status code
func (o *CloudRegistrationAwsValidateAccountsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration aws validate accounts o k response has a 4xx status code
func (o *CloudRegistrationAwsValidateAccountsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud registration aws validate accounts o k response has a 5xx status code
func (o *CloudRegistrationAwsValidateAccountsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration aws validate accounts o k response a status code equal to that given
func (o *CloudRegistrationAwsValidateAccountsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cloud registration aws validate accounts o k response
func (o *CloudRegistrationAwsValidateAccountsOK) Code() int {
	return 200
}

func (o *CloudRegistrationAwsValidateAccountsOK) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-aws/entities/account/validate/v1][%d] cloudRegistrationAwsValidateAccountsOK  %+v", 200, o.Payload)
}

func (o *CloudRegistrationAwsValidateAccountsOK) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-aws/entities/account/validate/v1][%d] cloudRegistrationAwsValidateAccountsOK  %+v", 200, o.Payload)
}

func (o *CloudRegistrationAwsValidateAccountsOK) GetPayload() *models.RestAWSAccountValidationResponse {
	return o.Payload
}

func (o *CloudRegistrationAwsValidateAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RestAWSAccountValidationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAwsValidateAccountsBadRequest creates a CloudRegistrationAwsValidateAccountsBadRequest with default headers values
func NewCloudRegistrationAwsValidateAccountsBadRequest() *CloudRegistrationAwsValidateAccountsBadRequest {
	return &CloudRegistrationAwsValidateAccountsBadRequest{}
}

/*
CloudRegistrationAwsValidateAccountsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloudRegistrationAwsValidateAccountsBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RestAWSAccountValidationResponse
}

// IsSuccess returns true when this cloud registration aws validate accounts bad request response has a 2xx status code
func (o *CloudRegistrationAwsValidateAccountsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration aws validate accounts bad request response has a 3xx status code
func (o *CloudRegistrationAwsValidateAccountsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration aws validate accounts bad request response has a 4xx status code
func (o *CloudRegistrationAwsValidateAccountsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration aws validate accounts bad request response has a 5xx status code
func (o *CloudRegistrationAwsValidateAccountsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration aws validate accounts bad request response a status code equal to that given
func (o *CloudRegistrationAwsValidateAccountsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cloud registration aws validate accounts bad request response
func (o *CloudRegistrationAwsValidateAccountsBadRequest) Code() int {
	return 400
}

func (o *CloudRegistrationAwsValidateAccountsBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-aws/entities/account/validate/v1][%d] cloudRegistrationAwsValidateAccountsBadRequest  %+v", 400, o.Payload)
}

func (o *CloudRegistrationAwsValidateAccountsBadRequest) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-aws/entities/account/validate/v1][%d] cloudRegistrationAwsValidateAccountsBadRequest  %+v", 400, o.Payload)
}

func (o *CloudRegistrationAwsValidateAccountsBadRequest) GetPayload() *models.RestAWSAccountValidationResponse {
	return o.Payload
}

func (o *CloudRegistrationAwsValidateAccountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RestAWSAccountValidationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAwsValidateAccountsForbidden creates a CloudRegistrationAwsValidateAccountsForbidden with default headers values
func NewCloudRegistrationAwsValidateAccountsForbidden() *CloudRegistrationAwsValidateAccountsForbidden {
	return &CloudRegistrationAwsValidateAccountsForbidden{}
}

/*
CloudRegistrationAwsValidateAccountsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloudRegistrationAwsValidateAccountsForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration aws validate accounts forbidden response has a 2xx status code
func (o *CloudRegistrationAwsValidateAccountsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration aws validate accounts forbidden response has a 3xx status code
func (o *CloudRegistrationAwsValidateAccountsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration aws validate accounts forbidden response has a 4xx status code
func (o *CloudRegistrationAwsValidateAccountsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration aws validate accounts forbidden response has a 5xx status code
func (o *CloudRegistrationAwsValidateAccountsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration aws validate accounts forbidden response a status code equal to that given
func (o *CloudRegistrationAwsValidateAccountsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cloud registration aws validate accounts forbidden response
func (o *CloudRegistrationAwsValidateAccountsForbidden) Code() int {
	return 403
}

func (o *CloudRegistrationAwsValidateAccountsForbidden) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-aws/entities/account/validate/v1][%d] cloudRegistrationAwsValidateAccountsForbidden  %+v", 403, o.Payload)
}

func (o *CloudRegistrationAwsValidateAccountsForbidden) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-aws/entities/account/validate/v1][%d] cloudRegistrationAwsValidateAccountsForbidden  %+v", 403, o.Payload)
}

func (o *CloudRegistrationAwsValidateAccountsForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAwsValidateAccountsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAwsValidateAccountsTooManyRequests creates a CloudRegistrationAwsValidateAccountsTooManyRequests with default headers values
func NewCloudRegistrationAwsValidateAccountsTooManyRequests() *CloudRegistrationAwsValidateAccountsTooManyRequests {
	return &CloudRegistrationAwsValidateAccountsTooManyRequests{}
}

/*
CloudRegistrationAwsValidateAccountsTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CloudRegistrationAwsValidateAccountsTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this cloud registration aws validate accounts too many requests response has a 2xx status code
func (o *CloudRegistrationAwsValidateAccountsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration aws validate accounts too many requests response has a 3xx status code
func (o *CloudRegistrationAwsValidateAccountsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration aws validate accounts too many requests response has a 4xx status code
func (o *CloudRegistrationAwsValidateAccountsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration aws validate accounts too many requests response has a 5xx status code
func (o *CloudRegistrationAwsValidateAccountsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration aws validate accounts too many requests response a status code equal to that given
func (o *CloudRegistrationAwsValidateAccountsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the cloud registration aws validate accounts too many requests response
func (o *CloudRegistrationAwsValidateAccountsTooManyRequests) Code() int {
	return 429
}

func (o *CloudRegistrationAwsValidateAccountsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-aws/entities/account/validate/v1][%d] cloudRegistrationAwsValidateAccountsTooManyRequests  %+v", 429, o.Payload)
}

func (o *CloudRegistrationAwsValidateAccountsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-aws/entities/account/validate/v1][%d] cloudRegistrationAwsValidateAccountsTooManyRequests  %+v", 429, o.Payload)
}

func (o *CloudRegistrationAwsValidateAccountsTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CloudRegistrationAwsValidateAccountsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAwsValidateAccountsInternalServerError creates a CloudRegistrationAwsValidateAccountsInternalServerError with default headers values
func NewCloudRegistrationAwsValidateAccountsInternalServerError() *CloudRegistrationAwsValidateAccountsInternalServerError {
	return &CloudRegistrationAwsValidateAccountsInternalServerError{}
}

/*
CloudRegistrationAwsValidateAccountsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CloudRegistrationAwsValidateAccountsInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RestAWSAccountValidationResponse
}

// IsSuccess returns true when this cloud registration aws validate accounts internal server error response has a 2xx status code
func (o *CloudRegistrationAwsValidateAccountsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration aws validate accounts internal server error response has a 3xx status code
func (o *CloudRegistrationAwsValidateAccountsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration aws validate accounts internal server error response has a 4xx status code
func (o *CloudRegistrationAwsValidateAccountsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud registration aws validate accounts internal server error response has a 5xx status code
func (o *CloudRegistrationAwsValidateAccountsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud registration aws validate accounts internal server error response a status code equal to that given
func (o *CloudRegistrationAwsValidateAccountsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cloud registration aws validate accounts internal server error response
func (o *CloudRegistrationAwsValidateAccountsInternalServerError) Code() int {
	return 500
}

func (o *CloudRegistrationAwsValidateAccountsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-aws/entities/account/validate/v1][%d] cloudRegistrationAwsValidateAccountsInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudRegistrationAwsValidateAccountsInternalServerError) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-aws/entities/account/validate/v1][%d] cloudRegistrationAwsValidateAccountsInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudRegistrationAwsValidateAccountsInternalServerError) GetPayload() *models.RestAWSAccountValidationResponse {
	return o.Payload
}

func (o *CloudRegistrationAwsValidateAccountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RestAWSAccountValidationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
