// Code generated by go-swagger; DO NOT EDIT.

package release_notes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// NewGetEntityIDsByQueryPOSTV2Params creates a new GetEntityIDsByQueryPOSTV2Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetEntityIDsByQueryPOSTV2Params() *GetEntityIDsByQueryPOSTV2Params {
	return &GetEntityIDsByQueryPOSTV2Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetEntityIDsByQueryPOSTV2ParamsWithTimeout creates a new GetEntityIDsByQueryPOSTV2Params object
// with the ability to set a timeout on a request.
func NewGetEntityIDsByQueryPOSTV2ParamsWithTimeout(timeout time.Duration) *GetEntityIDsByQueryPOSTV2Params {
	return &GetEntityIDsByQueryPOSTV2Params{
		timeout: timeout,
	}
}

// NewGetEntityIDsByQueryPOSTV2ParamsWithContext creates a new GetEntityIDsByQueryPOSTV2Params object
// with the ability to set a context for a request.
func NewGetEntityIDsByQueryPOSTV2ParamsWithContext(ctx context.Context) *GetEntityIDsByQueryPOSTV2Params {
	return &GetEntityIDsByQueryPOSTV2Params{
		Context: ctx,
	}
}

// NewGetEntityIDsByQueryPOSTV2ParamsWithHTTPClient creates a new GetEntityIDsByQueryPOSTV2Params object
// with the ability to set a custom HTTPClient for a request.
func NewGetEntityIDsByQueryPOSTV2ParamsWithHTTPClient(client *http.Client) *GetEntityIDsByQueryPOSTV2Params {
	return &GetEntityIDsByQueryPOSTV2Params{
		HTTPClient: client,
	}
}

/*
GetEntityIDsByQueryPOSTV2Params contains all the parameters to send to the API endpoint

	for the get entity i ds by query p o s t v2 operation.

	Typically these are written to a http.Request.
*/
type GetEntityIDsByQueryPOSTV2Params struct {

	/* Authorization.

	   authorization header
	*/
	Authorization string

	/* XCSUSERNAME.

	   user name
	*/
	XCSUSERNAME *string

	// Body.
	Body *models.ReleasenotesEntitiesGetRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get entity i ds by query p o s t v2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEntityIDsByQueryPOSTV2Params) WithDefaults() *GetEntityIDsByQueryPOSTV2Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get entity i ds by query p o s t v2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEntityIDsByQueryPOSTV2Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) WithTimeout(timeout time.Duration) *GetEntityIDsByQueryPOSTV2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) WithContext(ctx context.Context) *GetEntityIDsByQueryPOSTV2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) WithHTTPClient(client *http.Client) *GetEntityIDsByQueryPOSTV2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) WithAuthorization(authorization string) *GetEntityIDsByQueryPOSTV2Params {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithXCSUSERNAME adds the xCSUSERNAME to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) WithXCSUSERNAME(xCSUSERNAME *string) *GetEntityIDsByQueryPOSTV2Params {
	o.SetXCSUSERNAME(xCSUSERNAME)
	return o
}

// SetXCSUSERNAME adds the xCSUSERNAME to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) SetXCSUSERNAME(xCSUSERNAME *string) {
	o.XCSUSERNAME = xCSUSERNAME
}

// WithBody adds the body to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) WithBody(body *models.ReleasenotesEntitiesGetRequest) *GetEntityIDsByQueryPOSTV2Params {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the get entity i ds by query p o s t v2 params
func (o *GetEntityIDsByQueryPOSTV2Params) SetBody(body *models.ReleasenotesEntitiesGetRequest) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *GetEntityIDsByQueryPOSTV2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.XCSUSERNAME != nil {

		// header param X-CS-USERNAME
		if err := r.SetHeaderParam("X-CS-USERNAME", *o.XCSUSERNAME); err != nil {
			return err
		}
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
