// Code generated by go-swagger; DO NOT EDIT.

package falcon_container_image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPolicyChecksParams creates a new PolicyChecksParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPolicyChecksParams() *PolicyChecksParams {
	return &PolicyChecksParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPolicyChecksParamsWithTimeout creates a new PolicyChecksParams object
// with the ability to set a timeout on a request.
func NewPolicyChecksParamsWithTimeout(timeout time.Duration) *PolicyChecksParams {
	return &PolicyChecksParams{
		timeout: timeout,
	}
}

// NewPolicyChecksParamsWithContext creates a new PolicyChecksParams object
// with the ability to set a context for a request.
func NewPolicyChecksParamsWithContext(ctx context.Context) *PolicyChecksParams {
	return &PolicyChecksParams{
		Context: ctx,
	}
}

// NewPolicyChecksParamsWithHTTPClient creates a new PolicyChecksParams object
// with the ability to set a custom HTTPClient for a request.
func NewPolicyChecksParamsWithHTTPClient(client *http.Client) *PolicyChecksParams {
	return &PolicyChecksParams{
		HTTPClient: client,
	}
}

/*
PolicyChecksParams contains all the parameters to send to the API endpoint

	for the policy checks operation.

	Typically these are written to a http.Request.
*/
type PolicyChecksParams struct {

	/* Registry.

	   Registry
	*/
	Registry *string

	/* Repository.

	   Repository
	*/
	Repository string

	/* Tag.

	   Tag
	*/
	Tag string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the policy checks params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PolicyChecksParams) WithDefaults() *PolicyChecksParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the policy checks params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PolicyChecksParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the policy checks params
func (o *PolicyChecksParams) WithTimeout(timeout time.Duration) *PolicyChecksParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the policy checks params
func (o *PolicyChecksParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the policy checks params
func (o *PolicyChecksParams) WithContext(ctx context.Context) *PolicyChecksParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the policy checks params
func (o *PolicyChecksParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the policy checks params
func (o *PolicyChecksParams) WithHTTPClient(client *http.Client) *PolicyChecksParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the policy checks params
func (o *PolicyChecksParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRegistry adds the registry to the policy checks params
func (o *PolicyChecksParams) WithRegistry(registry *string) *PolicyChecksParams {
	o.SetRegistry(registry)
	return o
}

// SetRegistry adds the registry to the policy checks params
func (o *PolicyChecksParams) SetRegistry(registry *string) {
	o.Registry = registry
}

// WithRepository adds the repository to the policy checks params
func (o *PolicyChecksParams) WithRepository(repository string) *PolicyChecksParams {
	o.SetRepository(repository)
	return o
}

// SetRepository adds the repository to the policy checks params
func (o *PolicyChecksParams) SetRepository(repository string) {
	o.Repository = repository
}

// WithTag adds the tag to the policy checks params
func (o *PolicyChecksParams) WithTag(tag string) *PolicyChecksParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the policy checks params
func (o *PolicyChecksParams) SetTag(tag string) {
	o.Tag = tag
}

// WriteToRequest writes these params to a swagger request
func (o *PolicyChecksParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Registry != nil {

		// query param registry
		var qrRegistry string

		if o.Registry != nil {
			qrRegistry = *o.Registry
		}
		qRegistry := qrRegistry
		if qRegistry != "" {

			if err := r.SetQueryParam("registry", qRegistry); err != nil {
				return err
			}
		}
	}

	// query param repository
	qrRepository := o.Repository
	qRepository := qrRepository
	if qRepository != "" {

		if err := r.SetQueryParam("repository", qRepository); err != nil {
			return err
		}
	}

	// query param tag
	qrTag := o.Tag
	qTag := qrTag
	if qTag != "" {

		if err := r.SetQueryParam("tag", qTag); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
