// Code generated by go-swagger; DO NOT EDIT.

package cloud_security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListCloudGroupIDsExternalParams creates a new ListCloudGroupIDsExternalParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListCloudGroupIDsExternalParams() *ListCloudGroupIDsExternalParams {
	return &ListCloudGroupIDsExternalParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListCloudGroupIDsExternalParamsWithTimeout creates a new ListCloudGroupIDsExternalParams object
// with the ability to set a timeout on a request.
func NewListCloudGroupIDsExternalParamsWithTimeout(timeout time.Duration) *ListCloudGroupIDsExternalParams {
	return &ListCloudGroupIDsExternalParams{
		timeout: timeout,
	}
}

// NewListCloudGroupIDsExternalParamsWithContext creates a new ListCloudGroupIDsExternalParams object
// with the ability to set a context for a request.
func NewListCloudGroupIDsExternalParamsWithContext(ctx context.Context) *ListCloudGroupIDsExternalParams {
	return &ListCloudGroupIDsExternalParams{
		Context: ctx,
	}
}

// NewListCloudGroupIDsExternalParamsWithHTTPClient creates a new ListCloudGroupIDsExternalParams object
// with the ability to set a custom HTTPClient for a request.
func NewListCloudGroupIDsExternalParamsWithHTTPClient(client *http.Client) *ListCloudGroupIDsExternalParams {
	return &ListCloudGroupIDsExternalParams{
		HTTPClient: client,
	}
}

/*
ListCloudGroupIDsExternalParams contains all the parameters to send to the API endpoint

	for the list cloud group i ds external operation.

	Typically these are written to a http.Request.
*/
type ListCloudGroupIDsExternalParams struct {

	/* Filter.

	     A valid FQL filter. Supports filtering groups by:
	Group properties:
	- `name`
	- `description`
	- `created_at`
	- `updated_at`

	Selector properties:
	- `cloud_provider`
	- `account_id`
	- `region`
	- `cloud_provider_tag`
	- `image_registry`
	- `image_repository`
	- `image_tag`

	Group tags:
	- `business_unit`
	- `business_impact`
	- `environment`
	*/
	Filter *string

	/* Limit.

	   The maximum number of cloud groups to retrieve.

	   Format: int64
	   Default: "100"
	*/
	Limit *string

	/* Offset.

	   The starting position of the list operation.

	   Format: int64
	   Default: "0"
	*/
	Offset *string

	/* Sort.

	   A valid sort string.

	   Default: "name|asc"
	*/
	Sort *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list cloud group i ds external params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListCloudGroupIDsExternalParams) WithDefaults() *ListCloudGroupIDsExternalParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list cloud group i ds external params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListCloudGroupIDsExternalParams) SetDefaults() {
	var (
		limitDefault = string("100")

		offsetDefault = string("0")

		sortDefault = string("name|asc")
	)

	val := ListCloudGroupIDsExternalParams{
		Limit:  &limitDefault,
		Offset: &offsetDefault,
		Sort:   &sortDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) WithTimeout(timeout time.Duration) *ListCloudGroupIDsExternalParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) WithContext(ctx context.Context) *ListCloudGroupIDsExternalParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) WithHTTPClient(client *http.Client) *ListCloudGroupIDsExternalParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFilter adds the filter to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) WithFilter(filter *string) *ListCloudGroupIDsExternalParams {
	o.SetFilter(filter)
	return o
}

// SetFilter adds the filter to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) SetFilter(filter *string) {
	o.Filter = filter
}

// WithLimit adds the limit to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) WithLimit(limit *string) *ListCloudGroupIDsExternalParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) SetLimit(limit *string) {
	o.Limit = limit
}

// WithOffset adds the offset to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) WithOffset(offset *string) *ListCloudGroupIDsExternalParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) SetOffset(offset *string) {
	o.Offset = offset
}

// WithSort adds the sort to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) WithSort(sort *string) *ListCloudGroupIDsExternalParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the list cloud group i ds external params
func (o *ListCloudGroupIDsExternalParams) SetSort(sort *string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *ListCloudGroupIDsExternalParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Filter != nil {

		// query param filter
		var qrFilter string

		if o.Filter != nil {
			qrFilter = *o.Filter
		}
		qFilter := qrFilter
		if qFilter != "" {

			if err := r.SetQueryParam("filter", qFilter); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit string

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := qrLimit
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset string

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := qrOffset
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
