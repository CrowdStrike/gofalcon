// Code generated by go-swagger; DO NOT EDIT.

package quick_scan_pro

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewUploadFileMixin0Mixin93Params creates a new UploadFileMixin0Mixin93Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUploadFileMixin0Mixin93Params() *UploadFileMixin0Mixin93Params {
	return &UploadFileMixin0Mixin93Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewUploadFileMixin0Mixin93ParamsWithTimeout creates a new UploadFileMixin0Mixin93Params object
// with the ability to set a timeout on a request.
func NewUploadFileMixin0Mixin93ParamsWithTimeout(timeout time.Duration) *UploadFileMixin0Mixin93Params {
	return &UploadFileMixin0Mixin93Params{
		timeout: timeout,
	}
}

// NewUploadFileMixin0Mixin93ParamsWithContext creates a new UploadFileMixin0Mixin93Params object
// with the ability to set a context for a request.
func NewUploadFileMixin0Mixin93ParamsWithContext(ctx context.Context) *UploadFileMixin0Mixin93Params {
	return &UploadFileMixin0Mixin93Params{
		Context: ctx,
	}
}

// NewUploadFileMixin0Mixin93ParamsWithHTTPClient creates a new UploadFileMixin0Mixin93Params object
// with the ability to set a custom HTTPClient for a request.
func NewUploadFileMixin0Mixin93ParamsWithHTTPClient(client *http.Client) *UploadFileMixin0Mixin93Params {
	return &UploadFileMixin0Mixin93Params{
		HTTPClient: client,
	}
}

/*
UploadFileMixin0Mixin93Params contains all the parameters to send to the API endpoint

	for the upload file mixin0 mixin93 operation.

	Typically these are written to a http.Request.
*/
type UploadFileMixin0Mixin93Params struct {

	/* File.

	   Binary file to be uploaded. Max file size: 256 MB.
	*/
	File runtime.NamedReadCloser

	/* Scan.

	   If true, after upload, it starts scanning immediately. Default scan mode is 'false'
	*/
	Scan *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the upload file mixin0 mixin93 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UploadFileMixin0Mixin93Params) WithDefaults() *UploadFileMixin0Mixin93Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the upload file mixin0 mixin93 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UploadFileMixin0Mixin93Params) SetDefaults() {
	var (
		scanDefault = bool(false)
	)

	val := UploadFileMixin0Mixin93Params{
		Scan: &scanDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the upload file mixin0 mixin93 params
func (o *UploadFileMixin0Mixin93Params) WithTimeout(timeout time.Duration) *UploadFileMixin0Mixin93Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the upload file mixin0 mixin93 params
func (o *UploadFileMixin0Mixin93Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the upload file mixin0 mixin93 params
func (o *UploadFileMixin0Mixin93Params) WithContext(ctx context.Context) *UploadFileMixin0Mixin93Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the upload file mixin0 mixin93 params
func (o *UploadFileMixin0Mixin93Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the upload file mixin0 mixin93 params
func (o *UploadFileMixin0Mixin93Params) WithHTTPClient(client *http.Client) *UploadFileMixin0Mixin93Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the upload file mixin0 mixin93 params
func (o *UploadFileMixin0Mixin93Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFile adds the file to the upload file mixin0 mixin93 params
func (o *UploadFileMixin0Mixin93Params) WithFile(file runtime.NamedReadCloser) *UploadFileMixin0Mixin93Params {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the upload file mixin0 mixin93 params
func (o *UploadFileMixin0Mixin93Params) SetFile(file runtime.NamedReadCloser) {
	o.File = file
}

// WithScan adds the scan to the upload file mixin0 mixin93 params
func (o *UploadFileMixin0Mixin93Params) WithScan(scan *bool) *UploadFileMixin0Mixin93Params {
	o.SetScan(scan)
	return o
}

// SetScan adds the scan to the upload file mixin0 mixin93 params
func (o *UploadFileMixin0Mixin93Params) SetScan(scan *bool) {
	o.Scan = scan
}

// WriteToRequest writes these params to a swagger request
func (o *UploadFileMixin0Mixin93Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	// form file param file
	if err := r.SetFileParam("file", o.File); err != nil {
		return err
	}

	if o.Scan != nil {

		// form param scan
		var frScan bool
		if o.Scan != nil {
			frScan = *o.Scan
		}
		fScan := swag.FormatBool(frScan)
		if fScan != "" {
			if err := r.SetFormParam("scan", fScan); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
