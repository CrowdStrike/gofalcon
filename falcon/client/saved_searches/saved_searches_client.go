// Code generated by go-swagger; DO NOT EDIT.

package saved_searches

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new saved searches API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for saved searches API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CombinedSavedSearchesV1(params *CombinedSavedSearchesV1Params, opts ...ClientOption) (*CombinedSavedSearchesV1OK, error)

	CreateSavedSearchesDeployV1(params *CreateSavedSearchesDeployV1Params, opts ...ClientOption) (*CreateSavedSearchesDeployV1OK, error)

	CreateSavedSearchesDynamicExecuteV1(params *CreateSavedSearchesDynamicExecuteV1Params, opts ...ClientOption) (*CreateSavedSearchesDynamicExecuteV1OK, error)

	CreateSavedSearchesExecuteV1(params *CreateSavedSearchesExecuteV1Params, opts ...ClientOption) (*CreateSavedSearchesExecuteV1OK, error)

	CreateSavedSearchesIngestV1(params *CreateSavedSearchesIngestV1Params, opts ...ClientOption) (*CreateSavedSearchesIngestV1OK, error)

	CreateSavedSearchesV1(params *CreateSavedSearchesV1Params, opts ...ClientOption) (*CreateSavedSearchesV1OK, error)

	DeleteSavedSearchesV1(params *DeleteSavedSearchesV1Params, opts ...ClientOption) (*DeleteSavedSearchesV1OK, error)

	GetSavedSearchesExecuteV1(params *GetSavedSearchesExecuteV1Params, opts ...ClientOption) (*GetSavedSearchesExecuteV1OK, error)

	GetSavedSearchesV1(params *GetSavedSearchesV1Params, opts ...ClientOption) (*GetSavedSearchesV1OK, error)

	QuerySavedSearchesV1(params *QuerySavedSearchesV1Params, opts ...ClientOption) (*QuerySavedSearchesV1OK, error)

	SavedSearchesValidate(params *SavedSearchesValidateParams, opts ...ClientOption) (*SavedSearchesValidateOK, error)

	UpdateSavedSearchesV1(params *UpdateSavedSearchesV1Params, opts ...ClientOption) (*UpdateSavedSearchesV1OK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CombinedSavedSearchesV1 queries for saved searches resources and returns details
*/
func (a *Client) CombinedSavedSearchesV1(params *CombinedSavedSearchesV1Params, opts ...ClientOption) (*CombinedSavedSearchesV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCombinedSavedSearchesV1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CombinedSavedSearchesV1",
		Method:             "GET",
		PathPattern:        "/loggingapi/combined/saved-searches/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CombinedSavedSearchesV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CombinedSavedSearchesV1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CombinedSavedSearchesV1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateSavedSearchesDeployV1 deploys a saved search
*/
func (a *Client) CreateSavedSearchesDeployV1(params *CreateSavedSearchesDeployV1Params, opts ...ClientOption) (*CreateSavedSearchesDeployV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateSavedSearchesDeployV1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateSavedSearchesDeployV1",
		Method:             "POST",
		PathPattern:        "/loggingapi/entities/saved-searches-deploy/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateSavedSearchesDeployV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateSavedSearchesDeployV1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateSavedSearchesDeployV1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateSavedSearchesDynamicExecuteV1 executes a dynamic saved search
*/
func (a *Client) CreateSavedSearchesDynamicExecuteV1(params *CreateSavedSearchesDynamicExecuteV1Params, opts ...ClientOption) (*CreateSavedSearchesDynamicExecuteV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateSavedSearchesDynamicExecuteV1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateSavedSearchesDynamicExecuteV1",
		Method:             "POST",
		PathPattern:        "/loggingapi/entities/saved-searches-dynamic-execute/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateSavedSearchesDynamicExecuteV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateSavedSearchesDynamicExecuteV1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateSavedSearchesDynamicExecuteV1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateSavedSearchesExecuteV1 executes a saved search
*/
func (a *Client) CreateSavedSearchesExecuteV1(params *CreateSavedSearchesExecuteV1Params, opts ...ClientOption) (*CreateSavedSearchesExecuteV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateSavedSearchesExecuteV1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateSavedSearchesExecuteV1",
		Method:             "POST",
		PathPattern:        "/loggingapi/entities/saved-searches-execute/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateSavedSearchesExecuteV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateSavedSearchesExecuteV1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateSavedSearchesExecuteV1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateSavedSearchesIngestV1 populates a saved search
*/
func (a *Client) CreateSavedSearchesIngestV1(params *CreateSavedSearchesIngestV1Params, opts ...ClientOption) (*CreateSavedSearchesIngestV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateSavedSearchesIngestV1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateSavedSearchesIngestV1",
		Method:             "POST",
		PathPattern:        "/loggingapi/entities/saved-searches-ingest/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"multipart/form-data"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateSavedSearchesIngestV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateSavedSearchesIngestV1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateSavedSearchesIngestV1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateSavedSearchesV1 creates a saved searches resource
*/
func (a *Client) CreateSavedSearchesV1(params *CreateSavedSearchesV1Params, opts ...ClientOption) (*CreateSavedSearchesV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateSavedSearchesV1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateSavedSearchesV1",
		Method:             "POST",
		PathPattern:        "/loggingapi/entities/saved-searches/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateSavedSearchesV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateSavedSearchesV1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateSavedSearchesV1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteSavedSearchesV1 deletes a saved searches resource
*/
func (a *Client) DeleteSavedSearchesV1(params *DeleteSavedSearchesV1Params, opts ...ClientOption) (*DeleteSavedSearchesV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteSavedSearchesV1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteSavedSearchesV1",
		Method:             "DELETE",
		PathPattern:        "/loggingapi/entities/saved-searches/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteSavedSearchesV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteSavedSearchesV1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteSavedSearchesV1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetSavedSearchesExecuteV1 gets the results of a saved search
*/
func (a *Client) GetSavedSearchesExecuteV1(params *GetSavedSearchesExecuteV1Params, opts ...ClientOption) (*GetSavedSearchesExecuteV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetSavedSearchesExecuteV1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetSavedSearchesExecuteV1",
		Method:             "GET",
		PathPattern:        "/loggingapi/entities/saved-searches-execute/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetSavedSearchesExecuteV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetSavedSearchesExecuteV1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetSavedSearchesExecuteV1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetSavedSearchesV1 retrieves saved searches resources by ids
*/
func (a *Client) GetSavedSearchesV1(params *GetSavedSearchesV1Params, opts ...ClientOption) (*GetSavedSearchesV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetSavedSearchesV1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetSavedSearchesV1",
		Method:             "GET",
		PathPattern:        "/loggingapi/entities/saved-searches/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetSavedSearchesV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetSavedSearchesV1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetSavedSearchesV1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
QuerySavedSearchesV1 queries for saved searches resources and returns ids
*/
func (a *Client) QuerySavedSearchesV1(params *QuerySavedSearchesV1Params, opts ...ClientOption) (*QuerySavedSearchesV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewQuerySavedSearchesV1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "QuerySavedSearchesV1",
		Method:             "GET",
		PathPattern:        "/loggingapi/queries/saved-searches/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &QuerySavedSearchesV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*QuerySavedSearchesV1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for QuerySavedSearchesV1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SavedSearchesValidate validates a search
*/
func (a *Client) SavedSearchesValidate(params *SavedSearchesValidateParams, opts ...ClientOption) (*SavedSearchesValidateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSavedSearchesValidateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "SavedSearchesValidate",
		Method:             "POST",
		PathPattern:        "/loggingapi/entities/saved-searches-validate/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SavedSearchesValidateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SavedSearchesValidateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for SavedSearchesValidate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateSavedSearchesV1 updates a saved searches resource
*/
func (a *Client) UpdateSavedSearchesV1(params *UpdateSavedSearchesV1Params, opts ...ClientOption) (*UpdateSavedSearchesV1OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateSavedSearchesV1Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "UpdateSavedSearchesV1",
		Method:             "PATCH",
		PathPattern:        "/loggingapi/entities/saved-searches/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateSavedSearchesV1Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateSavedSearchesV1OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for UpdateSavedSearchesV1: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
