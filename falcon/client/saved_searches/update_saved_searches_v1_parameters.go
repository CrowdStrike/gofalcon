// Code generated by go-swagger; DO NOT EDIT.

package saved_searches

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// NewUpdateSavedSearchesV1Params creates a new UpdateSavedSearchesV1Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateSavedSearchesV1Params() *UpdateSavedSearchesV1Params {
	return &UpdateSavedSearchesV1Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateSavedSearchesV1ParamsWithTimeout creates a new UpdateSavedSearchesV1Params object
// with the ability to set a timeout on a request.
func NewUpdateSavedSearchesV1ParamsWithTimeout(timeout time.Duration) *UpdateSavedSearchesV1Params {
	return &UpdateSavedSearchesV1Params{
		timeout: timeout,
	}
}

// NewUpdateSavedSearchesV1ParamsWithContext creates a new UpdateSavedSearchesV1Params object
// with the ability to set a context for a request.
func NewUpdateSavedSearchesV1ParamsWithContext(ctx context.Context) *UpdateSavedSearchesV1Params {
	return &UpdateSavedSearchesV1Params{
		Context: ctx,
	}
}

// NewUpdateSavedSearchesV1ParamsWithHTTPClient creates a new UpdateSavedSearchesV1Params object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateSavedSearchesV1ParamsWithHTTPClient(client *http.Client) *UpdateSavedSearchesV1Params {
	return &UpdateSavedSearchesV1Params{
		HTTPClient: client,
	}
}

/*
UpdateSavedSearchesV1Params contains all the parameters to send to the API endpoint

	for the update saved searches v1 operation.

	Typically these are written to a http.Request.
*/
type UpdateSavedSearchesV1Params struct {

	/* XCSCREATEORIGIN.

	   Create / Update request origin .
	*/
	XCSCREATEORIGIN *string

	/* XCsAppName.

	   App name used to name repository and workflow action
	*/
	XCsAppName *string

	// Body.
	Body *models.ApidomainSavedSearchUpdateRequestV1

	/* Version.

	   Version of resource being created
	*/
	Version *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update saved searches v1 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateSavedSearchesV1Params) WithDefaults() *UpdateSavedSearchesV1Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update saved searches v1 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateSavedSearchesV1Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) WithTimeout(timeout time.Duration) *UpdateSavedSearchesV1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) WithContext(ctx context.Context) *UpdateSavedSearchesV1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) WithHTTPClient(client *http.Client) *UpdateSavedSearchesV1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXCSCREATEORIGIN adds the xCSCREATEORIGIN to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) WithXCSCREATEORIGIN(xCSCREATEORIGIN *string) *UpdateSavedSearchesV1Params {
	o.SetXCSCREATEORIGIN(xCSCREATEORIGIN)
	return o
}

// SetXCSCREATEORIGIN adds the xCSCREATEORIGIN to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) SetXCSCREATEORIGIN(xCSCREATEORIGIN *string) {
	o.XCSCREATEORIGIN = xCSCREATEORIGIN
}

// WithXCsAppName adds the xCsAppName to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) WithXCsAppName(xCsAppName *string) *UpdateSavedSearchesV1Params {
	o.SetXCsAppName(xCsAppName)
	return o
}

// SetXCsAppName adds the xCsAppName to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) SetXCsAppName(xCsAppName *string) {
	o.XCsAppName = xCsAppName
}

// WithBody adds the body to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) WithBody(body *models.ApidomainSavedSearchUpdateRequestV1) *UpdateSavedSearchesV1Params {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) SetBody(body *models.ApidomainSavedSearchUpdateRequestV1) {
	o.Body = body
}

// WithVersion adds the version to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) WithVersion(version *string) *UpdateSavedSearchesV1Params {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the update saved searches v1 params
func (o *UpdateSavedSearchesV1Params) SetVersion(version *string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateSavedSearchesV1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XCSCREATEORIGIN != nil {

		// header param X-CS-CREATE-ORIGIN
		if err := r.SetHeaderParam("X-CS-CREATE-ORIGIN", *o.XCSCREATEORIGIN); err != nil {
			return err
		}
	}

	if o.XCsAppName != nil {

		// header param X-Cs-App-Name
		if err := r.SetHeaderParam("X-Cs-App-Name", *o.XCsAppName); err != nil {
			return err
		}
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Version != nil {

		// query param version
		var qrVersion string

		if o.Version != nil {
			qrVersion = *o.Version
		}
		qVersion := qrVersion
		if qVersion != "" {

			if err := r.SetQueryParam("version", qVersion); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
