// Code generated by go-swagger; DO NOT EDIT.

package workflows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewWorkflowTriggersCombinedParams creates a new WorkflowTriggersCombinedParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewWorkflowTriggersCombinedParams() *WorkflowTriggersCombinedParams {
	return &WorkflowTriggersCombinedParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewWorkflowTriggersCombinedParamsWithTimeout creates a new WorkflowTriggersCombinedParams object
// with the ability to set a timeout on a request.
func NewWorkflowTriggersCombinedParamsWithTimeout(timeout time.Duration) *WorkflowTriggersCombinedParams {
	return &WorkflowTriggersCombinedParams{
		timeout: timeout,
	}
}

// NewWorkflowTriggersCombinedParamsWithContext creates a new WorkflowTriggersCombinedParams object
// with the ability to set a context for a request.
func NewWorkflowTriggersCombinedParamsWithContext(ctx context.Context) *WorkflowTriggersCombinedParams {
	return &WorkflowTriggersCombinedParams{
		Context: ctx,
	}
}

// NewWorkflowTriggersCombinedParamsWithHTTPClient creates a new WorkflowTriggersCombinedParams object
// with the ability to set a custom HTTPClient for a request.
func NewWorkflowTriggersCombinedParamsWithHTTPClient(client *http.Client) *WorkflowTriggersCombinedParams {
	return &WorkflowTriggersCombinedParams{
		HTTPClient: client,
	}
}

/*
WorkflowTriggersCombinedParams contains all the parameters to send to the API endpoint

	for the workflow triggers combined operation.

	Typically these are written to a http.Request.
*/
type WorkflowTriggersCombinedParams struct {

	/* Filter.

	   FQL query specifying filter parameters.
	*/
	Filter string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the workflow triggers combined params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *WorkflowTriggersCombinedParams) WithDefaults() *WorkflowTriggersCombinedParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the workflow triggers combined params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *WorkflowTriggersCombinedParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the workflow triggers combined params
func (o *WorkflowTriggersCombinedParams) WithTimeout(timeout time.Duration) *WorkflowTriggersCombinedParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the workflow triggers combined params
func (o *WorkflowTriggersCombinedParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the workflow triggers combined params
func (o *WorkflowTriggersCombinedParams) WithContext(ctx context.Context) *WorkflowTriggersCombinedParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the workflow triggers combined params
func (o *WorkflowTriggersCombinedParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the workflow triggers combined params
func (o *WorkflowTriggersCombinedParams) WithHTTPClient(client *http.Client) *WorkflowTriggersCombinedParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the workflow triggers combined params
func (o *WorkflowTriggersCombinedParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFilter adds the filter to the workflow triggers combined params
func (o *WorkflowTriggersCombinedParams) WithFilter(filter string) *WorkflowTriggersCombinedParams {
	o.SetFilter(filter)
	return o
}

// SetFilter adds the filter to the workflow triggers combined params
func (o *WorkflowTriggersCombinedParams) SetFilter(filter string) {
	o.Filter = filter
}

// WriteToRequest writes these params to a swagger request
func (o *WorkflowTriggersCombinedParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param filter
	qrFilter := o.Filter
	qFilter := qrFilter

	if err := r.SetQueryParam("filter", qFilter); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
