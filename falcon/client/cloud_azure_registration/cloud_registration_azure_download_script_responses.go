// Code generated by go-swagger; DO NOT EDIT.

package cloud_azure_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// CloudRegistrationAzureDownloadScriptReader is a Reader for the CloudRegistrationAzureDownloadScript structure.
type CloudRegistrationAzureDownloadScriptReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudRegistrationAzureDownloadScriptReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudRegistrationAzureDownloadScriptOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloudRegistrationAzureDownloadScriptBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloudRegistrationAzureDownloadScriptForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCloudRegistrationAzureDownloadScriptTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudRegistrationAzureDownloadScriptInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cloud-security-registration-azure/entities/scripts/v1] cloud-registration-azure-download-script", response, response.Code())
	}
}

// NewCloudRegistrationAzureDownloadScriptOK creates a CloudRegistrationAzureDownloadScriptOK with default headers values
func NewCloudRegistrationAzureDownloadScriptOK() *CloudRegistrationAzureDownloadScriptOK {
	return &CloudRegistrationAzureDownloadScriptOK{}
}

/*
CloudRegistrationAzureDownloadScriptOK describes a response with status code 200, with default header values.

OK
*/
type CloudRegistrationAzureDownloadScriptOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RestAzureProvisionGetAccountScriptResponseV1
}

// IsSuccess returns true when this cloud registration azure download script o k response has a 2xx status code
func (o *CloudRegistrationAzureDownloadScriptOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud registration azure download script o k response has a 3xx status code
func (o *CloudRegistrationAzureDownloadScriptOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure download script o k response has a 4xx status code
func (o *CloudRegistrationAzureDownloadScriptOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud registration azure download script o k response has a 5xx status code
func (o *CloudRegistrationAzureDownloadScriptOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure download script o k response a status code equal to that given
func (o *CloudRegistrationAzureDownloadScriptOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cloud registration azure download script o k response
func (o *CloudRegistrationAzureDownloadScriptOK) Code() int {
	return 200
}

func (o *CloudRegistrationAzureDownloadScriptOK) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/scripts/v1][%d] cloudRegistrationAzureDownloadScriptOK  %+v", 200, o.Payload)
}

func (o *CloudRegistrationAzureDownloadScriptOK) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/scripts/v1][%d] cloudRegistrationAzureDownloadScriptOK  %+v", 200, o.Payload)
}

func (o *CloudRegistrationAzureDownloadScriptOK) GetPayload() *models.RestAzureProvisionGetAccountScriptResponseV1 {
	return o.Payload
}

func (o *CloudRegistrationAzureDownloadScriptOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RestAzureProvisionGetAccountScriptResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureDownloadScriptBadRequest creates a CloudRegistrationAzureDownloadScriptBadRequest with default headers values
func NewCloudRegistrationAzureDownloadScriptBadRequest() *CloudRegistrationAzureDownloadScriptBadRequest {
	return &CloudRegistrationAzureDownloadScriptBadRequest{}
}

/*
CloudRegistrationAzureDownloadScriptBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloudRegistrationAzureDownloadScriptBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure download script bad request response has a 2xx status code
func (o *CloudRegistrationAzureDownloadScriptBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure download script bad request response has a 3xx status code
func (o *CloudRegistrationAzureDownloadScriptBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure download script bad request response has a 4xx status code
func (o *CloudRegistrationAzureDownloadScriptBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure download script bad request response has a 5xx status code
func (o *CloudRegistrationAzureDownloadScriptBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure download script bad request response a status code equal to that given
func (o *CloudRegistrationAzureDownloadScriptBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cloud registration azure download script bad request response
func (o *CloudRegistrationAzureDownloadScriptBadRequest) Code() int {
	return 400
}

func (o *CloudRegistrationAzureDownloadScriptBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/scripts/v1][%d] cloudRegistrationAzureDownloadScriptBadRequest  %+v", 400, o.Payload)
}

func (o *CloudRegistrationAzureDownloadScriptBadRequest) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/scripts/v1][%d] cloudRegistrationAzureDownloadScriptBadRequest  %+v", 400, o.Payload)
}

func (o *CloudRegistrationAzureDownloadScriptBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureDownloadScriptBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureDownloadScriptForbidden creates a CloudRegistrationAzureDownloadScriptForbidden with default headers values
func NewCloudRegistrationAzureDownloadScriptForbidden() *CloudRegistrationAzureDownloadScriptForbidden {
	return &CloudRegistrationAzureDownloadScriptForbidden{}
}

/*
CloudRegistrationAzureDownloadScriptForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloudRegistrationAzureDownloadScriptForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure download script forbidden response has a 2xx status code
func (o *CloudRegistrationAzureDownloadScriptForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure download script forbidden response has a 3xx status code
func (o *CloudRegistrationAzureDownloadScriptForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure download script forbidden response has a 4xx status code
func (o *CloudRegistrationAzureDownloadScriptForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure download script forbidden response has a 5xx status code
func (o *CloudRegistrationAzureDownloadScriptForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure download script forbidden response a status code equal to that given
func (o *CloudRegistrationAzureDownloadScriptForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cloud registration azure download script forbidden response
func (o *CloudRegistrationAzureDownloadScriptForbidden) Code() int {
	return 403
}

func (o *CloudRegistrationAzureDownloadScriptForbidden) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/scripts/v1][%d] cloudRegistrationAzureDownloadScriptForbidden  %+v", 403, o.Payload)
}

func (o *CloudRegistrationAzureDownloadScriptForbidden) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/scripts/v1][%d] cloudRegistrationAzureDownloadScriptForbidden  %+v", 403, o.Payload)
}

func (o *CloudRegistrationAzureDownloadScriptForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureDownloadScriptForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureDownloadScriptTooManyRequests creates a CloudRegistrationAzureDownloadScriptTooManyRequests with default headers values
func NewCloudRegistrationAzureDownloadScriptTooManyRequests() *CloudRegistrationAzureDownloadScriptTooManyRequests {
	return &CloudRegistrationAzureDownloadScriptTooManyRequests{}
}

/*
CloudRegistrationAzureDownloadScriptTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CloudRegistrationAzureDownloadScriptTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this cloud registration azure download script too many requests response has a 2xx status code
func (o *CloudRegistrationAzureDownloadScriptTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure download script too many requests response has a 3xx status code
func (o *CloudRegistrationAzureDownloadScriptTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure download script too many requests response has a 4xx status code
func (o *CloudRegistrationAzureDownloadScriptTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure download script too many requests response has a 5xx status code
func (o *CloudRegistrationAzureDownloadScriptTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure download script too many requests response a status code equal to that given
func (o *CloudRegistrationAzureDownloadScriptTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the cloud registration azure download script too many requests response
func (o *CloudRegistrationAzureDownloadScriptTooManyRequests) Code() int {
	return 429
}

func (o *CloudRegistrationAzureDownloadScriptTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/scripts/v1][%d] cloudRegistrationAzureDownloadScriptTooManyRequests  %+v", 429, o.Payload)
}

func (o *CloudRegistrationAzureDownloadScriptTooManyRequests) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/scripts/v1][%d] cloudRegistrationAzureDownloadScriptTooManyRequests  %+v", 429, o.Payload)
}

func (o *CloudRegistrationAzureDownloadScriptTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CloudRegistrationAzureDownloadScriptTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureDownloadScriptInternalServerError creates a CloudRegistrationAzureDownloadScriptInternalServerError with default headers values
func NewCloudRegistrationAzureDownloadScriptInternalServerError() *CloudRegistrationAzureDownloadScriptInternalServerError {
	return &CloudRegistrationAzureDownloadScriptInternalServerError{}
}

/*
CloudRegistrationAzureDownloadScriptInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CloudRegistrationAzureDownloadScriptInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure download script internal server error response has a 2xx status code
func (o *CloudRegistrationAzureDownloadScriptInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure download script internal server error response has a 3xx status code
func (o *CloudRegistrationAzureDownloadScriptInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure download script internal server error response has a 4xx status code
func (o *CloudRegistrationAzureDownloadScriptInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud registration azure download script internal server error response has a 5xx status code
func (o *CloudRegistrationAzureDownloadScriptInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud registration azure download script internal server error response a status code equal to that given
func (o *CloudRegistrationAzureDownloadScriptInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cloud registration azure download script internal server error response
func (o *CloudRegistrationAzureDownloadScriptInternalServerError) Code() int {
	return 500
}

func (o *CloudRegistrationAzureDownloadScriptInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/scripts/v1][%d] cloudRegistrationAzureDownloadScriptInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudRegistrationAzureDownloadScriptInternalServerError) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/scripts/v1][%d] cloudRegistrationAzureDownloadScriptInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudRegistrationAzureDownloadScriptInternalServerError) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureDownloadScriptInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
