// Code generated by go-swagger; DO NOT EDIT.

package cloud_azure_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// CloudRegistrationAzureGetRegistrationReader is a Reader for the CloudRegistrationAzureGetRegistration structure.
type CloudRegistrationAzureGetRegistrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudRegistrationAzureGetRegistrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudRegistrationAzureGetRegistrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloudRegistrationAzureGetRegistrationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloudRegistrationAzureGetRegistrationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCloudRegistrationAzureGetRegistrationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCloudRegistrationAzureGetRegistrationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudRegistrationAzureGetRegistrationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cloud-security-registration-azure/entities/registrations/v1] cloud-registration-azure-get-registration", response, response.Code())
	}
}

// NewCloudRegistrationAzureGetRegistrationOK creates a CloudRegistrationAzureGetRegistrationOK with default headers values
func NewCloudRegistrationAzureGetRegistrationOK() *CloudRegistrationAzureGetRegistrationOK {
	return &CloudRegistrationAzureGetRegistrationOK{}
}

/*
CloudRegistrationAzureGetRegistrationOK describes a response with status code 200, with default header values.

OK
*/
type CloudRegistrationAzureGetRegistrationOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.AzureAzureRegistrationResponseExtV1
}

// IsSuccess returns true when this cloud registration azure get registration o k response has a 2xx status code
func (o *CloudRegistrationAzureGetRegistrationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud registration azure get registration o k response has a 3xx status code
func (o *CloudRegistrationAzureGetRegistrationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure get registration o k response has a 4xx status code
func (o *CloudRegistrationAzureGetRegistrationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud registration azure get registration o k response has a 5xx status code
func (o *CloudRegistrationAzureGetRegistrationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure get registration o k response a status code equal to that given
func (o *CloudRegistrationAzureGetRegistrationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cloud registration azure get registration o k response
func (o *CloudRegistrationAzureGetRegistrationOK) Code() int {
	return 200
}

func (o *CloudRegistrationAzureGetRegistrationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationOK %s", 200, payload)
}

func (o *CloudRegistrationAzureGetRegistrationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationOK %s", 200, payload)
}

func (o *CloudRegistrationAzureGetRegistrationOK) GetPayload() *models.AzureAzureRegistrationResponseExtV1 {
	return o.Payload
}

func (o *CloudRegistrationAzureGetRegistrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.AzureAzureRegistrationResponseExtV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureGetRegistrationBadRequest creates a CloudRegistrationAzureGetRegistrationBadRequest with default headers values
func NewCloudRegistrationAzureGetRegistrationBadRequest() *CloudRegistrationAzureGetRegistrationBadRequest {
	return &CloudRegistrationAzureGetRegistrationBadRequest{}
}

/*
CloudRegistrationAzureGetRegistrationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloudRegistrationAzureGetRegistrationBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure get registration bad request response has a 2xx status code
func (o *CloudRegistrationAzureGetRegistrationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure get registration bad request response has a 3xx status code
func (o *CloudRegistrationAzureGetRegistrationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure get registration bad request response has a 4xx status code
func (o *CloudRegistrationAzureGetRegistrationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure get registration bad request response has a 5xx status code
func (o *CloudRegistrationAzureGetRegistrationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure get registration bad request response a status code equal to that given
func (o *CloudRegistrationAzureGetRegistrationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cloud registration azure get registration bad request response
func (o *CloudRegistrationAzureGetRegistrationBadRequest) Code() int {
	return 400
}

func (o *CloudRegistrationAzureGetRegistrationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationBadRequest %s", 400, payload)
}

func (o *CloudRegistrationAzureGetRegistrationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationBadRequest %s", 400, payload)
}

func (o *CloudRegistrationAzureGetRegistrationBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureGetRegistrationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureGetRegistrationForbidden creates a CloudRegistrationAzureGetRegistrationForbidden with default headers values
func NewCloudRegistrationAzureGetRegistrationForbidden() *CloudRegistrationAzureGetRegistrationForbidden {
	return &CloudRegistrationAzureGetRegistrationForbidden{}
}

/*
CloudRegistrationAzureGetRegistrationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloudRegistrationAzureGetRegistrationForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure get registration forbidden response has a 2xx status code
func (o *CloudRegistrationAzureGetRegistrationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure get registration forbidden response has a 3xx status code
func (o *CloudRegistrationAzureGetRegistrationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure get registration forbidden response has a 4xx status code
func (o *CloudRegistrationAzureGetRegistrationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure get registration forbidden response has a 5xx status code
func (o *CloudRegistrationAzureGetRegistrationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure get registration forbidden response a status code equal to that given
func (o *CloudRegistrationAzureGetRegistrationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cloud registration azure get registration forbidden response
func (o *CloudRegistrationAzureGetRegistrationForbidden) Code() int {
	return 403
}

func (o *CloudRegistrationAzureGetRegistrationForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationForbidden %s", 403, payload)
}

func (o *CloudRegistrationAzureGetRegistrationForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationForbidden %s", 403, payload)
}

func (o *CloudRegistrationAzureGetRegistrationForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureGetRegistrationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureGetRegistrationNotFound creates a CloudRegistrationAzureGetRegistrationNotFound with default headers values
func NewCloudRegistrationAzureGetRegistrationNotFound() *CloudRegistrationAzureGetRegistrationNotFound {
	return &CloudRegistrationAzureGetRegistrationNotFound{}
}

/*
CloudRegistrationAzureGetRegistrationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CloudRegistrationAzureGetRegistrationNotFound struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure get registration not found response has a 2xx status code
func (o *CloudRegistrationAzureGetRegistrationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure get registration not found response has a 3xx status code
func (o *CloudRegistrationAzureGetRegistrationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure get registration not found response has a 4xx status code
func (o *CloudRegistrationAzureGetRegistrationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure get registration not found response has a 5xx status code
func (o *CloudRegistrationAzureGetRegistrationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure get registration not found response a status code equal to that given
func (o *CloudRegistrationAzureGetRegistrationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the cloud registration azure get registration not found response
func (o *CloudRegistrationAzureGetRegistrationNotFound) Code() int {
	return 404
}

func (o *CloudRegistrationAzureGetRegistrationNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationNotFound %s", 404, payload)
}

func (o *CloudRegistrationAzureGetRegistrationNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationNotFound %s", 404, payload)
}

func (o *CloudRegistrationAzureGetRegistrationNotFound) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureGetRegistrationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureGetRegistrationTooManyRequests creates a CloudRegistrationAzureGetRegistrationTooManyRequests with default headers values
func NewCloudRegistrationAzureGetRegistrationTooManyRequests() *CloudRegistrationAzureGetRegistrationTooManyRequests {
	return &CloudRegistrationAzureGetRegistrationTooManyRequests{}
}

/*
CloudRegistrationAzureGetRegistrationTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CloudRegistrationAzureGetRegistrationTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this cloud registration azure get registration too many requests response has a 2xx status code
func (o *CloudRegistrationAzureGetRegistrationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure get registration too many requests response has a 3xx status code
func (o *CloudRegistrationAzureGetRegistrationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure get registration too many requests response has a 4xx status code
func (o *CloudRegistrationAzureGetRegistrationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure get registration too many requests response has a 5xx status code
func (o *CloudRegistrationAzureGetRegistrationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure get registration too many requests response a status code equal to that given
func (o *CloudRegistrationAzureGetRegistrationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the cloud registration azure get registration too many requests response
func (o *CloudRegistrationAzureGetRegistrationTooManyRequests) Code() int {
	return 429
}

func (o *CloudRegistrationAzureGetRegistrationTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationTooManyRequests %s", 429, payload)
}

func (o *CloudRegistrationAzureGetRegistrationTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationTooManyRequests %s", 429, payload)
}

func (o *CloudRegistrationAzureGetRegistrationTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CloudRegistrationAzureGetRegistrationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureGetRegistrationInternalServerError creates a CloudRegistrationAzureGetRegistrationInternalServerError with default headers values
func NewCloudRegistrationAzureGetRegistrationInternalServerError() *CloudRegistrationAzureGetRegistrationInternalServerError {
	return &CloudRegistrationAzureGetRegistrationInternalServerError{}
}

/*
CloudRegistrationAzureGetRegistrationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CloudRegistrationAzureGetRegistrationInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure get registration internal server error response has a 2xx status code
func (o *CloudRegistrationAzureGetRegistrationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure get registration internal server error response has a 3xx status code
func (o *CloudRegistrationAzureGetRegistrationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure get registration internal server error response has a 4xx status code
func (o *CloudRegistrationAzureGetRegistrationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud registration azure get registration internal server error response has a 5xx status code
func (o *CloudRegistrationAzureGetRegistrationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud registration azure get registration internal server error response a status code equal to that given
func (o *CloudRegistrationAzureGetRegistrationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cloud registration azure get registration internal server error response
func (o *CloudRegistrationAzureGetRegistrationInternalServerError) Code() int {
	return 500
}

func (o *CloudRegistrationAzureGetRegistrationInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationInternalServerError %s", 500, payload)
}

func (o *CloudRegistrationAzureGetRegistrationInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureGetRegistrationInternalServerError %s", 500, payload)
}

func (o *CloudRegistrationAzureGetRegistrationInternalServerError) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureGetRegistrationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
