// Code generated by go-swagger; DO NOT EDIT.

package cloud_azure_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// CloudRegistrationAzureTriggerHealthCheckReader is a Reader for the CloudRegistrationAzureTriggerHealthCheck structure.
type CloudRegistrationAzureTriggerHealthCheckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudRegistrationAzureTriggerHealthCheckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudRegistrationAzureTriggerHealthCheckOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloudRegistrationAzureTriggerHealthCheckBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloudRegistrationAzureTriggerHealthCheckForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCloudRegistrationAzureTriggerHealthCheckTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudRegistrationAzureTriggerHealthCheckInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cloud-security-registration-azure/entities/registrations/healthcheck/v1] cloud-registration-azure-trigger-health-check", response, response.Code())
	}
}

// NewCloudRegistrationAzureTriggerHealthCheckOK creates a CloudRegistrationAzureTriggerHealthCheckOK with default headers values
func NewCloudRegistrationAzureTriggerHealthCheckOK() *CloudRegistrationAzureTriggerHealthCheckOK {
	return &CloudRegistrationAzureTriggerHealthCheckOK{}
}

/*
CloudRegistrationAzureTriggerHealthCheckOK describes a response with status code 200, with default header values.

OK
*/
type CloudRegistrationAzureTriggerHealthCheckOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.AzureHealthCheckTriggerResponseExtV1
}

// IsSuccess returns true when this cloud registration azure trigger health check o k response has a 2xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud registration azure trigger health check o k response has a 3xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure trigger health check o k response has a 4xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud registration azure trigger health check o k response has a 5xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure trigger health check o k response a status code equal to that given
func (o *CloudRegistrationAzureTriggerHealthCheckOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cloud registration azure trigger health check o k response
func (o *CloudRegistrationAzureTriggerHealthCheckOK) Code() int {
	return 200
}

func (o *CloudRegistrationAzureTriggerHealthCheckOK) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/healthcheck/v1][%d] cloudRegistrationAzureTriggerHealthCheckOK  %+v", 200, o.Payload)
}

func (o *CloudRegistrationAzureTriggerHealthCheckOK) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/healthcheck/v1][%d] cloudRegistrationAzureTriggerHealthCheckOK  %+v", 200, o.Payload)
}

func (o *CloudRegistrationAzureTriggerHealthCheckOK) GetPayload() *models.AzureHealthCheckTriggerResponseExtV1 {
	return o.Payload
}

func (o *CloudRegistrationAzureTriggerHealthCheckOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.AzureHealthCheckTriggerResponseExtV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureTriggerHealthCheckBadRequest creates a CloudRegistrationAzureTriggerHealthCheckBadRequest with default headers values
func NewCloudRegistrationAzureTriggerHealthCheckBadRequest() *CloudRegistrationAzureTriggerHealthCheckBadRequest {
	return &CloudRegistrationAzureTriggerHealthCheckBadRequest{}
}

/*
CloudRegistrationAzureTriggerHealthCheckBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloudRegistrationAzureTriggerHealthCheckBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure trigger health check bad request response has a 2xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure trigger health check bad request response has a 3xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure trigger health check bad request response has a 4xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure trigger health check bad request response has a 5xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure trigger health check bad request response a status code equal to that given
func (o *CloudRegistrationAzureTriggerHealthCheckBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cloud registration azure trigger health check bad request response
func (o *CloudRegistrationAzureTriggerHealthCheckBadRequest) Code() int {
	return 400
}

func (o *CloudRegistrationAzureTriggerHealthCheckBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/healthcheck/v1][%d] cloudRegistrationAzureTriggerHealthCheckBadRequest  %+v", 400, o.Payload)
}

func (o *CloudRegistrationAzureTriggerHealthCheckBadRequest) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/healthcheck/v1][%d] cloudRegistrationAzureTriggerHealthCheckBadRequest  %+v", 400, o.Payload)
}

func (o *CloudRegistrationAzureTriggerHealthCheckBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureTriggerHealthCheckBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureTriggerHealthCheckForbidden creates a CloudRegistrationAzureTriggerHealthCheckForbidden with default headers values
func NewCloudRegistrationAzureTriggerHealthCheckForbidden() *CloudRegistrationAzureTriggerHealthCheckForbidden {
	return &CloudRegistrationAzureTriggerHealthCheckForbidden{}
}

/*
CloudRegistrationAzureTriggerHealthCheckForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloudRegistrationAzureTriggerHealthCheckForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure trigger health check forbidden response has a 2xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure trigger health check forbidden response has a 3xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure trigger health check forbidden response has a 4xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure trigger health check forbidden response has a 5xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure trigger health check forbidden response a status code equal to that given
func (o *CloudRegistrationAzureTriggerHealthCheckForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cloud registration azure trigger health check forbidden response
func (o *CloudRegistrationAzureTriggerHealthCheckForbidden) Code() int {
	return 403
}

func (o *CloudRegistrationAzureTriggerHealthCheckForbidden) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/healthcheck/v1][%d] cloudRegistrationAzureTriggerHealthCheckForbidden  %+v", 403, o.Payload)
}

func (o *CloudRegistrationAzureTriggerHealthCheckForbidden) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/healthcheck/v1][%d] cloudRegistrationAzureTriggerHealthCheckForbidden  %+v", 403, o.Payload)
}

func (o *CloudRegistrationAzureTriggerHealthCheckForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureTriggerHealthCheckForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureTriggerHealthCheckTooManyRequests creates a CloudRegistrationAzureTriggerHealthCheckTooManyRequests with default headers values
func NewCloudRegistrationAzureTriggerHealthCheckTooManyRequests() *CloudRegistrationAzureTriggerHealthCheckTooManyRequests {
	return &CloudRegistrationAzureTriggerHealthCheckTooManyRequests{}
}

/*
CloudRegistrationAzureTriggerHealthCheckTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CloudRegistrationAzureTriggerHealthCheckTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this cloud registration azure trigger health check too many requests response has a 2xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure trigger health check too many requests response has a 3xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure trigger health check too many requests response has a 4xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure trigger health check too many requests response has a 5xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure trigger health check too many requests response a status code equal to that given
func (o *CloudRegistrationAzureTriggerHealthCheckTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the cloud registration azure trigger health check too many requests response
func (o *CloudRegistrationAzureTriggerHealthCheckTooManyRequests) Code() int {
	return 429
}

func (o *CloudRegistrationAzureTriggerHealthCheckTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/healthcheck/v1][%d] cloudRegistrationAzureTriggerHealthCheckTooManyRequests  %+v", 429, o.Payload)
}

func (o *CloudRegistrationAzureTriggerHealthCheckTooManyRequests) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/healthcheck/v1][%d] cloudRegistrationAzureTriggerHealthCheckTooManyRequests  %+v", 429, o.Payload)
}

func (o *CloudRegistrationAzureTriggerHealthCheckTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CloudRegistrationAzureTriggerHealthCheckTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureTriggerHealthCheckInternalServerError creates a CloudRegistrationAzureTriggerHealthCheckInternalServerError with default headers values
func NewCloudRegistrationAzureTriggerHealthCheckInternalServerError() *CloudRegistrationAzureTriggerHealthCheckInternalServerError {
	return &CloudRegistrationAzureTriggerHealthCheckInternalServerError{}
}

/*
CloudRegistrationAzureTriggerHealthCheckInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CloudRegistrationAzureTriggerHealthCheckInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure trigger health check internal server error response has a 2xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure trigger health check internal server error response has a 3xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure trigger health check internal server error response has a 4xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud registration azure trigger health check internal server error response has a 5xx status code
func (o *CloudRegistrationAzureTriggerHealthCheckInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud registration azure trigger health check internal server error response a status code equal to that given
func (o *CloudRegistrationAzureTriggerHealthCheckInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cloud registration azure trigger health check internal server error response
func (o *CloudRegistrationAzureTriggerHealthCheckInternalServerError) Code() int {
	return 500
}

func (o *CloudRegistrationAzureTriggerHealthCheckInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/healthcheck/v1][%d] cloudRegistrationAzureTriggerHealthCheckInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudRegistrationAzureTriggerHealthCheckInternalServerError) String() string {
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/healthcheck/v1][%d] cloudRegistrationAzureTriggerHealthCheckInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudRegistrationAzureTriggerHealthCheckInternalServerError) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureTriggerHealthCheckInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
