// Code generated by go-swagger; DO NOT EDIT.

package cloud_azure_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCloudRegistrationAzureTriggerHealthCheckParams creates a new CloudRegistrationAzureTriggerHealthCheckParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCloudRegistrationAzureTriggerHealthCheckParams() *CloudRegistrationAzureTriggerHealthCheckParams {
	return &CloudRegistrationAzureTriggerHealthCheckParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCloudRegistrationAzureTriggerHealthCheckParamsWithTimeout creates a new CloudRegistrationAzureTriggerHealthCheckParams object
// with the ability to set a timeout on a request.
func NewCloudRegistrationAzureTriggerHealthCheckParamsWithTimeout(timeout time.Duration) *CloudRegistrationAzureTriggerHealthCheckParams {
	return &CloudRegistrationAzureTriggerHealthCheckParams{
		timeout: timeout,
	}
}

// NewCloudRegistrationAzureTriggerHealthCheckParamsWithContext creates a new CloudRegistrationAzureTriggerHealthCheckParams object
// with the ability to set a context for a request.
func NewCloudRegistrationAzureTriggerHealthCheckParamsWithContext(ctx context.Context) *CloudRegistrationAzureTriggerHealthCheckParams {
	return &CloudRegistrationAzureTriggerHealthCheckParams{
		Context: ctx,
	}
}

// NewCloudRegistrationAzureTriggerHealthCheckParamsWithHTTPClient creates a new CloudRegistrationAzureTriggerHealthCheckParams object
// with the ability to set a custom HTTPClient for a request.
func NewCloudRegistrationAzureTriggerHealthCheckParamsWithHTTPClient(client *http.Client) *CloudRegistrationAzureTriggerHealthCheckParams {
	return &CloudRegistrationAzureTriggerHealthCheckParams{
		HTTPClient: client,
	}
}

/*
CloudRegistrationAzureTriggerHealthCheckParams contains all the parameters to send to the API endpoint

	for the cloud registration azure trigger health check operation.

	Typically these are written to a http.Request.
*/
type CloudRegistrationAzureTriggerHealthCheckParams struct {

	/* TenantIds.

	   Azure tenant IDs
	*/
	TenantIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the cloud registration azure trigger health check params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CloudRegistrationAzureTriggerHealthCheckParams) WithDefaults() *CloudRegistrationAzureTriggerHealthCheckParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the cloud registration azure trigger health check params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CloudRegistrationAzureTriggerHealthCheckParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the cloud registration azure trigger health check params
func (o *CloudRegistrationAzureTriggerHealthCheckParams) WithTimeout(timeout time.Duration) *CloudRegistrationAzureTriggerHealthCheckParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cloud registration azure trigger health check params
func (o *CloudRegistrationAzureTriggerHealthCheckParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cloud registration azure trigger health check params
func (o *CloudRegistrationAzureTriggerHealthCheckParams) WithContext(ctx context.Context) *CloudRegistrationAzureTriggerHealthCheckParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cloud registration azure trigger health check params
func (o *CloudRegistrationAzureTriggerHealthCheckParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cloud registration azure trigger health check params
func (o *CloudRegistrationAzureTriggerHealthCheckParams) WithHTTPClient(client *http.Client) *CloudRegistrationAzureTriggerHealthCheckParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cloud registration azure trigger health check params
func (o *CloudRegistrationAzureTriggerHealthCheckParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTenantIds adds the tenantIds to the cloud registration azure trigger health check params
func (o *CloudRegistrationAzureTriggerHealthCheckParams) WithTenantIds(tenantIds []string) *CloudRegistrationAzureTriggerHealthCheckParams {
	o.SetTenantIds(tenantIds)
	return o
}

// SetTenantIds adds the tenantIds to the cloud registration azure trigger health check params
func (o *CloudRegistrationAzureTriggerHealthCheckParams) SetTenantIds(tenantIds []string) {
	o.TenantIds = tenantIds
}

// WriteToRequest writes these params to a swagger request
func (o *CloudRegistrationAzureTriggerHealthCheckParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.TenantIds != nil {

		// binding items for tenant_ids
		joinedTenantIds := o.bindParamTenantIds(reg)

		// query array param tenant_ids
		if err := r.SetQueryParam("tenant_ids", joinedTenantIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamCloudRegistrationAzureTriggerHealthCheck binds the parameter tenant_ids
func (o *CloudRegistrationAzureTriggerHealthCheckParams) bindParamTenantIds(formats strfmt.Registry) []string {
	tenantIdsIR := o.TenantIds

	var tenantIdsIC []string
	for _, tenantIdsIIR := range tenantIdsIR { // explode []string

		tenantIdsIIV := tenantIdsIIR // string as string
		tenantIdsIC = append(tenantIdsIC, tenantIdsIIV)
	}

	// items.CollectionFormat: "multi"
	tenantIdsIS := swag.JoinByFormat(tenantIdsIC, "multi")

	return tenantIdsIS
}
