// Code generated by go-swagger; DO NOT EDIT.

package cloud_azure_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// CloudRegistrationAzureCreateRegistrationReader is a Reader for the CloudRegistrationAzureCreateRegistration structure.
type CloudRegistrationAzureCreateRegistrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudRegistrationAzureCreateRegistrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCloudRegistrationAzureCreateRegistrationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloudRegistrationAzureCreateRegistrationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloudRegistrationAzureCreateRegistrationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCloudRegistrationAzureCreateRegistrationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCloudRegistrationAzureCreateRegistrationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudRegistrationAzureCreateRegistrationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cloud-security-registration-azure/entities/registrations/v1] cloud-registration-azure-create-registration", response, response.Code())
	}
}

// NewCloudRegistrationAzureCreateRegistrationCreated creates a CloudRegistrationAzureCreateRegistrationCreated with default headers values
func NewCloudRegistrationAzureCreateRegistrationCreated() *CloudRegistrationAzureCreateRegistrationCreated {
	return &CloudRegistrationAzureCreateRegistrationCreated{}
}

/*
CloudRegistrationAzureCreateRegistrationCreated describes a response with status code 201, with default header values.

Created
*/
type CloudRegistrationAzureCreateRegistrationCreated struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.AzureAzureRegistrationResponseExtV1
}

// IsSuccess returns true when this cloud registration azure create registration created response has a 2xx status code
func (o *CloudRegistrationAzureCreateRegistrationCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud registration azure create registration created response has a 3xx status code
func (o *CloudRegistrationAzureCreateRegistrationCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure create registration created response has a 4xx status code
func (o *CloudRegistrationAzureCreateRegistrationCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud registration azure create registration created response has a 5xx status code
func (o *CloudRegistrationAzureCreateRegistrationCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure create registration created response a status code equal to that given
func (o *CloudRegistrationAzureCreateRegistrationCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the cloud registration azure create registration created response
func (o *CloudRegistrationAzureCreateRegistrationCreated) Code() int {
	return 201
}

func (o *CloudRegistrationAzureCreateRegistrationCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationCreated %s", 201, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationCreated %s", 201, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationCreated) GetPayload() *models.AzureAzureRegistrationResponseExtV1 {
	return o.Payload
}

func (o *CloudRegistrationAzureCreateRegistrationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.AzureAzureRegistrationResponseExtV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureCreateRegistrationBadRequest creates a CloudRegistrationAzureCreateRegistrationBadRequest with default headers values
func NewCloudRegistrationAzureCreateRegistrationBadRequest() *CloudRegistrationAzureCreateRegistrationBadRequest {
	return &CloudRegistrationAzureCreateRegistrationBadRequest{}
}

/*
CloudRegistrationAzureCreateRegistrationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloudRegistrationAzureCreateRegistrationBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure create registration bad request response has a 2xx status code
func (o *CloudRegistrationAzureCreateRegistrationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure create registration bad request response has a 3xx status code
func (o *CloudRegistrationAzureCreateRegistrationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure create registration bad request response has a 4xx status code
func (o *CloudRegistrationAzureCreateRegistrationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure create registration bad request response has a 5xx status code
func (o *CloudRegistrationAzureCreateRegistrationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure create registration bad request response a status code equal to that given
func (o *CloudRegistrationAzureCreateRegistrationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cloud registration azure create registration bad request response
func (o *CloudRegistrationAzureCreateRegistrationBadRequest) Code() int {
	return 400
}

func (o *CloudRegistrationAzureCreateRegistrationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationBadRequest %s", 400, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationBadRequest %s", 400, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureCreateRegistrationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureCreateRegistrationForbidden creates a CloudRegistrationAzureCreateRegistrationForbidden with default headers values
func NewCloudRegistrationAzureCreateRegistrationForbidden() *CloudRegistrationAzureCreateRegistrationForbidden {
	return &CloudRegistrationAzureCreateRegistrationForbidden{}
}

/*
CloudRegistrationAzureCreateRegistrationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloudRegistrationAzureCreateRegistrationForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure create registration forbidden response has a 2xx status code
func (o *CloudRegistrationAzureCreateRegistrationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure create registration forbidden response has a 3xx status code
func (o *CloudRegistrationAzureCreateRegistrationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure create registration forbidden response has a 4xx status code
func (o *CloudRegistrationAzureCreateRegistrationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure create registration forbidden response has a 5xx status code
func (o *CloudRegistrationAzureCreateRegistrationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure create registration forbidden response a status code equal to that given
func (o *CloudRegistrationAzureCreateRegistrationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cloud registration azure create registration forbidden response
func (o *CloudRegistrationAzureCreateRegistrationForbidden) Code() int {
	return 403
}

func (o *CloudRegistrationAzureCreateRegistrationForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationForbidden %s", 403, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationForbidden %s", 403, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureCreateRegistrationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureCreateRegistrationConflict creates a CloudRegistrationAzureCreateRegistrationConflict with default headers values
func NewCloudRegistrationAzureCreateRegistrationConflict() *CloudRegistrationAzureCreateRegistrationConflict {
	return &CloudRegistrationAzureCreateRegistrationConflict{}
}

/*
CloudRegistrationAzureCreateRegistrationConflict describes a response with status code 409, with default header values.

Conflict
*/
type CloudRegistrationAzureCreateRegistrationConflict struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure create registration conflict response has a 2xx status code
func (o *CloudRegistrationAzureCreateRegistrationConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure create registration conflict response has a 3xx status code
func (o *CloudRegistrationAzureCreateRegistrationConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure create registration conflict response has a 4xx status code
func (o *CloudRegistrationAzureCreateRegistrationConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure create registration conflict response has a 5xx status code
func (o *CloudRegistrationAzureCreateRegistrationConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure create registration conflict response a status code equal to that given
func (o *CloudRegistrationAzureCreateRegistrationConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the cloud registration azure create registration conflict response
func (o *CloudRegistrationAzureCreateRegistrationConflict) Code() int {
	return 409
}

func (o *CloudRegistrationAzureCreateRegistrationConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationConflict %s", 409, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationConflict %s", 409, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationConflict) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureCreateRegistrationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureCreateRegistrationTooManyRequests creates a CloudRegistrationAzureCreateRegistrationTooManyRequests with default headers values
func NewCloudRegistrationAzureCreateRegistrationTooManyRequests() *CloudRegistrationAzureCreateRegistrationTooManyRequests {
	return &CloudRegistrationAzureCreateRegistrationTooManyRequests{}
}

/*
CloudRegistrationAzureCreateRegistrationTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CloudRegistrationAzureCreateRegistrationTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this cloud registration azure create registration too many requests response has a 2xx status code
func (o *CloudRegistrationAzureCreateRegistrationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure create registration too many requests response has a 3xx status code
func (o *CloudRegistrationAzureCreateRegistrationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure create registration too many requests response has a 4xx status code
func (o *CloudRegistrationAzureCreateRegistrationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud registration azure create registration too many requests response has a 5xx status code
func (o *CloudRegistrationAzureCreateRegistrationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud registration azure create registration too many requests response a status code equal to that given
func (o *CloudRegistrationAzureCreateRegistrationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the cloud registration azure create registration too many requests response
func (o *CloudRegistrationAzureCreateRegistrationTooManyRequests) Code() int {
	return 429
}

func (o *CloudRegistrationAzureCreateRegistrationTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationTooManyRequests %s", 429, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationTooManyRequests %s", 429, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CloudRegistrationAzureCreateRegistrationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudRegistrationAzureCreateRegistrationInternalServerError creates a CloudRegistrationAzureCreateRegistrationInternalServerError with default headers values
func NewCloudRegistrationAzureCreateRegistrationInternalServerError() *CloudRegistrationAzureCreateRegistrationInternalServerError {
	return &CloudRegistrationAzureCreateRegistrationInternalServerError{}
}

/*
CloudRegistrationAzureCreateRegistrationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CloudRegistrationAzureCreateRegistrationInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud registration azure create registration internal server error response has a 2xx status code
func (o *CloudRegistrationAzureCreateRegistrationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud registration azure create registration internal server error response has a 3xx status code
func (o *CloudRegistrationAzureCreateRegistrationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud registration azure create registration internal server error response has a 4xx status code
func (o *CloudRegistrationAzureCreateRegistrationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud registration azure create registration internal server error response has a 5xx status code
func (o *CloudRegistrationAzureCreateRegistrationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud registration azure create registration internal server error response a status code equal to that given
func (o *CloudRegistrationAzureCreateRegistrationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cloud registration azure create registration internal server error response
func (o *CloudRegistrationAzureCreateRegistrationInternalServerError) Code() int {
	return 500
}

func (o *CloudRegistrationAzureCreateRegistrationInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationInternalServerError %s", 500, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cloud-security-registration-azure/entities/registrations/v1][%d] cloudRegistrationAzureCreateRegistrationInternalServerError %s", 500, payload)
}

func (o *CloudRegistrationAzureCreateRegistrationInternalServerError) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudRegistrationAzureCreateRegistrationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
