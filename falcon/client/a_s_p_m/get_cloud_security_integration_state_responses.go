// Code generated by go-swagger; DO NOT EDIT.

package a_s_p_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// GetCloudSecurityIntegrationStateReader is a Reader for the GetCloudSecurityIntegrationState structure.
type GetCloudSecurityIntegrationStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCloudSecurityIntegrationStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCloudSecurityIntegrationStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCloudSecurityIntegrationStateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCloudSecurityIntegrationStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCloudSecurityIntegrationStateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCloudSecurityIntegrationStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /aspm-api-gateway/api/v1/cloud_security_config] GetCloudSecurityIntegrationState", response, response.Code())
	}
}

// NewGetCloudSecurityIntegrationStateOK creates a GetCloudSecurityIntegrationStateOK with default headers values
func NewGetCloudSecurityIntegrationStateOK() *GetCloudSecurityIntegrationStateOK {
	return &GetCloudSecurityIntegrationStateOK{}
}

/*
GetCloudSecurityIntegrationStateOK describes a response with status code 200, with default header values.

OK
*/
type GetCloudSecurityIntegrationStateOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.TypesGetCloudSecurityIntegrationStateResponse
}

// IsSuccess returns true when this get cloud security integration state o k response has a 2xx status code
func (o *GetCloudSecurityIntegrationStateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cloud security integration state o k response has a 3xx status code
func (o *GetCloudSecurityIntegrationStateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cloud security integration state o k response has a 4xx status code
func (o *GetCloudSecurityIntegrationStateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cloud security integration state o k response has a 5xx status code
func (o *GetCloudSecurityIntegrationStateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cloud security integration state o k response a status code equal to that given
func (o *GetCloudSecurityIntegrationStateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cloud security integration state o k response
func (o *GetCloudSecurityIntegrationStateOK) Code() int {
	return 200
}

func (o *GetCloudSecurityIntegrationStateOK) Error() string {
	return fmt.Sprintf("[GET /aspm-api-gateway/api/v1/cloud_security_config][%d] getCloudSecurityIntegrationStateOK  %+v", 200, o.Payload)
}

func (o *GetCloudSecurityIntegrationStateOK) String() string {
	return fmt.Sprintf("[GET /aspm-api-gateway/api/v1/cloud_security_config][%d] getCloudSecurityIntegrationStateOK  %+v", 200, o.Payload)
}

func (o *GetCloudSecurityIntegrationStateOK) GetPayload() *models.TypesGetCloudSecurityIntegrationStateResponse {
	return o.Payload
}

func (o *GetCloudSecurityIntegrationStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.TypesGetCloudSecurityIntegrationStateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCloudSecurityIntegrationStateUnauthorized creates a GetCloudSecurityIntegrationStateUnauthorized with default headers values
func NewGetCloudSecurityIntegrationStateUnauthorized() *GetCloudSecurityIntegrationStateUnauthorized {
	return &GetCloudSecurityIntegrationStateUnauthorized{}
}

/*
GetCloudSecurityIntegrationStateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCloudSecurityIntegrationStateUnauthorized struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.TypesErrorMessage
}

// IsSuccess returns true when this get cloud security integration state unauthorized response has a 2xx status code
func (o *GetCloudSecurityIntegrationStateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cloud security integration state unauthorized response has a 3xx status code
func (o *GetCloudSecurityIntegrationStateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cloud security integration state unauthorized response has a 4xx status code
func (o *GetCloudSecurityIntegrationStateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cloud security integration state unauthorized response has a 5xx status code
func (o *GetCloudSecurityIntegrationStateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get cloud security integration state unauthorized response a status code equal to that given
func (o *GetCloudSecurityIntegrationStateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get cloud security integration state unauthorized response
func (o *GetCloudSecurityIntegrationStateUnauthorized) Code() int {
	return 401
}

func (o *GetCloudSecurityIntegrationStateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /aspm-api-gateway/api/v1/cloud_security_config][%d] getCloudSecurityIntegrationStateUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCloudSecurityIntegrationStateUnauthorized) String() string {
	return fmt.Sprintf("[GET /aspm-api-gateway/api/v1/cloud_security_config][%d] getCloudSecurityIntegrationStateUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCloudSecurityIntegrationStateUnauthorized) GetPayload() *models.TypesErrorMessage {
	return o.Payload
}

func (o *GetCloudSecurityIntegrationStateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.TypesErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCloudSecurityIntegrationStateForbidden creates a GetCloudSecurityIntegrationStateForbidden with default headers values
func NewGetCloudSecurityIntegrationStateForbidden() *GetCloudSecurityIntegrationStateForbidden {
	return &GetCloudSecurityIntegrationStateForbidden{}
}

/*
GetCloudSecurityIntegrationStateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCloudSecurityIntegrationStateForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.TypesErrorMessage
}

// IsSuccess returns true when this get cloud security integration state forbidden response has a 2xx status code
func (o *GetCloudSecurityIntegrationStateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cloud security integration state forbidden response has a 3xx status code
func (o *GetCloudSecurityIntegrationStateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cloud security integration state forbidden response has a 4xx status code
func (o *GetCloudSecurityIntegrationStateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cloud security integration state forbidden response has a 5xx status code
func (o *GetCloudSecurityIntegrationStateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get cloud security integration state forbidden response a status code equal to that given
func (o *GetCloudSecurityIntegrationStateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get cloud security integration state forbidden response
func (o *GetCloudSecurityIntegrationStateForbidden) Code() int {
	return 403
}

func (o *GetCloudSecurityIntegrationStateForbidden) Error() string {
	return fmt.Sprintf("[GET /aspm-api-gateway/api/v1/cloud_security_config][%d] getCloudSecurityIntegrationStateForbidden  %+v", 403, o.Payload)
}

func (o *GetCloudSecurityIntegrationStateForbidden) String() string {
	return fmt.Sprintf("[GET /aspm-api-gateway/api/v1/cloud_security_config][%d] getCloudSecurityIntegrationStateForbidden  %+v", 403, o.Payload)
}

func (o *GetCloudSecurityIntegrationStateForbidden) GetPayload() *models.TypesErrorMessage {
	return o.Payload
}

func (o *GetCloudSecurityIntegrationStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.TypesErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCloudSecurityIntegrationStateTooManyRequests creates a GetCloudSecurityIntegrationStateTooManyRequests with default headers values
func NewGetCloudSecurityIntegrationStateTooManyRequests() *GetCloudSecurityIntegrationStateTooManyRequests {
	return &GetCloudSecurityIntegrationStateTooManyRequests{}
}

/*
GetCloudSecurityIntegrationStateTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetCloudSecurityIntegrationStateTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this get cloud security integration state too many requests response has a 2xx status code
func (o *GetCloudSecurityIntegrationStateTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cloud security integration state too many requests response has a 3xx status code
func (o *GetCloudSecurityIntegrationStateTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cloud security integration state too many requests response has a 4xx status code
func (o *GetCloudSecurityIntegrationStateTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cloud security integration state too many requests response has a 5xx status code
func (o *GetCloudSecurityIntegrationStateTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get cloud security integration state too many requests response a status code equal to that given
func (o *GetCloudSecurityIntegrationStateTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get cloud security integration state too many requests response
func (o *GetCloudSecurityIntegrationStateTooManyRequests) Code() int {
	return 429
}

func (o *GetCloudSecurityIntegrationStateTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /aspm-api-gateway/api/v1/cloud_security_config][%d] getCloudSecurityIntegrationStateTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCloudSecurityIntegrationStateTooManyRequests) String() string {
	return fmt.Sprintf("[GET /aspm-api-gateway/api/v1/cloud_security_config][%d] getCloudSecurityIntegrationStateTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCloudSecurityIntegrationStateTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *GetCloudSecurityIntegrationStateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCloudSecurityIntegrationStateInternalServerError creates a GetCloudSecurityIntegrationStateInternalServerError with default headers values
func NewGetCloudSecurityIntegrationStateInternalServerError() *GetCloudSecurityIntegrationStateInternalServerError {
	return &GetCloudSecurityIntegrationStateInternalServerError{}
}

/*
GetCloudSecurityIntegrationStateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetCloudSecurityIntegrationStateInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.TypesErrorMessage
}

// IsSuccess returns true when this get cloud security integration state internal server error response has a 2xx status code
func (o *GetCloudSecurityIntegrationStateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cloud security integration state internal server error response has a 3xx status code
func (o *GetCloudSecurityIntegrationStateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cloud security integration state internal server error response has a 4xx status code
func (o *GetCloudSecurityIntegrationStateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cloud security integration state internal server error response has a 5xx status code
func (o *GetCloudSecurityIntegrationStateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get cloud security integration state internal server error response a status code equal to that given
func (o *GetCloudSecurityIntegrationStateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get cloud security integration state internal server error response
func (o *GetCloudSecurityIntegrationStateInternalServerError) Code() int {
	return 500
}

func (o *GetCloudSecurityIntegrationStateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /aspm-api-gateway/api/v1/cloud_security_config][%d] getCloudSecurityIntegrationStateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCloudSecurityIntegrationStateInternalServerError) String() string {
	return fmt.Sprintf("[GET /aspm-api-gateway/api/v1/cloud_security_config][%d] getCloudSecurityIntegrationStateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCloudSecurityIntegrationStateInternalServerError) GetPayload() *models.TypesErrorMessage {
	return o.Payload
}

func (o *GetCloudSecurityIntegrationStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.TypesErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
