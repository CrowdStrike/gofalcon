// Code generated by go-swagger; DO NOT EDIT.

package a_s_p_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetServiceArtifactsParams creates a new GetServiceArtifactsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetServiceArtifactsParams() *GetServiceArtifactsParams {
	return &GetServiceArtifactsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetServiceArtifactsParamsWithTimeout creates a new GetServiceArtifactsParams object
// with the ability to set a timeout on a request.
func NewGetServiceArtifactsParamsWithTimeout(timeout time.Duration) *GetServiceArtifactsParams {
	return &GetServiceArtifactsParams{
		timeout: timeout,
	}
}

// NewGetServiceArtifactsParamsWithContext creates a new GetServiceArtifactsParams object
// with the ability to set a context for a request.
func NewGetServiceArtifactsParamsWithContext(ctx context.Context) *GetServiceArtifactsParams {
	return &GetServiceArtifactsParams{
		Context: ctx,
	}
}

// NewGetServiceArtifactsParamsWithHTTPClient creates a new GetServiceArtifactsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetServiceArtifactsParamsWithHTTPClient(client *http.Client) *GetServiceArtifactsParams {
	return &GetServiceArtifactsParams{
		HTTPClient: client,
	}
}

/*
GetServiceArtifactsParams contains all the parameters to send to the API endpoint

	for the get service artifacts operation.

	Typically these are written to a http.Request.
*/
type GetServiceArtifactsParams struct {

	// Direction.
	Direction *string

	// Limit.
	Limit *int64

	// Offset.
	Offset *int64

	// OptionalTime.
	OptionalTime *int64

	// OrderBy.
	OrderBy []string

	// PersistentSignature.
	PersistentSignature string

	// RevisionID.
	RevisionID *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get service artifacts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServiceArtifactsParams) WithDefaults() *GetServiceArtifactsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get service artifacts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServiceArtifactsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get service artifacts params
func (o *GetServiceArtifactsParams) WithTimeout(timeout time.Duration) *GetServiceArtifactsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get service artifacts params
func (o *GetServiceArtifactsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get service artifacts params
func (o *GetServiceArtifactsParams) WithContext(ctx context.Context) *GetServiceArtifactsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get service artifacts params
func (o *GetServiceArtifactsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get service artifacts params
func (o *GetServiceArtifactsParams) WithHTTPClient(client *http.Client) *GetServiceArtifactsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get service artifacts params
func (o *GetServiceArtifactsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDirection adds the direction to the get service artifacts params
func (o *GetServiceArtifactsParams) WithDirection(direction *string) *GetServiceArtifactsParams {
	o.SetDirection(direction)
	return o
}

// SetDirection adds the direction to the get service artifacts params
func (o *GetServiceArtifactsParams) SetDirection(direction *string) {
	o.Direction = direction
}

// WithLimit adds the limit to the get service artifacts params
func (o *GetServiceArtifactsParams) WithLimit(limit *int64) *GetServiceArtifactsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get service artifacts params
func (o *GetServiceArtifactsParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the get service artifacts params
func (o *GetServiceArtifactsParams) WithOffset(offset *int64) *GetServiceArtifactsParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get service artifacts params
func (o *GetServiceArtifactsParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithOptionalTime adds the optionalTime to the get service artifacts params
func (o *GetServiceArtifactsParams) WithOptionalTime(optionalTime *int64) *GetServiceArtifactsParams {
	o.SetOptionalTime(optionalTime)
	return o
}

// SetOptionalTime adds the optionalTime to the get service artifacts params
func (o *GetServiceArtifactsParams) SetOptionalTime(optionalTime *int64) {
	o.OptionalTime = optionalTime
}

// WithOrderBy adds the orderBy to the get service artifacts params
func (o *GetServiceArtifactsParams) WithOrderBy(orderBy []string) *GetServiceArtifactsParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the get service artifacts params
func (o *GetServiceArtifactsParams) SetOrderBy(orderBy []string) {
	o.OrderBy = orderBy
}

// WithPersistentSignature adds the persistentSignature to the get service artifacts params
func (o *GetServiceArtifactsParams) WithPersistentSignature(persistentSignature string) *GetServiceArtifactsParams {
	o.SetPersistentSignature(persistentSignature)
	return o
}

// SetPersistentSignature adds the persistentSignature to the get service artifacts params
func (o *GetServiceArtifactsParams) SetPersistentSignature(persistentSignature string) {
	o.PersistentSignature = persistentSignature
}

// WithRevisionID adds the revisionID to the get service artifacts params
func (o *GetServiceArtifactsParams) WithRevisionID(revisionID *int64) *GetServiceArtifactsParams {
	o.SetRevisionID(revisionID)
	return o
}

// SetRevisionID adds the revisionId to the get service artifacts params
func (o *GetServiceArtifactsParams) SetRevisionID(revisionID *int64) {
	o.RevisionID = revisionID
}

// WriteToRequest writes these params to a swagger request
func (o *GetServiceArtifactsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Direction != nil {

		// query param direction
		var qrDirection string

		if o.Direction != nil {
			qrDirection = *o.Direction
		}
		qDirection := qrDirection
		if qDirection != "" {

			if err := r.SetQueryParam("direction", qDirection); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.OptionalTime != nil {

		// query param optionalTime
		var qrOptionalTime int64

		if o.OptionalTime != nil {
			qrOptionalTime = *o.OptionalTime
		}
		qOptionalTime := swag.FormatInt64(qrOptionalTime)
		if qOptionalTime != "" {

			if err := r.SetQueryParam("optionalTime", qOptionalTime); err != nil {
				return err
			}
		}
	}

	if o.OrderBy != nil {

		// binding items for orderBy
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param orderBy
		if err := r.SetQueryParam("orderBy", joinedOrderBy...); err != nil {
			return err
		}
	}

	// query param persistentSignature
	qrPersistentSignature := o.PersistentSignature
	qPersistentSignature := qrPersistentSignature
	if qPersistentSignature != "" {

		if err := r.SetQueryParam("persistentSignature", qPersistentSignature); err != nil {
			return err
		}
	}

	if o.RevisionID != nil {

		// query param revisionId
		var qrRevisionID int64

		if o.RevisionID != nil {
			qrRevisionID = *o.RevisionID
		}
		qRevisionID := swag.FormatInt64(qrRevisionID)
		if qRevisionID != "" {

			if err := r.SetQueryParam("revisionId", qRevisionID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetServiceArtifacts binds the parameter orderBy
func (o *GetServiceArtifactsParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderBy

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
