// Code generated by go-swagger; DO NOT EDIT.

package a_s_p_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// GetCSPMInventoryServiceDetailsReader is a Reader for the GetCSPMInventoryServiceDetails structure.
type GetCSPMInventoryServiceDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCSPMInventoryServiceDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCSPMInventoryServiceDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCSPMInventoryServiceDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCSPMInventoryServiceDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCSPMInventoryServiceDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCSPMInventoryServiceDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCSPMInventoryServiceDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCSPMInventoryServiceDetailsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /application-security/combined/cspm-inventory-service-data/v1] GetCSPMInventoryServiceDetails", response, response.Code())
	}
}

// NewGetCSPMInventoryServiceDetailsOK creates a GetCSPMInventoryServiceDetailsOK with default headers values
func NewGetCSPMInventoryServiceDetailsOK() *GetCSPMInventoryServiceDetailsOK {
	return &GetCSPMInventoryServiceDetailsOK{}
}

/*
GetCSPMInventoryServiceDetailsOK describes a response with status code 200, with default header values.

OK
*/
type GetCSPMInventoryServiceDetailsOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.TypesGeneralQueryResponse
}

// IsSuccess returns true when this get c s p m inventory service details o k response has a 2xx status code
func (o *GetCSPMInventoryServiceDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get c s p m inventory service details o k response has a 3xx status code
func (o *GetCSPMInventoryServiceDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m inventory service details o k response has a 4xx status code
func (o *GetCSPMInventoryServiceDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c s p m inventory service details o k response has a 5xx status code
func (o *GetCSPMInventoryServiceDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get c s p m inventory service details o k response a status code equal to that given
func (o *GetCSPMInventoryServiceDetailsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get c s p m inventory service details o k response
func (o *GetCSPMInventoryServiceDetailsOK) Code() int {
	return 200
}

func (o *GetCSPMInventoryServiceDetailsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsOK %s", 200, payload)
}

func (o *GetCSPMInventoryServiceDetailsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsOK %s", 200, payload)
}

func (o *GetCSPMInventoryServiceDetailsOK) GetPayload() *models.TypesGeneralQueryResponse {
	return o.Payload
}

func (o *GetCSPMInventoryServiceDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.TypesGeneralQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCSPMInventoryServiceDetailsBadRequest creates a GetCSPMInventoryServiceDetailsBadRequest with default headers values
func NewGetCSPMInventoryServiceDetailsBadRequest() *GetCSPMInventoryServiceDetailsBadRequest {
	return &GetCSPMInventoryServiceDetailsBadRequest{}
}

/*
GetCSPMInventoryServiceDetailsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetCSPMInventoryServiceDetailsBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.TypesErrorMessage
}

// IsSuccess returns true when this get c s p m inventory service details bad request response has a 2xx status code
func (o *GetCSPMInventoryServiceDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s p m inventory service details bad request response has a 3xx status code
func (o *GetCSPMInventoryServiceDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m inventory service details bad request response has a 4xx status code
func (o *GetCSPMInventoryServiceDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c s p m inventory service details bad request response has a 5xx status code
func (o *GetCSPMInventoryServiceDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get c s p m inventory service details bad request response a status code equal to that given
func (o *GetCSPMInventoryServiceDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get c s p m inventory service details bad request response
func (o *GetCSPMInventoryServiceDetailsBadRequest) Code() int {
	return 400
}

func (o *GetCSPMInventoryServiceDetailsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsBadRequest %s", 400, payload)
}

func (o *GetCSPMInventoryServiceDetailsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsBadRequest %s", 400, payload)
}

func (o *GetCSPMInventoryServiceDetailsBadRequest) GetPayload() *models.TypesErrorMessage {
	return o.Payload
}

func (o *GetCSPMInventoryServiceDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.TypesErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCSPMInventoryServiceDetailsUnauthorized creates a GetCSPMInventoryServiceDetailsUnauthorized with default headers values
func NewGetCSPMInventoryServiceDetailsUnauthorized() *GetCSPMInventoryServiceDetailsUnauthorized {
	return &GetCSPMInventoryServiceDetailsUnauthorized{}
}

/*
GetCSPMInventoryServiceDetailsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCSPMInventoryServiceDetailsUnauthorized struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.TypesErrorMessage
}

// IsSuccess returns true when this get c s p m inventory service details unauthorized response has a 2xx status code
func (o *GetCSPMInventoryServiceDetailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s p m inventory service details unauthorized response has a 3xx status code
func (o *GetCSPMInventoryServiceDetailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m inventory service details unauthorized response has a 4xx status code
func (o *GetCSPMInventoryServiceDetailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c s p m inventory service details unauthorized response has a 5xx status code
func (o *GetCSPMInventoryServiceDetailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get c s p m inventory service details unauthorized response a status code equal to that given
func (o *GetCSPMInventoryServiceDetailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get c s p m inventory service details unauthorized response
func (o *GetCSPMInventoryServiceDetailsUnauthorized) Code() int {
	return 401
}

func (o *GetCSPMInventoryServiceDetailsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsUnauthorized %s", 401, payload)
}

func (o *GetCSPMInventoryServiceDetailsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsUnauthorized %s", 401, payload)
}

func (o *GetCSPMInventoryServiceDetailsUnauthorized) GetPayload() *models.TypesErrorMessage {
	return o.Payload
}

func (o *GetCSPMInventoryServiceDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.TypesErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCSPMInventoryServiceDetailsForbidden creates a GetCSPMInventoryServiceDetailsForbidden with default headers values
func NewGetCSPMInventoryServiceDetailsForbidden() *GetCSPMInventoryServiceDetailsForbidden {
	return &GetCSPMInventoryServiceDetailsForbidden{}
}

/*
GetCSPMInventoryServiceDetailsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCSPMInventoryServiceDetailsForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.TypesErrorMessage
}

// IsSuccess returns true when this get c s p m inventory service details forbidden response has a 2xx status code
func (o *GetCSPMInventoryServiceDetailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s p m inventory service details forbidden response has a 3xx status code
func (o *GetCSPMInventoryServiceDetailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m inventory service details forbidden response has a 4xx status code
func (o *GetCSPMInventoryServiceDetailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c s p m inventory service details forbidden response has a 5xx status code
func (o *GetCSPMInventoryServiceDetailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get c s p m inventory service details forbidden response a status code equal to that given
func (o *GetCSPMInventoryServiceDetailsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get c s p m inventory service details forbidden response
func (o *GetCSPMInventoryServiceDetailsForbidden) Code() int {
	return 403
}

func (o *GetCSPMInventoryServiceDetailsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsForbidden %s", 403, payload)
}

func (o *GetCSPMInventoryServiceDetailsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsForbidden %s", 403, payload)
}

func (o *GetCSPMInventoryServiceDetailsForbidden) GetPayload() *models.TypesErrorMessage {
	return o.Payload
}

func (o *GetCSPMInventoryServiceDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.TypesErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCSPMInventoryServiceDetailsTooManyRequests creates a GetCSPMInventoryServiceDetailsTooManyRequests with default headers values
func NewGetCSPMInventoryServiceDetailsTooManyRequests() *GetCSPMInventoryServiceDetailsTooManyRequests {
	return &GetCSPMInventoryServiceDetailsTooManyRequests{}
}

/*
GetCSPMInventoryServiceDetailsTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetCSPMInventoryServiceDetailsTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this get c s p m inventory service details too many requests response has a 2xx status code
func (o *GetCSPMInventoryServiceDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s p m inventory service details too many requests response has a 3xx status code
func (o *GetCSPMInventoryServiceDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m inventory service details too many requests response has a 4xx status code
func (o *GetCSPMInventoryServiceDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c s p m inventory service details too many requests response has a 5xx status code
func (o *GetCSPMInventoryServiceDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get c s p m inventory service details too many requests response a status code equal to that given
func (o *GetCSPMInventoryServiceDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get c s p m inventory service details too many requests response
func (o *GetCSPMInventoryServiceDetailsTooManyRequests) Code() int {
	return 429
}

func (o *GetCSPMInventoryServiceDetailsTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsTooManyRequests %s", 429, payload)
}

func (o *GetCSPMInventoryServiceDetailsTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsTooManyRequests %s", 429, payload)
}

func (o *GetCSPMInventoryServiceDetailsTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *GetCSPMInventoryServiceDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCSPMInventoryServiceDetailsInternalServerError creates a GetCSPMInventoryServiceDetailsInternalServerError with default headers values
func NewGetCSPMInventoryServiceDetailsInternalServerError() *GetCSPMInventoryServiceDetailsInternalServerError {
	return &GetCSPMInventoryServiceDetailsInternalServerError{}
}

/*
GetCSPMInventoryServiceDetailsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetCSPMInventoryServiceDetailsInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.TypesErrorMessage
}

// IsSuccess returns true when this get c s p m inventory service details internal server error response has a 2xx status code
func (o *GetCSPMInventoryServiceDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s p m inventory service details internal server error response has a 3xx status code
func (o *GetCSPMInventoryServiceDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m inventory service details internal server error response has a 4xx status code
func (o *GetCSPMInventoryServiceDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c s p m inventory service details internal server error response has a 5xx status code
func (o *GetCSPMInventoryServiceDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get c s p m inventory service details internal server error response a status code equal to that given
func (o *GetCSPMInventoryServiceDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get c s p m inventory service details internal server error response
func (o *GetCSPMInventoryServiceDetailsInternalServerError) Code() int {
	return 500
}

func (o *GetCSPMInventoryServiceDetailsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsInternalServerError %s", 500, payload)
}

func (o *GetCSPMInventoryServiceDetailsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsInternalServerError %s", 500, payload)
}

func (o *GetCSPMInventoryServiceDetailsInternalServerError) GetPayload() *models.TypesErrorMessage {
	return o.Payload
}

func (o *GetCSPMInventoryServiceDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.TypesErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCSPMInventoryServiceDetailsServiceUnavailable creates a GetCSPMInventoryServiceDetailsServiceUnavailable with default headers values
func NewGetCSPMInventoryServiceDetailsServiceUnavailable() *GetCSPMInventoryServiceDetailsServiceUnavailable {
	return &GetCSPMInventoryServiceDetailsServiceUnavailable{}
}

/*
GetCSPMInventoryServiceDetailsServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable
*/
type GetCSPMInventoryServiceDetailsServiceUnavailable struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.TypesErrorMessage
}

// IsSuccess returns true when this get c s p m inventory service details service unavailable response has a 2xx status code
func (o *GetCSPMInventoryServiceDetailsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s p m inventory service details service unavailable response has a 3xx status code
func (o *GetCSPMInventoryServiceDetailsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s p m inventory service details service unavailable response has a 4xx status code
func (o *GetCSPMInventoryServiceDetailsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c s p m inventory service details service unavailable response has a 5xx status code
func (o *GetCSPMInventoryServiceDetailsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get c s p m inventory service details service unavailable response a status code equal to that given
func (o *GetCSPMInventoryServiceDetailsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the get c s p m inventory service details service unavailable response
func (o *GetCSPMInventoryServiceDetailsServiceUnavailable) Code() int {
	return 503
}

func (o *GetCSPMInventoryServiceDetailsServiceUnavailable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsServiceUnavailable %s", 503, payload)
}

func (o *GetCSPMInventoryServiceDetailsServiceUnavailable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application-security/combined/cspm-inventory-service-data/v1][%d] getCSPMInventoryServiceDetailsServiceUnavailable %s", 503, payload)
}

func (o *GetCSPMInventoryServiceDetailsServiceUnavailable) GetPayload() *models.TypesErrorMessage {
	return o.Payload
}

func (o *GetCSPMInventoryServiceDetailsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.TypesErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
