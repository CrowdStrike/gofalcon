// Code generated by go-swagger; DO NOT EDIT.

package custom_ioa

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteRuleGroupsMixin0Params creates a new DeleteRuleGroupsMixin0Params object
// with the default values initialized.
func NewDeleteRuleGroupsMixin0Params() *DeleteRuleGroupsMixin0Params {
	var ()
	return &DeleteRuleGroupsMixin0Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteRuleGroupsMixin0ParamsWithTimeout creates a new DeleteRuleGroupsMixin0Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteRuleGroupsMixin0ParamsWithTimeout(timeout time.Duration) *DeleteRuleGroupsMixin0Params {
	var ()
	return &DeleteRuleGroupsMixin0Params{

		timeout: timeout,
	}
}

// NewDeleteRuleGroupsMixin0ParamsWithContext creates a new DeleteRuleGroupsMixin0Params object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteRuleGroupsMixin0ParamsWithContext(ctx context.Context) *DeleteRuleGroupsMixin0Params {
	var ()
	return &DeleteRuleGroupsMixin0Params{

		Context: ctx,
	}
}

// NewDeleteRuleGroupsMixin0ParamsWithHTTPClient creates a new DeleteRuleGroupsMixin0Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteRuleGroupsMixin0ParamsWithHTTPClient(client *http.Client) *DeleteRuleGroupsMixin0Params {
	var ()
	return &DeleteRuleGroupsMixin0Params{
		HTTPClient: client,
	}
}

/*DeleteRuleGroupsMixin0Params contains all the parameters to send to the API endpoint
for the delete rule groups mixin0 operation typically these are written to a http.Request
*/
type DeleteRuleGroupsMixin0Params struct {

	/*XCSUSERNAME
	  The user ID

	*/
	XCSUSERNAME string
	/*Comment
	  Explains why the entity is being deleted

	*/
	Comment *string
	/*Ids
	  The IDs of the entities

	*/
	Ids []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) WithTimeout(timeout time.Duration) *DeleteRuleGroupsMixin0Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) WithContext(ctx context.Context) *DeleteRuleGroupsMixin0Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) WithHTTPClient(client *http.Client) *DeleteRuleGroupsMixin0Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXCSUSERNAME adds the xCSUSERNAME to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) WithXCSUSERNAME(xCSUSERNAME string) *DeleteRuleGroupsMixin0Params {
	o.SetXCSUSERNAME(xCSUSERNAME)
	return o
}

// SetXCSUSERNAME adds the xCSUSERNAME to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) SetXCSUSERNAME(xCSUSERNAME string) {
	o.XCSUSERNAME = xCSUSERNAME
}

// WithComment adds the comment to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) WithComment(comment *string) *DeleteRuleGroupsMixin0Params {
	o.SetComment(comment)
	return o
}

// SetComment adds the comment to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) SetComment(comment *string) {
	o.Comment = comment
}

// WithIds adds the ids to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) WithIds(ids []string) *DeleteRuleGroupsMixin0Params {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the delete rule groups mixin0 params
func (o *DeleteRuleGroupsMixin0Params) SetIds(ids []string) {
	o.Ids = ids
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteRuleGroupsMixin0Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param X-CS-USERNAME
	if err := r.SetHeaderParam("X-CS-USERNAME", o.XCSUSERNAME); err != nil {
		return err
	}

	if o.Comment != nil {

		// query param comment
		var qrComment string
		if o.Comment != nil {
			qrComment = *o.Comment
		}
		qComment := qrComment
		if qComment != "" {
			if err := r.SetQueryParam("comment", qComment); err != nil {
				return err
			}
		}

	}

	valuesIds := o.Ids

	joinedIds := swag.JoinByFormat(valuesIds, "multi")
	// query array param ids
	if err := r.SetQueryParam("ids", joinedIds...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
