// Code generated by go-swagger; DO NOT EDIT.

package cloud_security_assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// New creates a new cloud security assets API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

// New creates a new cloud security assets API client with basic auth credentials.
// It takes the following parameters:
// - host: http host (github.com).
// - basePath: any base path for the API client ("/v1", "/v3").
// - scheme: http scheme ("http", "https").
// - user: user for basic authentication header.
// - password: password for basic authentication header.
func NewClientWithBasicAuth(host, basePath, scheme, user, password string) ClientService {
	transport := httptransport.New(host, basePath, []string{scheme})
	transport.DefaultAuthentication = httptransport.BasicAuth(user, password)
	return &Client{transport: transport, formats: strfmt.Default}
}

// New creates a new cloud security assets API client with a bearer token for authentication.
// It takes the following parameters:
// - host: http host (github.com).
// - basePath: any base path for the API client ("/v1", "/v3").
// - scheme: http scheme ("http", "https").
// - bearerToken: bearer token for Bearer authentication header.
func NewClientWithBearerToken(host, basePath, scheme, bearerToken string) ClientService {
	transport := httptransport.New(host, basePath, []string{scheme})
	transport.DefaultAuthentication = httptransport.BearerToken(bearerToken)
	return &Client{transport: transport, formats: strfmt.Default}
}

/*
Client for cloud security assets API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption may be used to customize the behavior of Client methods.
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CloudSecurityAssetsCombinedComplianceByAccount(params *CloudSecurityAssetsCombinedComplianceByAccountParams, opts ...ClientOption) (*CloudSecurityAssetsCombinedComplianceByAccountOK, error)

	CloudSecurityAssetsEntitiesGet(params *CloudSecurityAssetsEntitiesGetParams, opts ...ClientOption) (*CloudSecurityAssetsEntitiesGetOK, error)

	CloudSecurityAssetsQueries(params *CloudSecurityAssetsQueriesParams, opts ...ClientOption) (*CloudSecurityAssetsQueriesOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CloudSecurityAssetsCombinedComplianceByAccount gets combined compliance data aggregated by account and region results can be filtered and sorted
*/
func (a *Client) CloudSecurityAssetsCombinedComplianceByAccount(params *CloudSecurityAssetsCombinedComplianceByAccountParams, opts ...ClientOption) (*CloudSecurityAssetsCombinedComplianceByAccountOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCloudSecurityAssetsCombinedComplianceByAccountParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "cloud-security-assets-combined-compliance-by-account",
		Method:             "GET",
		PathPattern:        "/cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CloudSecurityAssetsCombinedComplianceByAccountReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CloudSecurityAssetsCombinedComplianceByAccountOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cloud-security-assets-combined-compliance-by-account: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CloudSecurityAssetsEntitiesGet gets raw resources based on the provided i ds param maximum of 100 resources can be requested with this method use p o s t method with same path if more are required
*/
func (a *Client) CloudSecurityAssetsEntitiesGet(params *CloudSecurityAssetsEntitiesGetParams, opts ...ClientOption) (*CloudSecurityAssetsEntitiesGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCloudSecurityAssetsEntitiesGetParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "cloud-security-assets-entities-get",
		Method:             "GET",
		PathPattern:        "/cloud-security-assets/entities/resources/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CloudSecurityAssetsEntitiesGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CloudSecurityAssetsEntitiesGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cloud-security-assets-entities-get: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CloudSecurityAssetsQueries gets a list of resource i ds for the given parameters filters and sort criteria
*/
func (a *Client) CloudSecurityAssetsQueries(params *CloudSecurityAssetsQueriesParams, opts ...ClientOption) (*CloudSecurityAssetsQueriesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCloudSecurityAssetsQueriesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "cloud-security-assets-queries",
		Method:             "GET",
		PathPattern:        "/cloud-security-assets/queries/resources/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CloudSecurityAssetsQueriesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CloudSecurityAssetsQueriesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cloud-security-assets-queries: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
