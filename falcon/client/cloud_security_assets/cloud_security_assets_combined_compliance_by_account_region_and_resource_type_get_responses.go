// Code generated by go-swagger; DO NOT EDIT.

package cloud_security_assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetReader is a Reader for the CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGet structure.
type CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1] cloud-security-assets-combined-compliance-by-account-region-and-resource-type-get", response, response.Code())
	}
}

// NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK creates a CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK with default headers values
func NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK() *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK {
	return &CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK{}
}

/*
CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK describes a response with status code 200, with default header values.

OK
*/
type CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.AssetsComplianceResponse
}

// IsSuccess returns true when this cloud security assets combined compliance by account region and resource type get o k response has a 2xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud security assets combined compliance by account region and resource type get o k response has a 3xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security assets combined compliance by account region and resource type get o k response has a 4xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud security assets combined compliance by account region and resource type get o k response has a 5xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security assets combined compliance by account region and resource type get o k response a status code equal to that given
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cloud security assets combined compliance by account region and resource type get o k response
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK) Code() int {
	return 200
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK) Error() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK  %+v", 200, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK) String() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK  %+v", 200, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK) GetPayload() *models.AssetsComplianceResponse {
	return o.Payload
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.AssetsComplianceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest creates a CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest with default headers values
func NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest() *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest {
	return &CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest{}
}

/*
CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RestCursorResponseFields
}

// IsSuccess returns true when this cloud security assets combined compliance by account region and resource type get bad request response has a 2xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud security assets combined compliance by account region and resource type get bad request response has a 3xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security assets combined compliance by account region and resource type get bad request response has a 4xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud security assets combined compliance by account region and resource type get bad request response has a 5xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security assets combined compliance by account region and resource type get bad request response a status code equal to that given
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cloud security assets combined compliance by account region and resource type get bad request response
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest) Code() int {
	return 400
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest  %+v", 400, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest) String() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest  %+v", 400, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest) GetPayload() *models.RestCursorResponseFields {
	return o.Payload
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RestCursorResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden creates a CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden with default headers values
func NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden() *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden {
	return &CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden{}
}

/*
CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this cloud security assets combined compliance by account region and resource type get forbidden response has a 2xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud security assets combined compliance by account region and resource type get forbidden response has a 3xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security assets combined compliance by account region and resource type get forbidden response has a 4xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud security assets combined compliance by account region and resource type get forbidden response has a 5xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security assets combined compliance by account region and resource type get forbidden response a status code equal to that given
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cloud security assets combined compliance by account region and resource type get forbidden response
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden) Code() int {
	return 403
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden) Error() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden  %+v", 403, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden) String() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden  %+v", 403, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound creates a CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound with default headers values
func NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound() *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound {
	return &CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound{}
}

/*
CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RestCursorResponseFields
}

// IsSuccess returns true when this cloud security assets combined compliance by account region and resource type get not found response has a 2xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud security assets combined compliance by account region and resource type get not found response has a 3xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security assets combined compliance by account region and resource type get not found response has a 4xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud security assets combined compliance by account region and resource type get not found response has a 5xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security assets combined compliance by account region and resource type get not found response a status code equal to that given
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the cloud security assets combined compliance by account region and resource type get not found response
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound) Code() int {
	return 404
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound) Error() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound  %+v", 404, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound) String() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound  %+v", 404, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound) GetPayload() *models.RestCursorResponseFields {
	return o.Payload
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RestCursorResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout creates a CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout with default headers values
func NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout() *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout {
	return &CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout{}
}

/*
CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout describes a response with status code 408, with default header values.

Request Timeout
*/
type CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RestCursorResponseFields
}

// IsSuccess returns true when this cloud security assets combined compliance by account region and resource type get request timeout response has a 2xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud security assets combined compliance by account region and resource type get request timeout response has a 3xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security assets combined compliance by account region and resource type get request timeout response has a 4xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud security assets combined compliance by account region and resource type get request timeout response has a 5xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security assets combined compliance by account region and resource type get request timeout response a status code equal to that given
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout) IsCode(code int) bool {
	return code == 408
}

// Code gets the status code for the cloud security assets combined compliance by account region and resource type get request timeout response
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout) Code() int {
	return 408
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout  %+v", 408, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout) String() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout  %+v", 408, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout) GetPayload() *models.RestCursorResponseFields {
	return o.Payload
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RestCursorResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests creates a CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests with default headers values
func NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests() *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests {
	return &CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests{}
}

/*
CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this cloud security assets combined compliance by account region and resource type get too many requests response has a 2xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud security assets combined compliance by account region and resource type get too many requests response has a 3xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security assets combined compliance by account region and resource type get too many requests response has a 4xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud security assets combined compliance by account region and resource type get too many requests response has a 5xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security assets combined compliance by account region and resource type get too many requests response a status code equal to that given
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the cloud security assets combined compliance by account region and resource type get too many requests response
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests) Code() int {
	return 429
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests) String() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError creates a CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError with default headers values
func NewCloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError() *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError {
	return &CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError{}
}

/*
CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RestCursorResponseFields
}

// IsSuccess returns true when this cloud security assets combined compliance by account region and resource type get internal server error response has a 2xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud security assets combined compliance by account region and resource type get internal server error response has a 3xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security assets combined compliance by account region and resource type get internal server error response has a 4xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud security assets combined compliance by account region and resource type get internal server error response has a 5xx status code
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud security assets combined compliance by account region and resource type get internal server error response a status code equal to that given
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cloud security assets combined compliance by account region and resource type get internal server error response
func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError) Code() int {
	return 500
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError) String() string {
	return fmt.Sprintf("[GET /cloud-security-assets/combined/compliance-controls/by-account-region-and-resource-type/v1][%d] cloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError  %+v", 500, o.Payload)
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError) GetPayload() *models.RestCursorResponseFields {
	return o.Payload
}

func (o *CloudSecurityAssetsCombinedComplianceByAccountRegionAndResourceTypeGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RestCursorResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
