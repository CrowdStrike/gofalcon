// Code generated by go-swagger; DO NOT EDIT.

package cloud_security_assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCloudSecurityAssetsQueriesParams creates a new CloudSecurityAssetsQueriesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCloudSecurityAssetsQueriesParams() *CloudSecurityAssetsQueriesParams {
	return &CloudSecurityAssetsQueriesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCloudSecurityAssetsQueriesParamsWithTimeout creates a new CloudSecurityAssetsQueriesParams object
// with the ability to set a timeout on a request.
func NewCloudSecurityAssetsQueriesParamsWithTimeout(timeout time.Duration) *CloudSecurityAssetsQueriesParams {
	return &CloudSecurityAssetsQueriesParams{
		timeout: timeout,
	}
}

// NewCloudSecurityAssetsQueriesParamsWithContext creates a new CloudSecurityAssetsQueriesParams object
// with the ability to set a context for a request.
func NewCloudSecurityAssetsQueriesParamsWithContext(ctx context.Context) *CloudSecurityAssetsQueriesParams {
	return &CloudSecurityAssetsQueriesParams{
		Context: ctx,
	}
}

// NewCloudSecurityAssetsQueriesParamsWithHTTPClient creates a new CloudSecurityAssetsQueriesParams object
// with the ability to set a custom HTTPClient for a request.
func NewCloudSecurityAssetsQueriesParamsWithHTTPClient(client *http.Client) *CloudSecurityAssetsQueriesParams {
	return &CloudSecurityAssetsQueriesParams{
		HTTPClient: client,
	}
}

/*
CloudSecurityAssetsQueriesParams contains all the parameters to send to the API endpoint

	for the cloud security assets queries operation.

	Typically these are written to a http.Request.
*/
type CloudSecurityAssetsQueriesParams struct {

	/* After.

	   token-based pagination. use for paginating through an entire result set. Use only one of 'offset' and 'after' parameters for paginating
	*/
	After *string

	/* Filter.

	     FQL string to filter on asset contents. Filterable fields include:
	- `account_id`
	- `account_name`
	- `active`
	- `application_security.business_applications`
	- `application_security.business_criticality`
	- `application_security.service_names`
	- `azure.vm_id`
	- `business_impact`
	- `cloud_group`
	- `cloud_label`
	- `cloud_label_id`
	- `cloud_provider`
	- `cloud_scope`
	- `cluster_id`
	- `cluster_name`
	- `compartment_ocid`
	- `compliant.benchmark_name`
	- `compliant.benchmark_version`
	- `compliant.framework`
	- `compliant.policy_id`
	- `compliant.requirement`
	- `compliant.rule`
	- `compliant.section`
	- `configuration.id`
	- `creation_time`
	- `cve_ids`
	- `data_classifications.found`
	- `data_classifications.label`
	- `data_classifications.label_id`
	- `data_classifications.scanned`
	- `data_classifications.tag`
	- `data_classifications.tag_id`
	- `environment`
	- `exprt_ratings`
	- `first_seen`
	- `highest_severity`
	- `id`
	- `insights.boolean_value`
	- `insights.id`
	- `instance_id`
	- `instance_state`
	- `ioa_count`
	- `iom_count`
	- `legacy_resource_id`
	- `legacy_uuid`
	- `managed_by`
	- `non_compliant.benchmark_name`
	- `non_compliant.benchmark_version`
	- `non_compliant.framework`
	- `non_compliant.policy_id`
	- `non_compliant.requirement`
	- `non_compliant.rule`
	- `non_compliant.section`
	- `non_compliant.severity`
	- `organization_Id`
	- `os_version`
	- `platform_name`
	- `publicly_exposed`
	- `region`
	- `resource_id`
	- `resource_name`
	- `resource_type`
	- `resource_type_name`
	- `sensor_priority`
	- `service`
	- `service_category`
	- `severity`
	- `snapshot_detections`
	- `ssm_managed`
	- `status`
	- `tag_key`
	- `tag_value`
	- `tags`
	- `tenant_id`
	- `updated_at`
	- `vmware.guest_os_id`
	- `vmware.guest_os_version`
	- `vmware.host_system_name`
	- `vmware.host_type`
	- `vmware.instance_uuid`
	- `vmware.vm_host_name`
	- `vmware.vm_tools_status`
	- `zone`
	*/
	Filter *string

	/* Limit.

	   The maximum number of items to return. When not specified or 0, 500 is used. When larger than 1000, 1000 is used.

	   Default: 500
	*/
	Limit *int64

	/* Offset.

	   Offset returned assets. Use only one of 'offset' and 'after' parameter for paginating. 'offset' can only be used on offsets < 10,000. For paginating through the entire result set, use 'after' parameter
	*/
	Offset *int64

	/* Sort.

	     The field to sort on.  Sortable fields include:
	- `account_id`
	- `account_name`
	- `active`
	- `cloud_provider`
	- `cluster_id`
	- `cluster_name`
	- `compartment_name`
	- `compartment_ocid`
	- `compartment_path`
	- `creation_time`
	- `data_classifications.found`
	- `data_classifications.scanned`
	- `first_seen`
	- `id`
	- `instance_id`
	- `instance_state`
	- `ioa_count`
	- `iom_count`
	- `managed_by`
	- `organization_Id`
	- `os_version`
	- `platform_name`
	- `publicly_exposed`
	- `region`
	- `resource_id`
	- `resource_name`
	- `resource_type`
	- `resource_type_name`
	- `service`
	- `service_category`
	- `ssm_managed`
	- `status`
	- `tenancy_name`
	- `tenancy_ocid`
	- `tenancy_type`
	- `tenant_id`
	- `updated_at`
	- `vmware.guest_os_id`
	- `vmware.guest_os_version`
	- `vmware.host_system_name`
	- `vmware.host_type`
	- `vmware.instance_uuid`
	- `vmware.vm_host_name`
	- `vmware.vm_tools_status`
	- `zone`

	Use `|asc` or `|desc` suffix to specify sort direction.
	*/
	Sort *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the cloud security assets queries params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CloudSecurityAssetsQueriesParams) WithDefaults() *CloudSecurityAssetsQueriesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the cloud security assets queries params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CloudSecurityAssetsQueriesParams) SetDefaults() {
	var (
		limitDefault = int64(500)
	)

	val := CloudSecurityAssetsQueriesParams{
		Limit: &limitDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) WithTimeout(timeout time.Duration) *CloudSecurityAssetsQueriesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) WithContext(ctx context.Context) *CloudSecurityAssetsQueriesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) WithHTTPClient(client *http.Client) *CloudSecurityAssetsQueriesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAfter adds the after to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) WithAfter(after *string) *CloudSecurityAssetsQueriesParams {
	o.SetAfter(after)
	return o
}

// SetAfter adds the after to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) SetAfter(after *string) {
	o.After = after
}

// WithFilter adds the filter to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) WithFilter(filter *string) *CloudSecurityAssetsQueriesParams {
	o.SetFilter(filter)
	return o
}

// SetFilter adds the filter to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) SetFilter(filter *string) {
	o.Filter = filter
}

// WithLimit adds the limit to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) WithLimit(limit *int64) *CloudSecurityAssetsQueriesParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) WithOffset(offset *int64) *CloudSecurityAssetsQueriesParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithSort adds the sort to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) WithSort(sort *string) *CloudSecurityAssetsQueriesParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the cloud security assets queries params
func (o *CloudSecurityAssetsQueriesParams) SetSort(sort *string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *CloudSecurityAssetsQueriesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.After != nil {

		// query param after
		var qrAfter string

		if o.After != nil {
			qrAfter = *o.After
		}
		qAfter := qrAfter
		if qAfter != "" {

			if err := r.SetQueryParam("after", qAfter); err != nil {
				return err
			}
		}
	}

	if o.Filter != nil {

		// query param filter
		var qrFilter string

		if o.Filter != nil {
			qrFilter = *o.Filter
		}
		qFilter := qrFilter
		if qFilter != "" {

			if err := r.SetQueryParam("filter", qFilter); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
