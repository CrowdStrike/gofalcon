// Code generated by go-swagger; DO NOT EDIT.

package ngsiem

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// GetSavedQueryTemplateReader is a Reader for the GetSavedQueryTemplate structure.
type GetSavedQueryTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSavedQueryTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSavedQueryTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSavedQueryTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSavedQueryTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSavedQueryTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSavedQueryTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSavedQueryTemplateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSavedQueryTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /ngsiem-content/entities/savedqueries-template/v1] GetSavedQueryTemplate", response, response.Code())
	}
}

// NewGetSavedQueryTemplateOK creates a GetSavedQueryTemplateOK with default headers values
func NewGetSavedQueryTemplateOK() *GetSavedQueryTemplateOK {
	return &GetSavedQueryTemplateOK{}
}

/*
GetSavedQueryTemplateOK describes a response with status code 200, with default header values.

GetSavedQueryTemplateOK get saved query template o k
*/
type GetSavedQueryTemplateOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.APIGetSavedQueryResponseV1
}

// IsSuccess returns true when this get saved query template o k response has a 2xx status code
func (o *GetSavedQueryTemplateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get saved query template o k response has a 3xx status code
func (o *GetSavedQueryTemplateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get saved query template o k response has a 4xx status code
func (o *GetSavedQueryTemplateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get saved query template o k response has a 5xx status code
func (o *GetSavedQueryTemplateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get saved query template o k response a status code equal to that given
func (o *GetSavedQueryTemplateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get saved query template o k response
func (o *GetSavedQueryTemplateOK) Code() int {
	return 200
}

func (o *GetSavedQueryTemplateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateOK %s", 200, payload)
}

func (o *GetSavedQueryTemplateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateOK %s", 200, payload)
}

func (o *GetSavedQueryTemplateOK) GetPayload() *models.APIGetSavedQueryResponseV1 {
	return o.Payload
}

func (o *GetSavedQueryTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.APIGetSavedQueryResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSavedQueryTemplateBadRequest creates a GetSavedQueryTemplateBadRequest with default headers values
func NewGetSavedQueryTemplateBadRequest() *GetSavedQueryTemplateBadRequest {
	return &GetSavedQueryTemplateBadRequest{}
}

/*
GetSavedQueryTemplateBadRequest describes a response with status code 400, with default header values.

Bad request for content operations
*/
type GetSavedQueryTemplateBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this get saved query template bad request response has a 2xx status code
func (o *GetSavedQueryTemplateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get saved query template bad request response has a 3xx status code
func (o *GetSavedQueryTemplateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get saved query template bad request response has a 4xx status code
func (o *GetSavedQueryTemplateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get saved query template bad request response has a 5xx status code
func (o *GetSavedQueryTemplateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get saved query template bad request response a status code equal to that given
func (o *GetSavedQueryTemplateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get saved query template bad request response
func (o *GetSavedQueryTemplateBadRequest) Code() int {
	return 400
}

func (o *GetSavedQueryTemplateBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateBadRequest %s", 400, payload)
}

func (o *GetSavedQueryTemplateBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateBadRequest %s", 400, payload)
}

func (o *GetSavedQueryTemplateBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *GetSavedQueryTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSavedQueryTemplateUnauthorized creates a GetSavedQueryTemplateUnauthorized with default headers values
func NewGetSavedQueryTemplateUnauthorized() *GetSavedQueryTemplateUnauthorized {
	return &GetSavedQueryTemplateUnauthorized{}
}

/*
GetSavedQueryTemplateUnauthorized describes a response with status code 401, with default header values.

Requestor is not authorized to access resource
*/
type GetSavedQueryTemplateUnauthorized struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this get saved query template unauthorized response has a 2xx status code
func (o *GetSavedQueryTemplateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get saved query template unauthorized response has a 3xx status code
func (o *GetSavedQueryTemplateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get saved query template unauthorized response has a 4xx status code
func (o *GetSavedQueryTemplateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get saved query template unauthorized response has a 5xx status code
func (o *GetSavedQueryTemplateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get saved query template unauthorized response a status code equal to that given
func (o *GetSavedQueryTemplateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get saved query template unauthorized response
func (o *GetSavedQueryTemplateUnauthorized) Code() int {
	return 401
}

func (o *GetSavedQueryTemplateUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateUnauthorized %s", 401, payload)
}

func (o *GetSavedQueryTemplateUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateUnauthorized %s", 401, payload)
}

func (o *GetSavedQueryTemplateUnauthorized) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *GetSavedQueryTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSavedQueryTemplateForbidden creates a GetSavedQueryTemplateForbidden with default headers values
func NewGetSavedQueryTemplateForbidden() *GetSavedQueryTemplateForbidden {
	return &GetSavedQueryTemplateForbidden{}
}

/*
GetSavedQueryTemplateForbidden describes a response with status code 403, with default header values.

Content access is not allowed
*/
type GetSavedQueryTemplateForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this get saved query template forbidden response has a 2xx status code
func (o *GetSavedQueryTemplateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get saved query template forbidden response has a 3xx status code
func (o *GetSavedQueryTemplateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get saved query template forbidden response has a 4xx status code
func (o *GetSavedQueryTemplateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get saved query template forbidden response has a 5xx status code
func (o *GetSavedQueryTemplateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get saved query template forbidden response a status code equal to that given
func (o *GetSavedQueryTemplateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get saved query template forbidden response
func (o *GetSavedQueryTemplateForbidden) Code() int {
	return 403
}

func (o *GetSavedQueryTemplateForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateForbidden %s", 403, payload)
}

func (o *GetSavedQueryTemplateForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateForbidden %s", 403, payload)
}

func (o *GetSavedQueryTemplateForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *GetSavedQueryTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSavedQueryTemplateNotFound creates a GetSavedQueryTemplateNotFound with default headers values
func NewGetSavedQueryTemplateNotFound() *GetSavedQueryTemplateNotFound {
	return &GetSavedQueryTemplateNotFound{}
}

/*
GetSavedQueryTemplateNotFound describes a response with status code 404, with default header values.

Content resource does not exist
*/
type GetSavedQueryTemplateNotFound struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this get saved query template not found response has a 2xx status code
func (o *GetSavedQueryTemplateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get saved query template not found response has a 3xx status code
func (o *GetSavedQueryTemplateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get saved query template not found response has a 4xx status code
func (o *GetSavedQueryTemplateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get saved query template not found response has a 5xx status code
func (o *GetSavedQueryTemplateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get saved query template not found response a status code equal to that given
func (o *GetSavedQueryTemplateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get saved query template not found response
func (o *GetSavedQueryTemplateNotFound) Code() int {
	return 404
}

func (o *GetSavedQueryTemplateNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateNotFound %s", 404, payload)
}

func (o *GetSavedQueryTemplateNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateNotFound %s", 404, payload)
}

func (o *GetSavedQueryTemplateNotFound) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *GetSavedQueryTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSavedQueryTemplateTooManyRequests creates a GetSavedQueryTemplateTooManyRequests with default headers values
func NewGetSavedQueryTemplateTooManyRequests() *GetSavedQueryTemplateTooManyRequests {
	return &GetSavedQueryTemplateTooManyRequests{}
}

/*
GetSavedQueryTemplateTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetSavedQueryTemplateTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this get saved query template too many requests response has a 2xx status code
func (o *GetSavedQueryTemplateTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get saved query template too many requests response has a 3xx status code
func (o *GetSavedQueryTemplateTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get saved query template too many requests response has a 4xx status code
func (o *GetSavedQueryTemplateTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get saved query template too many requests response has a 5xx status code
func (o *GetSavedQueryTemplateTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get saved query template too many requests response a status code equal to that given
func (o *GetSavedQueryTemplateTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get saved query template too many requests response
func (o *GetSavedQueryTemplateTooManyRequests) Code() int {
	return 429
}

func (o *GetSavedQueryTemplateTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateTooManyRequests %s", 429, payload)
}

func (o *GetSavedQueryTemplateTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateTooManyRequests %s", 429, payload)
}

func (o *GetSavedQueryTemplateTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *GetSavedQueryTemplateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSavedQueryTemplateInternalServerError creates a GetSavedQueryTemplateInternalServerError with default headers values
func NewGetSavedQueryTemplateInternalServerError() *GetSavedQueryTemplateInternalServerError {
	return &GetSavedQueryTemplateInternalServerError{}
}

/*
GetSavedQueryTemplateInternalServerError describes a response with status code 500, with default header values.

Unexpected error occurred
*/
type GetSavedQueryTemplateInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this get saved query template internal server error response has a 2xx status code
func (o *GetSavedQueryTemplateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get saved query template internal server error response has a 3xx status code
func (o *GetSavedQueryTemplateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get saved query template internal server error response has a 4xx status code
func (o *GetSavedQueryTemplateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get saved query template internal server error response has a 5xx status code
func (o *GetSavedQueryTemplateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get saved query template internal server error response a status code equal to that given
func (o *GetSavedQueryTemplateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get saved query template internal server error response
func (o *GetSavedQueryTemplateInternalServerError) Code() int {
	return 500
}

func (o *GetSavedQueryTemplateInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateInternalServerError %s", 500, payload)
}

func (o *GetSavedQueryTemplateInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ngsiem-content/entities/savedqueries-template/v1][%d] getSavedQueryTemplateInternalServerError %s", 500, payload)
}

func (o *GetSavedQueryTemplateInternalServerError) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *GetSavedQueryTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
