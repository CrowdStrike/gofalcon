// Code generated by go-swagger; DO NOT EDIT.

package ngsiem

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateLookupFileParams creates a new CreateLookupFileParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateLookupFileParams() *CreateLookupFileParams {
	return &CreateLookupFileParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateLookupFileParamsWithTimeout creates a new CreateLookupFileParams object
// with the ability to set a timeout on a request.
func NewCreateLookupFileParamsWithTimeout(timeout time.Duration) *CreateLookupFileParams {
	return &CreateLookupFileParams{
		timeout: timeout,
	}
}

// NewCreateLookupFileParamsWithContext creates a new CreateLookupFileParams object
// with the ability to set a context for a request.
func NewCreateLookupFileParamsWithContext(ctx context.Context) *CreateLookupFileParams {
	return &CreateLookupFileParams{
		Context: ctx,
	}
}

// NewCreateLookupFileParamsWithHTTPClient creates a new CreateLookupFileParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateLookupFileParamsWithHTTPClient(client *http.Client) *CreateLookupFileParams {
	return &CreateLookupFileParams{
		HTTPClient: client,
	}
}

/*
CreateLookupFileParams contains all the parameters to send to the API endpoint

	for the create lookup file operation.

	Typically these are written to a http.Request.
*/
type CreateLookupFileParams struct {

	/* File.

	   file content to upload
	*/
	File *string

	/* Filename.

	   Filename of the lookup file to create
	*/
	Filename *string

	/* SearchDomain.

	   name of search domain (view or repo), options; all, falcon, third-party, parsers-repository
	*/
	SearchDomain *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create lookup file params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateLookupFileParams) WithDefaults() *CreateLookupFileParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create lookup file params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateLookupFileParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create lookup file params
func (o *CreateLookupFileParams) WithTimeout(timeout time.Duration) *CreateLookupFileParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create lookup file params
func (o *CreateLookupFileParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create lookup file params
func (o *CreateLookupFileParams) WithContext(ctx context.Context) *CreateLookupFileParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create lookup file params
func (o *CreateLookupFileParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create lookup file params
func (o *CreateLookupFileParams) WithHTTPClient(client *http.Client) *CreateLookupFileParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create lookup file params
func (o *CreateLookupFileParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFile adds the file to the create lookup file params
func (o *CreateLookupFileParams) WithFile(file *string) *CreateLookupFileParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the create lookup file params
func (o *CreateLookupFileParams) SetFile(file *string) {
	o.File = file
}

// WithFilename adds the filename to the create lookup file params
func (o *CreateLookupFileParams) WithFilename(filename *string) *CreateLookupFileParams {
	o.SetFilename(filename)
	return o
}

// SetFilename adds the filename to the create lookup file params
func (o *CreateLookupFileParams) SetFilename(filename *string) {
	o.Filename = filename
}

// WithSearchDomain adds the searchDomain to the create lookup file params
func (o *CreateLookupFileParams) WithSearchDomain(searchDomain *string) *CreateLookupFileParams {
	o.SetSearchDomain(searchDomain)
	return o
}

// SetSearchDomain adds the searchDomain to the create lookup file params
func (o *CreateLookupFileParams) SetSearchDomain(searchDomain *string) {
	o.SearchDomain = searchDomain
}

// WriteToRequest writes these params to a swagger request
func (o *CreateLookupFileParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.File != nil {

		// form param file
		var frFile string
		if o.File != nil {
			frFile = *o.File
		}
		fFile := frFile
		if fFile != "" {
			if err := r.SetFormParam("file", fFile); err != nil {
				return err
			}
		}
	}

	if o.Filename != nil {

		// form param filename
		var frFilename string
		if o.Filename != nil {
			frFilename = *o.Filename
		}
		fFilename := frFilename
		if fFilename != "" {
			if err := r.SetFormParam("filename", fFilename); err != nil {
				return err
			}
		}
	}

	if o.SearchDomain != nil {

		// form param search_domain
		var frSearchDomain string
		if o.SearchDomain != nil {
			frSearchDomain = *o.SearchDomain
		}
		fSearchDomain := frSearchDomain
		if fSearchDomain != "" {
			if err := r.SetFormParam("search_domain", fSearchDomain); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
