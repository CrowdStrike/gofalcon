// Code generated by go-swagger; DO NOT EDIT.

package cloud_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// QueryRuleReader is a Reader for the QueryRule structure.
type QueryRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueryRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQueryRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewQueryRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewQueryRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cloud-policies/queries/rules/v1] QueryRule", response, response.Code())
	}
}

// NewQueryRuleOK creates a QueryRuleOK with default headers values
func NewQueryRuleOK() *QueryRuleOK {
	return &QueryRuleOK{}
}

/*
QueryRuleOK describes a response with status code 200, with default header values.

OK
*/
type QueryRuleOK struct {
	Payload *models.CommonQueryResponse
}

// IsSuccess returns true when this query rule o k response has a 2xx status code
func (o *QueryRuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this query rule o k response has a 3xx status code
func (o *QueryRuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query rule o k response has a 4xx status code
func (o *QueryRuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this query rule o k response has a 5xx status code
func (o *QueryRuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this query rule o k response a status code equal to that given
func (o *QueryRuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the query rule o k response
func (o *QueryRuleOK) Code() int {
	return 200
}

func (o *QueryRuleOK) Error() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/rules/v1][%d] queryRuleOK  %+v", 200, o.Payload)
}

func (o *QueryRuleOK) String() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/rules/v1][%d] queryRuleOK  %+v", 200, o.Payload)
}

func (o *QueryRuleOK) GetPayload() *models.CommonQueryResponse {
	return o.Payload
}

func (o *QueryRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryRuleBadRequest creates a QueryRuleBadRequest with default headers values
func NewQueryRuleBadRequest() *QueryRuleBadRequest {
	return &QueryRuleBadRequest{}
}

/*
QueryRuleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type QueryRuleBadRequest struct {
	Payload *models.CommonQueryResponse
}

// IsSuccess returns true when this query rule bad request response has a 2xx status code
func (o *QueryRuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this query rule bad request response has a 3xx status code
func (o *QueryRuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query rule bad request response has a 4xx status code
func (o *QueryRuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this query rule bad request response has a 5xx status code
func (o *QueryRuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this query rule bad request response a status code equal to that given
func (o *QueryRuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the query rule bad request response
func (o *QueryRuleBadRequest) Code() int {
	return 400
}

func (o *QueryRuleBadRequest) Error() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/rules/v1][%d] queryRuleBadRequest  %+v", 400, o.Payload)
}

func (o *QueryRuleBadRequest) String() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/rules/v1][%d] queryRuleBadRequest  %+v", 400, o.Payload)
}

func (o *QueryRuleBadRequest) GetPayload() *models.CommonQueryResponse {
	return o.Payload
}

func (o *QueryRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryRuleInternalServerError creates a QueryRuleInternalServerError with default headers values
func NewQueryRuleInternalServerError() *QueryRuleInternalServerError {
	return &QueryRuleInternalServerError{}
}

/*
QueryRuleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type QueryRuleInternalServerError struct {
	Payload *models.CommonQueryResponse
}

// IsSuccess returns true when this query rule internal server error response has a 2xx status code
func (o *QueryRuleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this query rule internal server error response has a 3xx status code
func (o *QueryRuleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query rule internal server error response has a 4xx status code
func (o *QueryRuleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this query rule internal server error response has a 5xx status code
func (o *QueryRuleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this query rule internal server error response a status code equal to that given
func (o *QueryRuleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the query rule internal server error response
func (o *QueryRuleInternalServerError) Code() int {
	return 500
}

func (o *QueryRuleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/rules/v1][%d] queryRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *QueryRuleInternalServerError) String() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/rules/v1][%d] queryRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *QueryRuleInternalServerError) GetPayload() *models.CommonQueryResponse {
	return o.Payload
}

func (o *QueryRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
