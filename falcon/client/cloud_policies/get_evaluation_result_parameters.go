// Code generated by go-swagger; DO NOT EDIT.

package cloud_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// NewGetEvaluationResultParams creates a new GetEvaluationResultParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetEvaluationResultParams() *GetEvaluationResultParams {
	return &GetEvaluationResultParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetEvaluationResultParamsWithTimeout creates a new GetEvaluationResultParams object
// with the ability to set a timeout on a request.
func NewGetEvaluationResultParamsWithTimeout(timeout time.Duration) *GetEvaluationResultParams {
	return &GetEvaluationResultParams{
		timeout: timeout,
	}
}

// NewGetEvaluationResultParamsWithContext creates a new GetEvaluationResultParams object
// with the ability to set a context for a request.
func NewGetEvaluationResultParamsWithContext(ctx context.Context) *GetEvaluationResultParams {
	return &GetEvaluationResultParams{
		Context: ctx,
	}
}

// NewGetEvaluationResultParamsWithHTTPClient creates a new GetEvaluationResultParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetEvaluationResultParamsWithHTTPClient(client *http.Client) *GetEvaluationResultParams {
	return &GetEvaluationResultParams{
		HTTPClient: client,
	}
}

/*
GetEvaluationResultParams contains all the parameters to send to the API endpoint

	for the get evaluation result operation.

	Typically these are written to a http.Request.
*/
type GetEvaluationResultParams struct {

	/* Authorization.

	   Bearer Token
	*/
	Authorization string

	/* XCSCUSTID.

	   Customer ID
	*/
	XCSCUSTID string

	/* XCSUSERUUID.

	   User UUID
	*/
	XCSUSERUUID string

	// Body.
	Body *models.RuleevaluatorRuleLogicPayload

	/* CloudProvider.

	   Cloud Service Provider of the provided IDs
	*/
	CloudProvider *string

	/* Ids.

	   List of assets to evaluate (maximum 100 IDs allowed).
	*/
	Ids []string

	/* ResourceType.

	   Resource Type of the provided IDs
	*/
	ResourceType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get evaluation result params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEvaluationResultParams) WithDefaults() *GetEvaluationResultParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get evaluation result params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEvaluationResultParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get evaluation result params
func (o *GetEvaluationResultParams) WithTimeout(timeout time.Duration) *GetEvaluationResultParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get evaluation result params
func (o *GetEvaluationResultParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get evaluation result params
func (o *GetEvaluationResultParams) WithContext(ctx context.Context) *GetEvaluationResultParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get evaluation result params
func (o *GetEvaluationResultParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get evaluation result params
func (o *GetEvaluationResultParams) WithHTTPClient(client *http.Client) *GetEvaluationResultParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get evaluation result params
func (o *GetEvaluationResultParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get evaluation result params
func (o *GetEvaluationResultParams) WithAuthorization(authorization string) *GetEvaluationResultParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get evaluation result params
func (o *GetEvaluationResultParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithXCSCUSTID adds the xCSCUSTID to the get evaluation result params
func (o *GetEvaluationResultParams) WithXCSCUSTID(xCSCUSTID string) *GetEvaluationResultParams {
	o.SetXCSCUSTID(xCSCUSTID)
	return o
}

// SetXCSCUSTID adds the xCSCUSTId to the get evaluation result params
func (o *GetEvaluationResultParams) SetXCSCUSTID(xCSCUSTID string) {
	o.XCSCUSTID = xCSCUSTID
}

// WithXCSUSERUUID adds the xCSUSERUUID to the get evaluation result params
func (o *GetEvaluationResultParams) WithXCSUSERUUID(xCSUSERUUID string) *GetEvaluationResultParams {
	o.SetXCSUSERUUID(xCSUSERUUID)
	return o
}

// SetXCSUSERUUID adds the xCSUSERUuid to the get evaluation result params
func (o *GetEvaluationResultParams) SetXCSUSERUUID(xCSUSERUUID string) {
	o.XCSUSERUUID = xCSUSERUUID
}

// WithBody adds the body to the get evaluation result params
func (o *GetEvaluationResultParams) WithBody(body *models.RuleevaluatorRuleLogicPayload) *GetEvaluationResultParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the get evaluation result params
func (o *GetEvaluationResultParams) SetBody(body *models.RuleevaluatorRuleLogicPayload) {
	o.Body = body
}

// WithCloudProvider adds the cloudProvider to the get evaluation result params
func (o *GetEvaluationResultParams) WithCloudProvider(cloudProvider *string) *GetEvaluationResultParams {
	o.SetCloudProvider(cloudProvider)
	return o
}

// SetCloudProvider adds the cloudProvider to the get evaluation result params
func (o *GetEvaluationResultParams) SetCloudProvider(cloudProvider *string) {
	o.CloudProvider = cloudProvider
}

// WithIds adds the ids to the get evaluation result params
func (o *GetEvaluationResultParams) WithIds(ids []string) *GetEvaluationResultParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get evaluation result params
func (o *GetEvaluationResultParams) SetIds(ids []string) {
	o.Ids = ids
}

// WithResourceType adds the resourceType to the get evaluation result params
func (o *GetEvaluationResultParams) WithResourceType(resourceType *string) *GetEvaluationResultParams {
	o.SetResourceType(resourceType)
	return o
}

// SetResourceType adds the resourceType to the get evaluation result params
func (o *GetEvaluationResultParams) SetResourceType(resourceType *string) {
	o.ResourceType = resourceType
}

// WriteToRequest writes these params to a swagger request
func (o *GetEvaluationResultParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// header param X-CS-CUSTID
	if err := r.SetHeaderParam("X-CS-CUSTID", o.XCSCUSTID); err != nil {
		return err
	}

	// header param X-CS-USERUUID
	if err := r.SetHeaderParam("X-CS-USERUUID", o.XCSUSERUUID); err != nil {
		return err
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.CloudProvider != nil {

		// query param cloud_provider
		var qrCloudProvider string

		if o.CloudProvider != nil {
			qrCloudProvider = *o.CloudProvider
		}
		qCloudProvider := qrCloudProvider
		if qCloudProvider != "" {

			if err := r.SetQueryParam("cloud_provider", qCloudProvider); err != nil {
				return err
			}
		}
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.ResourceType != nil {

		// query param resource_type
		var qrResourceType string

		if o.ResourceType != nil {
			qrResourceType = *o.ResourceType
		}
		qResourceType := qrResourceType
		if qResourceType != "" {

			if err := r.SetQueryParam("resource_type", qResourceType); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetEvaluationResult binds the parameter ids
func (o *GetEvaluationResultParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []string

		idsIIV := idsIIR // string as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: "multi"
	idsIS := swag.JoinByFormat(idsIC, "multi")

	return idsIS
}
