// Code generated by go-swagger; DO NOT EDIT.

package cloud_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// UpdateSuppressionRuleReader is a Reader for the UpdateSuppressionRule structure.
type UpdateSuppressionRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSuppressionRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSuppressionRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateSuppressionRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateSuppressionRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /cloud-policies/entities/suppression-rules/v1] UpdateSuppressionRule", response, response.Code())
	}
}

// NewUpdateSuppressionRuleOK creates a UpdateSuppressionRuleOK with default headers values
func NewUpdateSuppressionRuleOK() *UpdateSuppressionRuleOK {
	return &UpdateSuppressionRuleOK{}
}

/*
UpdateSuppressionRuleOK describes a response with status code 200, with default header values.

OK
*/
type UpdateSuppressionRuleOK struct {
	Payload *models.SuppressionrulesUpdateSuppressionRuleResponse
}

// IsSuccess returns true when this update suppression rule o k response has a 2xx status code
func (o *UpdateSuppressionRuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update suppression rule o k response has a 3xx status code
func (o *UpdateSuppressionRuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update suppression rule o k response has a 4xx status code
func (o *UpdateSuppressionRuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update suppression rule o k response has a 5xx status code
func (o *UpdateSuppressionRuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update suppression rule o k response a status code equal to that given
func (o *UpdateSuppressionRuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update suppression rule o k response
func (o *UpdateSuppressionRuleOK) Code() int {
	return 200
}

func (o *UpdateSuppressionRuleOK) Error() string {
	return fmt.Sprintf("[PATCH /cloud-policies/entities/suppression-rules/v1][%d] updateSuppressionRuleOK  %+v", 200, o.Payload)
}

func (o *UpdateSuppressionRuleOK) String() string {
	return fmt.Sprintf("[PATCH /cloud-policies/entities/suppression-rules/v1][%d] updateSuppressionRuleOK  %+v", 200, o.Payload)
}

func (o *UpdateSuppressionRuleOK) GetPayload() *models.SuppressionrulesUpdateSuppressionRuleResponse {
	return o.Payload
}

func (o *UpdateSuppressionRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesUpdateSuppressionRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSuppressionRuleBadRequest creates a UpdateSuppressionRuleBadRequest with default headers values
func NewUpdateSuppressionRuleBadRequest() *UpdateSuppressionRuleBadRequest {
	return &UpdateSuppressionRuleBadRequest{}
}

/*
UpdateSuppressionRuleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateSuppressionRuleBadRequest struct {
	Payload *models.SuppressionrulesUpdateSuppressionRuleResponse
}

// IsSuccess returns true when this update suppression rule bad request response has a 2xx status code
func (o *UpdateSuppressionRuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update suppression rule bad request response has a 3xx status code
func (o *UpdateSuppressionRuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update suppression rule bad request response has a 4xx status code
func (o *UpdateSuppressionRuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update suppression rule bad request response has a 5xx status code
func (o *UpdateSuppressionRuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update suppression rule bad request response a status code equal to that given
func (o *UpdateSuppressionRuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update suppression rule bad request response
func (o *UpdateSuppressionRuleBadRequest) Code() int {
	return 400
}

func (o *UpdateSuppressionRuleBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /cloud-policies/entities/suppression-rules/v1][%d] updateSuppressionRuleBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateSuppressionRuleBadRequest) String() string {
	return fmt.Sprintf("[PATCH /cloud-policies/entities/suppression-rules/v1][%d] updateSuppressionRuleBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateSuppressionRuleBadRequest) GetPayload() *models.SuppressionrulesUpdateSuppressionRuleResponse {
	return o.Payload
}

func (o *UpdateSuppressionRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesUpdateSuppressionRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSuppressionRuleInternalServerError creates a UpdateSuppressionRuleInternalServerError with default headers values
func NewUpdateSuppressionRuleInternalServerError() *UpdateSuppressionRuleInternalServerError {
	return &UpdateSuppressionRuleInternalServerError{}
}

/*
UpdateSuppressionRuleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateSuppressionRuleInternalServerError struct {
	Payload *models.SuppressionrulesUpdateSuppressionRuleResponse
}

// IsSuccess returns true when this update suppression rule internal server error response has a 2xx status code
func (o *UpdateSuppressionRuleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update suppression rule internal server error response has a 3xx status code
func (o *UpdateSuppressionRuleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update suppression rule internal server error response has a 4xx status code
func (o *UpdateSuppressionRuleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update suppression rule internal server error response has a 5xx status code
func (o *UpdateSuppressionRuleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update suppression rule internal server error response a status code equal to that given
func (o *UpdateSuppressionRuleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update suppression rule internal server error response
func (o *UpdateSuppressionRuleInternalServerError) Code() int {
	return 500
}

func (o *UpdateSuppressionRuleInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /cloud-policies/entities/suppression-rules/v1][%d] updateSuppressionRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateSuppressionRuleInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /cloud-policies/entities/suppression-rules/v1][%d] updateSuppressionRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateSuppressionRuleInternalServerError) GetPayload() *models.SuppressionrulesUpdateSuppressionRuleResponse {
	return o.Payload
}

func (o *UpdateSuppressionRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesUpdateSuppressionRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
