// Code generated by go-swagger; DO NOT EDIT.

package cloud_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// NewCreateComplianceControlParams creates a new CreateComplianceControlParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateComplianceControlParams() *CreateComplianceControlParams {
	return &CreateComplianceControlParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateComplianceControlParamsWithTimeout creates a new CreateComplianceControlParams object
// with the ability to set a timeout on a request.
func NewCreateComplianceControlParamsWithTimeout(timeout time.Duration) *CreateComplianceControlParams {
	return &CreateComplianceControlParams{
		timeout: timeout,
	}
}

// NewCreateComplianceControlParamsWithContext creates a new CreateComplianceControlParams object
// with the ability to set a context for a request.
func NewCreateComplianceControlParamsWithContext(ctx context.Context) *CreateComplianceControlParams {
	return &CreateComplianceControlParams{
		Context: ctx,
	}
}

// NewCreateComplianceControlParamsWithHTTPClient creates a new CreateComplianceControlParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateComplianceControlParamsWithHTTPClient(client *http.Client) *CreateComplianceControlParams {
	return &CreateComplianceControlParams{
		HTTPClient: client,
	}
}

/*
CreateComplianceControlParams contains all the parameters to send to the API endpoint

	for the create compliance control operation.

	Typically these are written to a http.Request.
*/
type CreateComplianceControlParams struct {

	/* Authorization.

	   Bearer Token
	*/
	Authorization string

	/* XCSCUSTID.

	   Customer ID
	*/
	XCSCUSTID string

	/* XCSUSERUUID.

	   User UUID
	*/
	XCSUSERUUID string

	// Body.
	Body *models.CommonCreateComplianceControlRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create compliance control params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateComplianceControlParams) WithDefaults() *CreateComplianceControlParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create compliance control params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateComplianceControlParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create compliance control params
func (o *CreateComplianceControlParams) WithTimeout(timeout time.Duration) *CreateComplianceControlParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create compliance control params
func (o *CreateComplianceControlParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create compliance control params
func (o *CreateComplianceControlParams) WithContext(ctx context.Context) *CreateComplianceControlParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create compliance control params
func (o *CreateComplianceControlParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create compliance control params
func (o *CreateComplianceControlParams) WithHTTPClient(client *http.Client) *CreateComplianceControlParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create compliance control params
func (o *CreateComplianceControlParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the create compliance control params
func (o *CreateComplianceControlParams) WithAuthorization(authorization string) *CreateComplianceControlParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the create compliance control params
func (o *CreateComplianceControlParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithXCSCUSTID adds the xCSCUSTID to the create compliance control params
func (o *CreateComplianceControlParams) WithXCSCUSTID(xCSCUSTID string) *CreateComplianceControlParams {
	o.SetXCSCUSTID(xCSCUSTID)
	return o
}

// SetXCSCUSTID adds the xCSCUSTId to the create compliance control params
func (o *CreateComplianceControlParams) SetXCSCUSTID(xCSCUSTID string) {
	o.XCSCUSTID = xCSCUSTID
}

// WithXCSUSERUUID adds the xCSUSERUUID to the create compliance control params
func (o *CreateComplianceControlParams) WithXCSUSERUUID(xCSUSERUUID string) *CreateComplianceControlParams {
	o.SetXCSUSERUUID(xCSUSERUUID)
	return o
}

// SetXCSUSERUUID adds the xCSUSERUuid to the create compliance control params
func (o *CreateComplianceControlParams) SetXCSUSERUUID(xCSUSERUUID string) {
	o.XCSUSERUUID = xCSUSERUUID
}

// WithBody adds the body to the create compliance control params
func (o *CreateComplianceControlParams) WithBody(body *models.CommonCreateComplianceControlRequest) *CreateComplianceControlParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create compliance control params
func (o *CreateComplianceControlParams) SetBody(body *models.CommonCreateComplianceControlRequest) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *CreateComplianceControlParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// header param X-CS-CUSTID
	if err := r.SetHeaderParam("X-CS-CUSTID", o.XCSCUSTID); err != nil {
		return err
	}

	// header param X-CS-USERUUID
	if err := r.SetHeaderParam("X-CS-USERUUID", o.XCSUSERUUID); err != nil {
		return err
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
