// Code generated by go-swagger; DO NOT EDIT.

package cloud_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// UpdateComplianceControlReader is a Reader for the UpdateComplianceControl structure.
type UpdateComplianceControlReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateComplianceControlReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateComplianceControlOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateComplianceControlBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /cloud-policies/entities/compliance/controls/v1] UpdateComplianceControl", response, response.Code())
	}
}

// NewUpdateComplianceControlOK creates a UpdateComplianceControlOK with default headers values
func NewUpdateComplianceControlOK() *UpdateComplianceControlOK {
	return &UpdateComplianceControlOK{}
}

/*
UpdateComplianceControlOK describes a response with status code 200, with default header values.

OK
*/
type UpdateComplianceControlOK struct {
	Payload *models.CommonCreateComplianceControlResponse
}

// IsSuccess returns true when this update compliance control o k response has a 2xx status code
func (o *UpdateComplianceControlOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update compliance control o k response has a 3xx status code
func (o *UpdateComplianceControlOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update compliance control o k response has a 4xx status code
func (o *UpdateComplianceControlOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update compliance control o k response has a 5xx status code
func (o *UpdateComplianceControlOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update compliance control o k response a status code equal to that given
func (o *UpdateComplianceControlOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update compliance control o k response
func (o *UpdateComplianceControlOK) Code() int {
	return 200
}

func (o *UpdateComplianceControlOK) Error() string {
	return fmt.Sprintf("[PATCH /cloud-policies/entities/compliance/controls/v1][%d] updateComplianceControlOK  %+v", 200, o.Payload)
}

func (o *UpdateComplianceControlOK) String() string {
	return fmt.Sprintf("[PATCH /cloud-policies/entities/compliance/controls/v1][%d] updateComplianceControlOK  %+v", 200, o.Payload)
}

func (o *UpdateComplianceControlOK) GetPayload() *models.CommonCreateComplianceControlResponse {
	return o.Payload
}

func (o *UpdateComplianceControlOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonCreateComplianceControlResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateComplianceControlBadRequest creates a UpdateComplianceControlBadRequest with default headers values
func NewUpdateComplianceControlBadRequest() *UpdateComplianceControlBadRequest {
	return &UpdateComplianceControlBadRequest{}
}

/*
UpdateComplianceControlBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateComplianceControlBadRequest struct {
	Payload *models.CommonEntitiesResponse
}

// IsSuccess returns true when this update compliance control bad request response has a 2xx status code
func (o *UpdateComplianceControlBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update compliance control bad request response has a 3xx status code
func (o *UpdateComplianceControlBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update compliance control bad request response has a 4xx status code
func (o *UpdateComplianceControlBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update compliance control bad request response has a 5xx status code
func (o *UpdateComplianceControlBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update compliance control bad request response a status code equal to that given
func (o *UpdateComplianceControlBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update compliance control bad request response
func (o *UpdateComplianceControlBadRequest) Code() int {
	return 400
}

func (o *UpdateComplianceControlBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /cloud-policies/entities/compliance/controls/v1][%d] updateComplianceControlBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateComplianceControlBadRequest) String() string {
	return fmt.Sprintf("[PATCH /cloud-policies/entities/compliance/controls/v1][%d] updateComplianceControlBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateComplianceControlBadRequest) GetPayload() *models.CommonEntitiesResponse {
	return o.Payload
}

func (o *UpdateComplianceControlBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
