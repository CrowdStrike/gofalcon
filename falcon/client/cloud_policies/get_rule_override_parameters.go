// Code generated by go-swagger; DO NOT EDIT.

package cloud_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetRuleOverrideParams creates a new GetRuleOverrideParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRuleOverrideParams() *GetRuleOverrideParams {
	return &GetRuleOverrideParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRuleOverrideParamsWithTimeout creates a new GetRuleOverrideParams object
// with the ability to set a timeout on a request.
func NewGetRuleOverrideParamsWithTimeout(timeout time.Duration) *GetRuleOverrideParams {
	return &GetRuleOverrideParams{
		timeout: timeout,
	}
}

// NewGetRuleOverrideParamsWithContext creates a new GetRuleOverrideParams object
// with the ability to set a context for a request.
func NewGetRuleOverrideParamsWithContext(ctx context.Context) *GetRuleOverrideParams {
	return &GetRuleOverrideParams{
		Context: ctx,
	}
}

// NewGetRuleOverrideParamsWithHTTPClient creates a new GetRuleOverrideParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRuleOverrideParamsWithHTTPClient(client *http.Client) *GetRuleOverrideParams {
	return &GetRuleOverrideParams{
		HTTPClient: client,
	}
}

/*
GetRuleOverrideParams contains all the parameters to send to the API endpoint

	for the get rule override operation.

	Typically these are written to a http.Request.
*/
type GetRuleOverrideParams struct {

	/* Authorization.

	   Bearer Token
	*/
	Authorization string

	/* XCSCUSTID.

	   Customer ID
	*/
	XCSCUSTID string

	/* XCSUSERUUID.

	   User UUID
	*/
	XCSUSERUUID string

	/* Ids.

	   The uuids of rule overrides to retrieve
	*/
	Ids []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get rule override params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRuleOverrideParams) WithDefaults() *GetRuleOverrideParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get rule override params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRuleOverrideParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get rule override params
func (o *GetRuleOverrideParams) WithTimeout(timeout time.Duration) *GetRuleOverrideParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get rule override params
func (o *GetRuleOverrideParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get rule override params
func (o *GetRuleOverrideParams) WithContext(ctx context.Context) *GetRuleOverrideParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get rule override params
func (o *GetRuleOverrideParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get rule override params
func (o *GetRuleOverrideParams) WithHTTPClient(client *http.Client) *GetRuleOverrideParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get rule override params
func (o *GetRuleOverrideParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the get rule override params
func (o *GetRuleOverrideParams) WithAuthorization(authorization string) *GetRuleOverrideParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the get rule override params
func (o *GetRuleOverrideParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithXCSCUSTID adds the xCSCUSTID to the get rule override params
func (o *GetRuleOverrideParams) WithXCSCUSTID(xCSCUSTID string) *GetRuleOverrideParams {
	o.SetXCSCUSTID(xCSCUSTID)
	return o
}

// SetXCSCUSTID adds the xCSCUSTId to the get rule override params
func (o *GetRuleOverrideParams) SetXCSCUSTID(xCSCUSTID string) {
	o.XCSCUSTID = xCSCUSTID
}

// WithXCSUSERUUID adds the xCSUSERUUID to the get rule override params
func (o *GetRuleOverrideParams) WithXCSUSERUUID(xCSUSERUUID string) *GetRuleOverrideParams {
	o.SetXCSUSERUUID(xCSUSERUUID)
	return o
}

// SetXCSUSERUUID adds the xCSUSERUuid to the get rule override params
func (o *GetRuleOverrideParams) SetXCSUSERUUID(xCSUSERUUID string) {
	o.XCSUSERUUID = xCSUSERUUID
}

// WithIds adds the ids to the get rule override params
func (o *GetRuleOverrideParams) WithIds(ids []string) *GetRuleOverrideParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get rule override params
func (o *GetRuleOverrideParams) SetIds(ids []string) {
	o.Ids = ids
}

// WriteToRequest writes these params to a swagger request
func (o *GetRuleOverrideParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// header param X-CS-CUSTID
	if err := r.SetHeaderParam("X-CS-CUSTID", o.XCSCUSTID); err != nil {
		return err
	}

	// header param X-CS-USERUUID
	if err := r.SetHeaderParam("X-CS-USERUUID", o.XCSUSERUUID); err != nil {
		return err
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetRuleOverride binds the parameter ids
func (o *GetRuleOverrideParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []string

		idsIIV := idsIIR // string as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: "multi"
	idsIS := swag.JoinByFormat(idsIC, "multi")

	return idsIS
}
