// Code generated by go-swagger; DO NOT EDIT.

package cloud_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// QuerySuppressionRulesReader is a Reader for the QuerySuppressionRules structure.
type QuerySuppressionRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QuerySuppressionRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQuerySuppressionRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewQuerySuppressionRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewQuerySuppressionRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cloud-policies/queries/suppression-rules/v1] QuerySuppressionRules", response, response.Code())
	}
}

// NewQuerySuppressionRulesOK creates a QuerySuppressionRulesOK with default headers values
func NewQuerySuppressionRulesOK() *QuerySuppressionRulesOK {
	return &QuerySuppressionRulesOK{}
}

/*
QuerySuppressionRulesOK describes a response with status code 200, with default header values.

OK
*/
type QuerySuppressionRulesOK struct {
	Payload *models.SuppressionrulesQuerySuppressionRulesResponse
}

// IsSuccess returns true when this query suppression rules o k response has a 2xx status code
func (o *QuerySuppressionRulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this query suppression rules o k response has a 3xx status code
func (o *QuerySuppressionRulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query suppression rules o k response has a 4xx status code
func (o *QuerySuppressionRulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this query suppression rules o k response has a 5xx status code
func (o *QuerySuppressionRulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this query suppression rules o k response a status code equal to that given
func (o *QuerySuppressionRulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the query suppression rules o k response
func (o *QuerySuppressionRulesOK) Code() int {
	return 200
}

func (o *QuerySuppressionRulesOK) Error() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/suppression-rules/v1][%d] querySuppressionRulesOK  %+v", 200, o.Payload)
}

func (o *QuerySuppressionRulesOK) String() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/suppression-rules/v1][%d] querySuppressionRulesOK  %+v", 200, o.Payload)
}

func (o *QuerySuppressionRulesOK) GetPayload() *models.SuppressionrulesQuerySuppressionRulesResponse {
	return o.Payload
}

func (o *QuerySuppressionRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesQuerySuppressionRulesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuerySuppressionRulesBadRequest creates a QuerySuppressionRulesBadRequest with default headers values
func NewQuerySuppressionRulesBadRequest() *QuerySuppressionRulesBadRequest {
	return &QuerySuppressionRulesBadRequest{}
}

/*
QuerySuppressionRulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type QuerySuppressionRulesBadRequest struct {
	Payload *models.SuppressionrulesQuerySuppressionRulesResponse
}

// IsSuccess returns true when this query suppression rules bad request response has a 2xx status code
func (o *QuerySuppressionRulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this query suppression rules bad request response has a 3xx status code
func (o *QuerySuppressionRulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query suppression rules bad request response has a 4xx status code
func (o *QuerySuppressionRulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this query suppression rules bad request response has a 5xx status code
func (o *QuerySuppressionRulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this query suppression rules bad request response a status code equal to that given
func (o *QuerySuppressionRulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the query suppression rules bad request response
func (o *QuerySuppressionRulesBadRequest) Code() int {
	return 400
}

func (o *QuerySuppressionRulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/suppression-rules/v1][%d] querySuppressionRulesBadRequest  %+v", 400, o.Payload)
}

func (o *QuerySuppressionRulesBadRequest) String() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/suppression-rules/v1][%d] querySuppressionRulesBadRequest  %+v", 400, o.Payload)
}

func (o *QuerySuppressionRulesBadRequest) GetPayload() *models.SuppressionrulesQuerySuppressionRulesResponse {
	return o.Payload
}

func (o *QuerySuppressionRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesQuerySuppressionRulesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuerySuppressionRulesInternalServerError creates a QuerySuppressionRulesInternalServerError with default headers values
func NewQuerySuppressionRulesInternalServerError() *QuerySuppressionRulesInternalServerError {
	return &QuerySuppressionRulesInternalServerError{}
}

/*
QuerySuppressionRulesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type QuerySuppressionRulesInternalServerError struct {
	Payload *models.SuppressionrulesQuerySuppressionRulesResponse
}

// IsSuccess returns true when this query suppression rules internal server error response has a 2xx status code
func (o *QuerySuppressionRulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this query suppression rules internal server error response has a 3xx status code
func (o *QuerySuppressionRulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query suppression rules internal server error response has a 4xx status code
func (o *QuerySuppressionRulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this query suppression rules internal server error response has a 5xx status code
func (o *QuerySuppressionRulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this query suppression rules internal server error response a status code equal to that given
func (o *QuerySuppressionRulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the query suppression rules internal server error response
func (o *QuerySuppressionRulesInternalServerError) Code() int {
	return 500
}

func (o *QuerySuppressionRulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/suppression-rules/v1][%d] querySuppressionRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *QuerySuppressionRulesInternalServerError) String() string {
	return fmt.Sprintf("[GET /cloud-policies/queries/suppression-rules/v1][%d] querySuppressionRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *QuerySuppressionRulesInternalServerError) GetPayload() *models.SuppressionrulesQuerySuppressionRulesResponse {
	return o.Payload
}

func (o *QuerySuppressionRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesQuerySuppressionRulesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
