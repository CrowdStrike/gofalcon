// Code generated by go-swagger; DO NOT EDIT.

package cloud_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// DeleteComplianceFrameworkReader is a Reader for the DeleteComplianceFramework structure.
type DeleteComplianceFrameworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteComplianceFrameworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteComplianceFrameworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteComplianceFrameworkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteComplianceFrameworkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cloud-policies/entities/compliance/frameworks/v1] DeleteComplianceFramework", response, response.Code())
	}
}

// NewDeleteComplianceFrameworkOK creates a DeleteComplianceFrameworkOK with default headers values
func NewDeleteComplianceFrameworkOK() *DeleteComplianceFrameworkOK {
	return &DeleteComplianceFrameworkOK{}
}

/*
DeleteComplianceFrameworkOK describes a response with status code 200, with default header values.

OK
*/
type DeleteComplianceFrameworkOK struct {
	Payload *models.CommonDeleteComplianceFrameworkResponse
}

// IsSuccess returns true when this delete compliance framework o k response has a 2xx status code
func (o *DeleteComplianceFrameworkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete compliance framework o k response has a 3xx status code
func (o *DeleteComplianceFrameworkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete compliance framework o k response has a 4xx status code
func (o *DeleteComplianceFrameworkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete compliance framework o k response has a 5xx status code
func (o *DeleteComplianceFrameworkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete compliance framework o k response a status code equal to that given
func (o *DeleteComplianceFrameworkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete compliance framework o k response
func (o *DeleteComplianceFrameworkOK) Code() int {
	return 200
}

func (o *DeleteComplianceFrameworkOK) Error() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/compliance/frameworks/v1][%d] deleteComplianceFrameworkOK  %+v", 200, o.Payload)
}

func (o *DeleteComplianceFrameworkOK) String() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/compliance/frameworks/v1][%d] deleteComplianceFrameworkOK  %+v", 200, o.Payload)
}

func (o *DeleteComplianceFrameworkOK) GetPayload() *models.CommonDeleteComplianceFrameworkResponse {
	return o.Payload
}

func (o *DeleteComplianceFrameworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonDeleteComplianceFrameworkResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteComplianceFrameworkBadRequest creates a DeleteComplianceFrameworkBadRequest with default headers values
func NewDeleteComplianceFrameworkBadRequest() *DeleteComplianceFrameworkBadRequest {
	return &DeleteComplianceFrameworkBadRequest{}
}

/*
DeleteComplianceFrameworkBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteComplianceFrameworkBadRequest struct {
	Payload *models.CommonEntitiesResponse
}

// IsSuccess returns true when this delete compliance framework bad request response has a 2xx status code
func (o *DeleteComplianceFrameworkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete compliance framework bad request response has a 3xx status code
func (o *DeleteComplianceFrameworkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete compliance framework bad request response has a 4xx status code
func (o *DeleteComplianceFrameworkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete compliance framework bad request response has a 5xx status code
func (o *DeleteComplianceFrameworkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete compliance framework bad request response a status code equal to that given
func (o *DeleteComplianceFrameworkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete compliance framework bad request response
func (o *DeleteComplianceFrameworkBadRequest) Code() int {
	return 400
}

func (o *DeleteComplianceFrameworkBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/compliance/frameworks/v1][%d] deleteComplianceFrameworkBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteComplianceFrameworkBadRequest) String() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/compliance/frameworks/v1][%d] deleteComplianceFrameworkBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteComplianceFrameworkBadRequest) GetPayload() *models.CommonEntitiesResponse {
	return o.Payload
}

func (o *DeleteComplianceFrameworkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteComplianceFrameworkNotFound creates a DeleteComplianceFrameworkNotFound with default headers values
func NewDeleteComplianceFrameworkNotFound() *DeleteComplianceFrameworkNotFound {
	return &DeleteComplianceFrameworkNotFound{}
}

/*
DeleteComplianceFrameworkNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteComplianceFrameworkNotFound struct {
	Payload *models.CommonEntitiesResponse
}

// IsSuccess returns true when this delete compliance framework not found response has a 2xx status code
func (o *DeleteComplianceFrameworkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete compliance framework not found response has a 3xx status code
func (o *DeleteComplianceFrameworkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete compliance framework not found response has a 4xx status code
func (o *DeleteComplianceFrameworkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete compliance framework not found response has a 5xx status code
func (o *DeleteComplianceFrameworkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete compliance framework not found response a status code equal to that given
func (o *DeleteComplianceFrameworkNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete compliance framework not found response
func (o *DeleteComplianceFrameworkNotFound) Code() int {
	return 404
}

func (o *DeleteComplianceFrameworkNotFound) Error() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/compliance/frameworks/v1][%d] deleteComplianceFrameworkNotFound  %+v", 404, o.Payload)
}

func (o *DeleteComplianceFrameworkNotFound) String() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/compliance/frameworks/v1][%d] deleteComplianceFrameworkNotFound  %+v", 404, o.Payload)
}

func (o *DeleteComplianceFrameworkNotFound) GetPayload() *models.CommonEntitiesResponse {
	return o.Payload
}

func (o *DeleteComplianceFrameworkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
