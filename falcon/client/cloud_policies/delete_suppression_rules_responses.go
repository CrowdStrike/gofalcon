// Code generated by go-swagger; DO NOT EDIT.

package cloud_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// DeleteSuppressionRulesReader is a Reader for the DeleteSuppressionRules structure.
type DeleteSuppressionRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSuppressionRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSuppressionRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSuppressionRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSuppressionRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cloud-policies/entities/suppression-rules/v1] DeleteSuppressionRules", response, response.Code())
	}
}

// NewDeleteSuppressionRulesOK creates a DeleteSuppressionRulesOK with default headers values
func NewDeleteSuppressionRulesOK() *DeleteSuppressionRulesOK {
	return &DeleteSuppressionRulesOK{}
}

/*
DeleteSuppressionRulesOK describes a response with status code 200, with default header values.

OK
*/
type DeleteSuppressionRulesOK struct {
	Payload *models.SuppressionrulesDeleteSuppressionRulesResponse
}

// IsSuccess returns true when this delete suppression rules o k response has a 2xx status code
func (o *DeleteSuppressionRulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete suppression rules o k response has a 3xx status code
func (o *DeleteSuppressionRulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete suppression rules o k response has a 4xx status code
func (o *DeleteSuppressionRulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete suppression rules o k response has a 5xx status code
func (o *DeleteSuppressionRulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete suppression rules o k response a status code equal to that given
func (o *DeleteSuppressionRulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete suppression rules o k response
func (o *DeleteSuppressionRulesOK) Code() int {
	return 200
}

func (o *DeleteSuppressionRulesOK) Error() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/suppression-rules/v1][%d] deleteSuppressionRulesOK  %+v", 200, o.Payload)
}

func (o *DeleteSuppressionRulesOK) String() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/suppression-rules/v1][%d] deleteSuppressionRulesOK  %+v", 200, o.Payload)
}

func (o *DeleteSuppressionRulesOK) GetPayload() *models.SuppressionrulesDeleteSuppressionRulesResponse {
	return o.Payload
}

func (o *DeleteSuppressionRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesDeleteSuppressionRulesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSuppressionRulesBadRequest creates a DeleteSuppressionRulesBadRequest with default headers values
func NewDeleteSuppressionRulesBadRequest() *DeleteSuppressionRulesBadRequest {
	return &DeleteSuppressionRulesBadRequest{}
}

/*
DeleteSuppressionRulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteSuppressionRulesBadRequest struct {
	Payload *models.SuppressionrulesDeleteSuppressionRulesResponse
}

// IsSuccess returns true when this delete suppression rules bad request response has a 2xx status code
func (o *DeleteSuppressionRulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete suppression rules bad request response has a 3xx status code
func (o *DeleteSuppressionRulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete suppression rules bad request response has a 4xx status code
func (o *DeleteSuppressionRulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete suppression rules bad request response has a 5xx status code
func (o *DeleteSuppressionRulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete suppression rules bad request response a status code equal to that given
func (o *DeleteSuppressionRulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete suppression rules bad request response
func (o *DeleteSuppressionRulesBadRequest) Code() int {
	return 400
}

func (o *DeleteSuppressionRulesBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/suppression-rules/v1][%d] deleteSuppressionRulesBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSuppressionRulesBadRequest) String() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/suppression-rules/v1][%d] deleteSuppressionRulesBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSuppressionRulesBadRequest) GetPayload() *models.SuppressionrulesDeleteSuppressionRulesResponse {
	return o.Payload
}

func (o *DeleteSuppressionRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesDeleteSuppressionRulesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSuppressionRulesInternalServerError creates a DeleteSuppressionRulesInternalServerError with default headers values
func NewDeleteSuppressionRulesInternalServerError() *DeleteSuppressionRulesInternalServerError {
	return &DeleteSuppressionRulesInternalServerError{}
}

/*
DeleteSuppressionRulesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteSuppressionRulesInternalServerError struct {
	Payload *models.SuppressionrulesDeleteSuppressionRulesResponse
}

// IsSuccess returns true when this delete suppression rules internal server error response has a 2xx status code
func (o *DeleteSuppressionRulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete suppression rules internal server error response has a 3xx status code
func (o *DeleteSuppressionRulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete suppression rules internal server error response has a 4xx status code
func (o *DeleteSuppressionRulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete suppression rules internal server error response has a 5xx status code
func (o *DeleteSuppressionRulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete suppression rules internal server error response a status code equal to that given
func (o *DeleteSuppressionRulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete suppression rules internal server error response
func (o *DeleteSuppressionRulesInternalServerError) Code() int {
	return 500
}

func (o *DeleteSuppressionRulesInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/suppression-rules/v1][%d] deleteSuppressionRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteSuppressionRulesInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /cloud-policies/entities/suppression-rules/v1][%d] deleteSuppressionRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteSuppressionRulesInternalServerError) GetPayload() *models.SuppressionrulesDeleteSuppressionRulesResponse {
	return o.Payload
}

func (o *DeleteSuppressionRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesDeleteSuppressionRulesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
