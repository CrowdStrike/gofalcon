// Code generated by go-swagger; DO NOT EDIT.

package cloud_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// CreateRuleReader is a Reader for the CreateRule structure.
type CreateRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateRuleConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cloud-policies/entities/rules/v1] CreateRule", response, response.Code())
	}
}

// NewCreateRuleOK creates a CreateRuleOK with default headers values
func NewCreateRuleOK() *CreateRuleOK {
	return &CreateRuleOK{}
}

/*
CreateRuleOK describes a response with status code 200, with default header values.

OK
*/
type CreateRuleOK struct {
	Payload *models.CommonCreateRuleResponse
}

// IsSuccess returns true when this create rule o k response has a 2xx status code
func (o *CreateRuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create rule o k response has a 3xx status code
func (o *CreateRuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create rule o k response has a 4xx status code
func (o *CreateRuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create rule o k response has a 5xx status code
func (o *CreateRuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create rule o k response a status code equal to that given
func (o *CreateRuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create rule o k response
func (o *CreateRuleOK) Code() int {
	return 200
}

func (o *CreateRuleOK) Error() string {
	return fmt.Sprintf("[POST /cloud-policies/entities/rules/v1][%d] createRuleOK  %+v", 200, o.Payload)
}

func (o *CreateRuleOK) String() string {
	return fmt.Sprintf("[POST /cloud-policies/entities/rules/v1][%d] createRuleOK  %+v", 200, o.Payload)
}

func (o *CreateRuleOK) GetPayload() *models.CommonCreateRuleResponse {
	return o.Payload
}

func (o *CreateRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonCreateRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRuleBadRequest creates a CreateRuleBadRequest with default headers values
func NewCreateRuleBadRequest() *CreateRuleBadRequest {
	return &CreateRuleBadRequest{}
}

/*
CreateRuleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateRuleBadRequest struct {
	Payload *models.CommonCreateRuleResponse
}

// IsSuccess returns true when this create rule bad request response has a 2xx status code
func (o *CreateRuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create rule bad request response has a 3xx status code
func (o *CreateRuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create rule bad request response has a 4xx status code
func (o *CreateRuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create rule bad request response has a 5xx status code
func (o *CreateRuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create rule bad request response a status code equal to that given
func (o *CreateRuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create rule bad request response
func (o *CreateRuleBadRequest) Code() int {
	return 400
}

func (o *CreateRuleBadRequest) Error() string {
	return fmt.Sprintf("[POST /cloud-policies/entities/rules/v1][%d] createRuleBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRuleBadRequest) String() string {
	return fmt.Sprintf("[POST /cloud-policies/entities/rules/v1][%d] createRuleBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRuleBadRequest) GetPayload() *models.CommonCreateRuleResponse {
	return o.Payload
}

func (o *CreateRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonCreateRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRuleConflict creates a CreateRuleConflict with default headers values
func NewCreateRuleConflict() *CreateRuleConflict {
	return &CreateRuleConflict{}
}

/*
CreateRuleConflict describes a response with status code 409, with default header values.

Conflict
*/
type CreateRuleConflict struct {
	Payload *models.CommonEntitiesResponse
}

// IsSuccess returns true when this create rule conflict response has a 2xx status code
func (o *CreateRuleConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create rule conflict response has a 3xx status code
func (o *CreateRuleConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create rule conflict response has a 4xx status code
func (o *CreateRuleConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create rule conflict response has a 5xx status code
func (o *CreateRuleConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create rule conflict response a status code equal to that given
func (o *CreateRuleConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create rule conflict response
func (o *CreateRuleConflict) Code() int {
	return 409
}

func (o *CreateRuleConflict) Error() string {
	return fmt.Sprintf("[POST /cloud-policies/entities/rules/v1][%d] createRuleConflict  %+v", 409, o.Payload)
}

func (o *CreateRuleConflict) String() string {
	return fmt.Sprintf("[POST /cloud-policies/entities/rules/v1][%d] createRuleConflict  %+v", 409, o.Payload)
}

func (o *CreateRuleConflict) GetPayload() *models.CommonEntitiesResponse {
	return o.Payload
}

func (o *CreateRuleConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRuleInternalServerError creates a CreateRuleInternalServerError with default headers values
func NewCreateRuleInternalServerError() *CreateRuleInternalServerError {
	return &CreateRuleInternalServerError{}
}

/*
CreateRuleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateRuleInternalServerError struct {
	Payload *models.CommonEntitiesResponse
}

// IsSuccess returns true when this create rule internal server error response has a 2xx status code
func (o *CreateRuleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create rule internal server error response has a 3xx status code
func (o *CreateRuleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create rule internal server error response has a 4xx status code
func (o *CreateRuleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create rule internal server error response has a 5xx status code
func (o *CreateRuleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create rule internal server error response a status code equal to that given
func (o *CreateRuleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create rule internal server error response
func (o *CreateRuleInternalServerError) Code() int {
	return 500
}

func (o *CreateRuleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cloud-policies/entities/rules/v1][%d] createRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateRuleInternalServerError) String() string {
	return fmt.Sprintf("[POST /cloud-policies/entities/rules/v1][%d] createRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateRuleInternalServerError) GetPayload() *models.CommonEntitiesResponse {
	return o.Payload
}

func (o *CreateRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
