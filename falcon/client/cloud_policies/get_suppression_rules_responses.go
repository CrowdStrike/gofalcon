// Code generated by go-swagger; DO NOT EDIT.

package cloud_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// GetSuppressionRulesReader is a Reader for the GetSuppressionRules structure.
type GetSuppressionRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSuppressionRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSuppressionRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSuppressionRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSuppressionRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cloud-policies/entities/suppression-rules/v1] GetSuppressionRules", response, response.Code())
	}
}

// NewGetSuppressionRulesOK creates a GetSuppressionRulesOK with default headers values
func NewGetSuppressionRulesOK() *GetSuppressionRulesOK {
	return &GetSuppressionRulesOK{}
}

/*
GetSuppressionRulesOK describes a response with status code 200, with default header values.

OK
*/
type GetSuppressionRulesOK struct {
	Payload *models.SuppressionrulesGetSuppressionRulesResponse
}

// IsSuccess returns true when this get suppression rules o k response has a 2xx status code
func (o *GetSuppressionRulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get suppression rules o k response has a 3xx status code
func (o *GetSuppressionRulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get suppression rules o k response has a 4xx status code
func (o *GetSuppressionRulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get suppression rules o k response has a 5xx status code
func (o *GetSuppressionRulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get suppression rules o k response a status code equal to that given
func (o *GetSuppressionRulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get suppression rules o k response
func (o *GetSuppressionRulesOK) Code() int {
	return 200
}

func (o *GetSuppressionRulesOK) Error() string {
	return fmt.Sprintf("[GET /cloud-policies/entities/suppression-rules/v1][%d] getSuppressionRulesOK  %+v", 200, o.Payload)
}

func (o *GetSuppressionRulesOK) String() string {
	return fmt.Sprintf("[GET /cloud-policies/entities/suppression-rules/v1][%d] getSuppressionRulesOK  %+v", 200, o.Payload)
}

func (o *GetSuppressionRulesOK) GetPayload() *models.SuppressionrulesGetSuppressionRulesResponse {
	return o.Payload
}

func (o *GetSuppressionRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesGetSuppressionRulesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSuppressionRulesBadRequest creates a GetSuppressionRulesBadRequest with default headers values
func NewGetSuppressionRulesBadRequest() *GetSuppressionRulesBadRequest {
	return &GetSuppressionRulesBadRequest{}
}

/*
GetSuppressionRulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetSuppressionRulesBadRequest struct {
	Payload *models.SuppressionrulesGetSuppressionRulesResponse
}

// IsSuccess returns true when this get suppression rules bad request response has a 2xx status code
func (o *GetSuppressionRulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get suppression rules bad request response has a 3xx status code
func (o *GetSuppressionRulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get suppression rules bad request response has a 4xx status code
func (o *GetSuppressionRulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get suppression rules bad request response has a 5xx status code
func (o *GetSuppressionRulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get suppression rules bad request response a status code equal to that given
func (o *GetSuppressionRulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get suppression rules bad request response
func (o *GetSuppressionRulesBadRequest) Code() int {
	return 400
}

func (o *GetSuppressionRulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /cloud-policies/entities/suppression-rules/v1][%d] getSuppressionRulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetSuppressionRulesBadRequest) String() string {
	return fmt.Sprintf("[GET /cloud-policies/entities/suppression-rules/v1][%d] getSuppressionRulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetSuppressionRulesBadRequest) GetPayload() *models.SuppressionrulesGetSuppressionRulesResponse {
	return o.Payload
}

func (o *GetSuppressionRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesGetSuppressionRulesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSuppressionRulesInternalServerError creates a GetSuppressionRulesInternalServerError with default headers values
func NewGetSuppressionRulesInternalServerError() *GetSuppressionRulesInternalServerError {
	return &GetSuppressionRulesInternalServerError{}
}

/*
GetSuppressionRulesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetSuppressionRulesInternalServerError struct {
	Payload *models.SuppressionrulesGetSuppressionRulesResponse
}

// IsSuccess returns true when this get suppression rules internal server error response has a 2xx status code
func (o *GetSuppressionRulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get suppression rules internal server error response has a 3xx status code
func (o *GetSuppressionRulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get suppression rules internal server error response has a 4xx status code
func (o *GetSuppressionRulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get suppression rules internal server error response has a 5xx status code
func (o *GetSuppressionRulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get suppression rules internal server error response a status code equal to that given
func (o *GetSuppressionRulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get suppression rules internal server error response
func (o *GetSuppressionRulesInternalServerError) Code() int {
	return 500
}

func (o *GetSuppressionRulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cloud-policies/entities/suppression-rules/v1][%d] getSuppressionRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSuppressionRulesInternalServerError) String() string {
	return fmt.Sprintf("[GET /cloud-policies/entities/suppression-rules/v1][%d] getSuppressionRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSuppressionRulesInternalServerError) GetPayload() *models.SuppressionrulesGetSuppressionRulesResponse {
	return o.Payload
}

func (o *GetSuppressionRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuppressionrulesGetSuppressionRulesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
