// Code generated by go-swagger; DO NOT EDIT.

package identity_protection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// APIPreemptProxyDeletePolicyRulesReader is a Reader for the APIPreemptProxyDeletePolicyRules structure.
type APIPreemptProxyDeletePolicyRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *APIPreemptProxyDeletePolicyRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAPIPreemptProxyDeletePolicyRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAPIPreemptProxyDeletePolicyRulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAPIPreemptProxyDeletePolicyRulesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAPIPreemptProxyDeletePolicyRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /identity-protection/entities/policy-rules/v1] api.preempt.proxy.delete.policy-rules", response, response.Code())
	}
}

// NewAPIPreemptProxyDeletePolicyRulesOK creates a APIPreemptProxyDeletePolicyRulesOK with default headers values
func NewAPIPreemptProxyDeletePolicyRulesOK() *APIPreemptProxyDeletePolicyRulesOK {
	return &APIPreemptProxyDeletePolicyRulesOK{}
}

/*
APIPreemptProxyDeletePolicyRulesOK describes a response with status code 200, with default header values.

OK
*/
type APIPreemptProxyDeletePolicyRulesOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64
}

// IsSuccess returns true when this api preempt proxy delete policy rules o k response has a 2xx status code
func (o *APIPreemptProxyDeletePolicyRulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this api preempt proxy delete policy rules o k response has a 3xx status code
func (o *APIPreemptProxyDeletePolicyRulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api preempt proxy delete policy rules o k response has a 4xx status code
func (o *APIPreemptProxyDeletePolicyRulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this api preempt proxy delete policy rules o k response has a 5xx status code
func (o *APIPreemptProxyDeletePolicyRulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this api preempt proxy delete policy rules o k response a status code equal to that given
func (o *APIPreemptProxyDeletePolicyRulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the api preempt proxy delete policy rules o k response
func (o *APIPreemptProxyDeletePolicyRulesOK) Code() int {
	return 200
}

func (o *APIPreemptProxyDeletePolicyRulesOK) Error() string {
	return fmt.Sprintf("[DELETE /identity-protection/entities/policy-rules/v1][%d] apiPreemptProxyDeletePolicyRulesOK", 200)
}

func (o *APIPreemptProxyDeletePolicyRulesOK) String() string {
	return fmt.Sprintf("[DELETE /identity-protection/entities/policy-rules/v1][%d] apiPreemptProxyDeletePolicyRulesOK", 200)
}

func (o *APIPreemptProxyDeletePolicyRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	return nil
}

// NewAPIPreemptProxyDeletePolicyRulesForbidden creates a APIPreemptProxyDeletePolicyRulesForbidden with default headers values
func NewAPIPreemptProxyDeletePolicyRulesForbidden() *APIPreemptProxyDeletePolicyRulesForbidden {
	return &APIPreemptProxyDeletePolicyRulesForbidden{}
}

/*
APIPreemptProxyDeletePolicyRulesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type APIPreemptProxyDeletePolicyRulesForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this api preempt proxy delete policy rules forbidden response has a 2xx status code
func (o *APIPreemptProxyDeletePolicyRulesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api preempt proxy delete policy rules forbidden response has a 3xx status code
func (o *APIPreemptProxyDeletePolicyRulesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api preempt proxy delete policy rules forbidden response has a 4xx status code
func (o *APIPreemptProxyDeletePolicyRulesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this api preempt proxy delete policy rules forbidden response has a 5xx status code
func (o *APIPreemptProxyDeletePolicyRulesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this api preempt proxy delete policy rules forbidden response a status code equal to that given
func (o *APIPreemptProxyDeletePolicyRulesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the api preempt proxy delete policy rules forbidden response
func (o *APIPreemptProxyDeletePolicyRulesForbidden) Code() int {
	return 403
}

func (o *APIPreemptProxyDeletePolicyRulesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /identity-protection/entities/policy-rules/v1][%d] apiPreemptProxyDeletePolicyRulesForbidden %s", 403, payload)
}

func (o *APIPreemptProxyDeletePolicyRulesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /identity-protection/entities/policy-rules/v1][%d] apiPreemptProxyDeletePolicyRulesForbidden %s", 403, payload)
}

func (o *APIPreemptProxyDeletePolicyRulesForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *APIPreemptProxyDeletePolicyRulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIPreemptProxyDeletePolicyRulesTooManyRequests creates a APIPreemptProxyDeletePolicyRulesTooManyRequests with default headers values
func NewAPIPreemptProxyDeletePolicyRulesTooManyRequests() *APIPreemptProxyDeletePolicyRulesTooManyRequests {
	return &APIPreemptProxyDeletePolicyRulesTooManyRequests{}
}

/*
APIPreemptProxyDeletePolicyRulesTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type APIPreemptProxyDeletePolicyRulesTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this api preempt proxy delete policy rules too many requests response has a 2xx status code
func (o *APIPreemptProxyDeletePolicyRulesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api preempt proxy delete policy rules too many requests response has a 3xx status code
func (o *APIPreemptProxyDeletePolicyRulesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api preempt proxy delete policy rules too many requests response has a 4xx status code
func (o *APIPreemptProxyDeletePolicyRulesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this api preempt proxy delete policy rules too many requests response has a 5xx status code
func (o *APIPreemptProxyDeletePolicyRulesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this api preempt proxy delete policy rules too many requests response a status code equal to that given
func (o *APIPreemptProxyDeletePolicyRulesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the api preempt proxy delete policy rules too many requests response
func (o *APIPreemptProxyDeletePolicyRulesTooManyRequests) Code() int {
	return 429
}

func (o *APIPreemptProxyDeletePolicyRulesTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /identity-protection/entities/policy-rules/v1][%d] apiPreemptProxyDeletePolicyRulesTooManyRequests %s", 429, payload)
}

func (o *APIPreemptProxyDeletePolicyRulesTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /identity-protection/entities/policy-rules/v1][%d] apiPreemptProxyDeletePolicyRulesTooManyRequests %s", 429, payload)
}

func (o *APIPreemptProxyDeletePolicyRulesTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *APIPreemptProxyDeletePolicyRulesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIPreemptProxyDeletePolicyRulesInternalServerError creates a APIPreemptProxyDeletePolicyRulesInternalServerError with default headers values
func NewAPIPreemptProxyDeletePolicyRulesInternalServerError() *APIPreemptProxyDeletePolicyRulesInternalServerError {
	return &APIPreemptProxyDeletePolicyRulesInternalServerError{}
}

/*
APIPreemptProxyDeletePolicyRulesInternalServerError describes a response with status code 500, with default header values.

Unexpected Error
*/
type APIPreemptProxyDeletePolicyRulesInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this api preempt proxy delete policy rules internal server error response has a 2xx status code
func (o *APIPreemptProxyDeletePolicyRulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this api preempt proxy delete policy rules internal server error response has a 3xx status code
func (o *APIPreemptProxyDeletePolicyRulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this api preempt proxy delete policy rules internal server error response has a 4xx status code
func (o *APIPreemptProxyDeletePolicyRulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this api preempt proxy delete policy rules internal server error response has a 5xx status code
func (o *APIPreemptProxyDeletePolicyRulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this api preempt proxy delete policy rules internal server error response a status code equal to that given
func (o *APIPreemptProxyDeletePolicyRulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the api preempt proxy delete policy rules internal server error response
func (o *APIPreemptProxyDeletePolicyRulesInternalServerError) Code() int {
	return 500
}

func (o *APIPreemptProxyDeletePolicyRulesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /identity-protection/entities/policy-rules/v1][%d] apiPreemptProxyDeletePolicyRulesInternalServerError %s", 500, payload)
}

func (o *APIPreemptProxyDeletePolicyRulesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /identity-protection/entities/policy-rules/v1][%d] apiPreemptProxyDeletePolicyRulesInternalServerError %s", 500, payload)
}

func (o *APIPreemptProxyDeletePolicyRulesInternalServerError) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *APIPreemptProxyDeletePolicyRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
