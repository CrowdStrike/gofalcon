// Code generated by go-swagger; DO NOT EDIT.

package data_protection_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// EntitiesContentPatternDeleteReader is a Reader for the EntitiesContentPatternDelete structure.
type EntitiesContentPatternDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EntitiesContentPatternDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEntitiesContentPatternDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEntitiesContentPatternDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEntitiesContentPatternDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewEntitiesContentPatternDeleteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEntitiesContentPatternDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /data-protection/entities/content-patterns/v1] entities.content-pattern.delete", response, response.Code())
	}
}

// NewEntitiesContentPatternDeleteOK creates a EntitiesContentPatternDeleteOK with default headers values
func NewEntitiesContentPatternDeleteOK() *EntitiesContentPatternDeleteOK {
	return &EntitiesContentPatternDeleteOK{}
}

/*
EntitiesContentPatternDeleteOK describes a response with status code 200, with default header values.

OK
*/
type EntitiesContentPatternDeleteOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.APIContentPatternMSAResponseV1
}

// IsSuccess returns true when this entities content pattern delete o k response has a 2xx status code
func (o *EntitiesContentPatternDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this entities content pattern delete o k response has a 3xx status code
func (o *EntitiesContentPatternDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern delete o k response has a 4xx status code
func (o *EntitiesContentPatternDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this entities content pattern delete o k response has a 5xx status code
func (o *EntitiesContentPatternDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern delete o k response a status code equal to that given
func (o *EntitiesContentPatternDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the entities content pattern delete o k response
func (o *EntitiesContentPatternDeleteOK) Code() int {
	return 200
}

func (o *EntitiesContentPatternDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternDeleteOK  %+v", 200, o.Payload)
}

func (o *EntitiesContentPatternDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternDeleteOK  %+v", 200, o.Payload)
}

func (o *EntitiesContentPatternDeleteOK) GetPayload() *models.APIContentPatternMSAResponseV1 {
	return o.Payload
}

func (o *EntitiesContentPatternDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.APIContentPatternMSAResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternDeleteBadRequest creates a EntitiesContentPatternDeleteBadRequest with default headers values
func NewEntitiesContentPatternDeleteBadRequest() *EntitiesContentPatternDeleteBadRequest {
	return &EntitiesContentPatternDeleteBadRequest{}
}

/*
EntitiesContentPatternDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type EntitiesContentPatternDeleteBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this entities content pattern delete bad request response has a 2xx status code
func (o *EntitiesContentPatternDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern delete bad request response has a 3xx status code
func (o *EntitiesContentPatternDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern delete bad request response has a 4xx status code
func (o *EntitiesContentPatternDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities content pattern delete bad request response has a 5xx status code
func (o *EntitiesContentPatternDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern delete bad request response a status code equal to that given
func (o *EntitiesContentPatternDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the entities content pattern delete bad request response
func (o *EntitiesContentPatternDeleteBadRequest) Code() int {
	return 400
}

func (o *EntitiesContentPatternDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *EntitiesContentPatternDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *EntitiesContentPatternDeleteBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *EntitiesContentPatternDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternDeleteForbidden creates a EntitiesContentPatternDeleteForbidden with default headers values
func NewEntitiesContentPatternDeleteForbidden() *EntitiesContentPatternDeleteForbidden {
	return &EntitiesContentPatternDeleteForbidden{}
}

/*
EntitiesContentPatternDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type EntitiesContentPatternDeleteForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this entities content pattern delete forbidden response has a 2xx status code
func (o *EntitiesContentPatternDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern delete forbidden response has a 3xx status code
func (o *EntitiesContentPatternDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern delete forbidden response has a 4xx status code
func (o *EntitiesContentPatternDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities content pattern delete forbidden response has a 5xx status code
func (o *EntitiesContentPatternDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern delete forbidden response a status code equal to that given
func (o *EntitiesContentPatternDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the entities content pattern delete forbidden response
func (o *EntitiesContentPatternDeleteForbidden) Code() int {
	return 403
}

func (o *EntitiesContentPatternDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternDeleteForbidden  %+v", 403, o.Payload)
}

func (o *EntitiesContentPatternDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternDeleteForbidden  %+v", 403, o.Payload)
}

func (o *EntitiesContentPatternDeleteForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *EntitiesContentPatternDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternDeleteTooManyRequests creates a EntitiesContentPatternDeleteTooManyRequests with default headers values
func NewEntitiesContentPatternDeleteTooManyRequests() *EntitiesContentPatternDeleteTooManyRequests {
	return &EntitiesContentPatternDeleteTooManyRequests{}
}

/*
EntitiesContentPatternDeleteTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type EntitiesContentPatternDeleteTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this entities content pattern delete too many requests response has a 2xx status code
func (o *EntitiesContentPatternDeleteTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern delete too many requests response has a 3xx status code
func (o *EntitiesContentPatternDeleteTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern delete too many requests response has a 4xx status code
func (o *EntitiesContentPatternDeleteTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities content pattern delete too many requests response has a 5xx status code
func (o *EntitiesContentPatternDeleteTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern delete too many requests response a status code equal to that given
func (o *EntitiesContentPatternDeleteTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the entities content pattern delete too many requests response
func (o *EntitiesContentPatternDeleteTooManyRequests) Code() int {
	return 429
}

func (o *EntitiesContentPatternDeleteTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternDeleteTooManyRequests  %+v", 429, o.Payload)
}

func (o *EntitiesContentPatternDeleteTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternDeleteTooManyRequests  %+v", 429, o.Payload)
}

func (o *EntitiesContentPatternDeleteTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *EntitiesContentPatternDeleteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternDeleteInternalServerError creates a EntitiesContentPatternDeleteInternalServerError with default headers values
func NewEntitiesContentPatternDeleteInternalServerError() *EntitiesContentPatternDeleteInternalServerError {
	return &EntitiesContentPatternDeleteInternalServerError{}
}

/*
EntitiesContentPatternDeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type EntitiesContentPatternDeleteInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this entities content pattern delete internal server error response has a 2xx status code
func (o *EntitiesContentPatternDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern delete internal server error response has a 3xx status code
func (o *EntitiesContentPatternDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern delete internal server error response has a 4xx status code
func (o *EntitiesContentPatternDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this entities content pattern delete internal server error response has a 5xx status code
func (o *EntitiesContentPatternDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this entities content pattern delete internal server error response a status code equal to that given
func (o *EntitiesContentPatternDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the entities content pattern delete internal server error response
func (o *EntitiesContentPatternDeleteInternalServerError) Code() int {
	return 500
}

func (o *EntitiesContentPatternDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *EntitiesContentPatternDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *EntitiesContentPatternDeleteInternalServerError) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *EntitiesContentPatternDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
