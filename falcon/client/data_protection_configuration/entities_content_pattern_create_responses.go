// Code generated by go-swagger; DO NOT EDIT.

package data_protection_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// EntitiesContentPatternCreateReader is a Reader for the EntitiesContentPatternCreate structure.
type EntitiesContentPatternCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EntitiesContentPatternCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEntitiesContentPatternCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEntitiesContentPatternCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEntitiesContentPatternCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewEntitiesContentPatternCreateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEntitiesContentPatternCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /data-protection/entities/content-patterns/v1] entities.content-pattern.create", response, response.Code())
	}
}

// NewEntitiesContentPatternCreateOK creates a EntitiesContentPatternCreateOK with default headers values
func NewEntitiesContentPatternCreateOK() *EntitiesContentPatternCreateOK {
	return &EntitiesContentPatternCreateOK{}
}

/*
EntitiesContentPatternCreateOK describes a response with status code 200, with default header values.

OK
*/
type EntitiesContentPatternCreateOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.APIContentPatternMSAResponseV1
}

// IsSuccess returns true when this entities content pattern create o k response has a 2xx status code
func (o *EntitiesContentPatternCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this entities content pattern create o k response has a 3xx status code
func (o *EntitiesContentPatternCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern create o k response has a 4xx status code
func (o *EntitiesContentPatternCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this entities content pattern create o k response has a 5xx status code
func (o *EntitiesContentPatternCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern create o k response a status code equal to that given
func (o *EntitiesContentPatternCreateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the entities content pattern create o k response
func (o *EntitiesContentPatternCreateOK) Code() int {
	return 200
}

func (o *EntitiesContentPatternCreateOK) Error() string {
	return fmt.Sprintf("[POST /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternCreateOK  %+v", 200, o.Payload)
}

func (o *EntitiesContentPatternCreateOK) String() string {
	return fmt.Sprintf("[POST /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternCreateOK  %+v", 200, o.Payload)
}

func (o *EntitiesContentPatternCreateOK) GetPayload() *models.APIContentPatternMSAResponseV1 {
	return o.Payload
}

func (o *EntitiesContentPatternCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.APIContentPatternMSAResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternCreateBadRequest creates a EntitiesContentPatternCreateBadRequest with default headers values
func NewEntitiesContentPatternCreateBadRequest() *EntitiesContentPatternCreateBadRequest {
	return &EntitiesContentPatternCreateBadRequest{}
}

/*
EntitiesContentPatternCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type EntitiesContentPatternCreateBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this entities content pattern create bad request response has a 2xx status code
func (o *EntitiesContentPatternCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern create bad request response has a 3xx status code
func (o *EntitiesContentPatternCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern create bad request response has a 4xx status code
func (o *EntitiesContentPatternCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities content pattern create bad request response has a 5xx status code
func (o *EntitiesContentPatternCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern create bad request response a status code equal to that given
func (o *EntitiesContentPatternCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the entities content pattern create bad request response
func (o *EntitiesContentPatternCreateBadRequest) Code() int {
	return 400
}

func (o *EntitiesContentPatternCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternCreateBadRequest  %+v", 400, o.Payload)
}

func (o *EntitiesContentPatternCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternCreateBadRequest  %+v", 400, o.Payload)
}

func (o *EntitiesContentPatternCreateBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *EntitiesContentPatternCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternCreateForbidden creates a EntitiesContentPatternCreateForbidden with default headers values
func NewEntitiesContentPatternCreateForbidden() *EntitiesContentPatternCreateForbidden {
	return &EntitiesContentPatternCreateForbidden{}
}

/*
EntitiesContentPatternCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type EntitiesContentPatternCreateForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this entities content pattern create forbidden response has a 2xx status code
func (o *EntitiesContentPatternCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern create forbidden response has a 3xx status code
func (o *EntitiesContentPatternCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern create forbidden response has a 4xx status code
func (o *EntitiesContentPatternCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities content pattern create forbidden response has a 5xx status code
func (o *EntitiesContentPatternCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern create forbidden response a status code equal to that given
func (o *EntitiesContentPatternCreateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the entities content pattern create forbidden response
func (o *EntitiesContentPatternCreateForbidden) Code() int {
	return 403
}

func (o *EntitiesContentPatternCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternCreateForbidden  %+v", 403, o.Payload)
}

func (o *EntitiesContentPatternCreateForbidden) String() string {
	return fmt.Sprintf("[POST /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternCreateForbidden  %+v", 403, o.Payload)
}

func (o *EntitiesContentPatternCreateForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *EntitiesContentPatternCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternCreateTooManyRequests creates a EntitiesContentPatternCreateTooManyRequests with default headers values
func NewEntitiesContentPatternCreateTooManyRequests() *EntitiesContentPatternCreateTooManyRequests {
	return &EntitiesContentPatternCreateTooManyRequests{}
}

/*
EntitiesContentPatternCreateTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type EntitiesContentPatternCreateTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this entities content pattern create too many requests response has a 2xx status code
func (o *EntitiesContentPatternCreateTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern create too many requests response has a 3xx status code
func (o *EntitiesContentPatternCreateTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern create too many requests response has a 4xx status code
func (o *EntitiesContentPatternCreateTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities content pattern create too many requests response has a 5xx status code
func (o *EntitiesContentPatternCreateTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern create too many requests response a status code equal to that given
func (o *EntitiesContentPatternCreateTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the entities content pattern create too many requests response
func (o *EntitiesContentPatternCreateTooManyRequests) Code() int {
	return 429
}

func (o *EntitiesContentPatternCreateTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternCreateTooManyRequests  %+v", 429, o.Payload)
}

func (o *EntitiesContentPatternCreateTooManyRequests) String() string {
	return fmt.Sprintf("[POST /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternCreateTooManyRequests  %+v", 429, o.Payload)
}

func (o *EntitiesContentPatternCreateTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *EntitiesContentPatternCreateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternCreateInternalServerError creates a EntitiesContentPatternCreateInternalServerError with default headers values
func NewEntitiesContentPatternCreateInternalServerError() *EntitiesContentPatternCreateInternalServerError {
	return &EntitiesContentPatternCreateInternalServerError{}
}

/*
EntitiesContentPatternCreateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type EntitiesContentPatternCreateInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this entities content pattern create internal server error response has a 2xx status code
func (o *EntitiesContentPatternCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern create internal server error response has a 3xx status code
func (o *EntitiesContentPatternCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern create internal server error response has a 4xx status code
func (o *EntitiesContentPatternCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this entities content pattern create internal server error response has a 5xx status code
func (o *EntitiesContentPatternCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this entities content pattern create internal server error response a status code equal to that given
func (o *EntitiesContentPatternCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the entities content pattern create internal server error response
func (o *EntitiesContentPatternCreateInternalServerError) Code() int {
	return 500
}

func (o *EntitiesContentPatternCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *EntitiesContentPatternCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *EntitiesContentPatternCreateInternalServerError) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *EntitiesContentPatternCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
