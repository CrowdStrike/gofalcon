// Code generated by go-swagger; DO NOT EDIT.

package data_protection_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// EntitiesContentPatternGetReader is a Reader for the EntitiesContentPatternGet structure.
type EntitiesContentPatternGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EntitiesContentPatternGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEntitiesContentPatternGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEntitiesContentPatternGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEntitiesContentPatternGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEntitiesContentPatternGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewEntitiesContentPatternGetTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEntitiesContentPatternGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /data-protection/entities/content-patterns/v1] entities.content-pattern.get", response, response.Code())
	}
}

// NewEntitiesContentPatternGetOK creates a EntitiesContentPatternGetOK with default headers values
func NewEntitiesContentPatternGetOK() *EntitiesContentPatternGetOK {
	return &EntitiesContentPatternGetOK{}
}

/*
EntitiesContentPatternGetOK describes a response with status code 200, with default header values.

OK
*/
type EntitiesContentPatternGetOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.APIContentPatternMSAResponseV1
}

// IsSuccess returns true when this entities content pattern get o k response has a 2xx status code
func (o *EntitiesContentPatternGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this entities content pattern get o k response has a 3xx status code
func (o *EntitiesContentPatternGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern get o k response has a 4xx status code
func (o *EntitiesContentPatternGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this entities content pattern get o k response has a 5xx status code
func (o *EntitiesContentPatternGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern get o k response a status code equal to that given
func (o *EntitiesContentPatternGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the entities content pattern get o k response
func (o *EntitiesContentPatternGetOK) Code() int {
	return 200
}

func (o *EntitiesContentPatternGetOK) Error() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetOK  %+v", 200, o.Payload)
}

func (o *EntitiesContentPatternGetOK) String() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetOK  %+v", 200, o.Payload)
}

func (o *EntitiesContentPatternGetOK) GetPayload() *models.APIContentPatternMSAResponseV1 {
	return o.Payload
}

func (o *EntitiesContentPatternGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.APIContentPatternMSAResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternGetBadRequest creates a EntitiesContentPatternGetBadRequest with default headers values
func NewEntitiesContentPatternGetBadRequest() *EntitiesContentPatternGetBadRequest {
	return &EntitiesContentPatternGetBadRequest{}
}

/*
EntitiesContentPatternGetBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type EntitiesContentPatternGetBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this entities content pattern get bad request response has a 2xx status code
func (o *EntitiesContentPatternGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern get bad request response has a 3xx status code
func (o *EntitiesContentPatternGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern get bad request response has a 4xx status code
func (o *EntitiesContentPatternGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities content pattern get bad request response has a 5xx status code
func (o *EntitiesContentPatternGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern get bad request response a status code equal to that given
func (o *EntitiesContentPatternGetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the entities content pattern get bad request response
func (o *EntitiesContentPatternGetBadRequest) Code() int {
	return 400
}

func (o *EntitiesContentPatternGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetBadRequest  %+v", 400, o.Payload)
}

func (o *EntitiesContentPatternGetBadRequest) String() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetBadRequest  %+v", 400, o.Payload)
}

func (o *EntitiesContentPatternGetBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *EntitiesContentPatternGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternGetForbidden creates a EntitiesContentPatternGetForbidden with default headers values
func NewEntitiesContentPatternGetForbidden() *EntitiesContentPatternGetForbidden {
	return &EntitiesContentPatternGetForbidden{}
}

/*
EntitiesContentPatternGetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type EntitiesContentPatternGetForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this entities content pattern get forbidden response has a 2xx status code
func (o *EntitiesContentPatternGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern get forbidden response has a 3xx status code
func (o *EntitiesContentPatternGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern get forbidden response has a 4xx status code
func (o *EntitiesContentPatternGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities content pattern get forbidden response has a 5xx status code
func (o *EntitiesContentPatternGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern get forbidden response a status code equal to that given
func (o *EntitiesContentPatternGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the entities content pattern get forbidden response
func (o *EntitiesContentPatternGetForbidden) Code() int {
	return 403
}

func (o *EntitiesContentPatternGetForbidden) Error() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetForbidden  %+v", 403, o.Payload)
}

func (o *EntitiesContentPatternGetForbidden) String() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetForbidden  %+v", 403, o.Payload)
}

func (o *EntitiesContentPatternGetForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *EntitiesContentPatternGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternGetNotFound creates a EntitiesContentPatternGetNotFound with default headers values
func NewEntitiesContentPatternGetNotFound() *EntitiesContentPatternGetNotFound {
	return &EntitiesContentPatternGetNotFound{}
}

/*
EntitiesContentPatternGetNotFound describes a response with status code 404, with default header values.

Not Found
*/
type EntitiesContentPatternGetNotFound struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this entities content pattern get not found response has a 2xx status code
func (o *EntitiesContentPatternGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern get not found response has a 3xx status code
func (o *EntitiesContentPatternGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern get not found response has a 4xx status code
func (o *EntitiesContentPatternGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities content pattern get not found response has a 5xx status code
func (o *EntitiesContentPatternGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern get not found response a status code equal to that given
func (o *EntitiesContentPatternGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the entities content pattern get not found response
func (o *EntitiesContentPatternGetNotFound) Code() int {
	return 404
}

func (o *EntitiesContentPatternGetNotFound) Error() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetNotFound  %+v", 404, o.Payload)
}

func (o *EntitiesContentPatternGetNotFound) String() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetNotFound  %+v", 404, o.Payload)
}

func (o *EntitiesContentPatternGetNotFound) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *EntitiesContentPatternGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternGetTooManyRequests creates a EntitiesContentPatternGetTooManyRequests with default headers values
func NewEntitiesContentPatternGetTooManyRequests() *EntitiesContentPatternGetTooManyRequests {
	return &EntitiesContentPatternGetTooManyRequests{}
}

/*
EntitiesContentPatternGetTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type EntitiesContentPatternGetTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this entities content pattern get too many requests response has a 2xx status code
func (o *EntitiesContentPatternGetTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern get too many requests response has a 3xx status code
func (o *EntitiesContentPatternGetTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern get too many requests response has a 4xx status code
func (o *EntitiesContentPatternGetTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities content pattern get too many requests response has a 5xx status code
func (o *EntitiesContentPatternGetTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this entities content pattern get too many requests response a status code equal to that given
func (o *EntitiesContentPatternGetTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the entities content pattern get too many requests response
func (o *EntitiesContentPatternGetTooManyRequests) Code() int {
	return 429
}

func (o *EntitiesContentPatternGetTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *EntitiesContentPatternGetTooManyRequests) String() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetTooManyRequests  %+v", 429, o.Payload)
}

func (o *EntitiesContentPatternGetTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *EntitiesContentPatternGetTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesContentPatternGetInternalServerError creates a EntitiesContentPatternGetInternalServerError with default headers values
func NewEntitiesContentPatternGetInternalServerError() *EntitiesContentPatternGetInternalServerError {
	return &EntitiesContentPatternGetInternalServerError{}
}

/*
EntitiesContentPatternGetInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type EntitiesContentPatternGetInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this entities content pattern get internal server error response has a 2xx status code
func (o *EntitiesContentPatternGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities content pattern get internal server error response has a 3xx status code
func (o *EntitiesContentPatternGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities content pattern get internal server error response has a 4xx status code
func (o *EntitiesContentPatternGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this entities content pattern get internal server error response has a 5xx status code
func (o *EntitiesContentPatternGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this entities content pattern get internal server error response a status code equal to that given
func (o *EntitiesContentPatternGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the entities content pattern get internal server error response
func (o *EntitiesContentPatternGetInternalServerError) Code() int {
	return 500
}

func (o *EntitiesContentPatternGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetInternalServerError  %+v", 500, o.Payload)
}

func (o *EntitiesContentPatternGetInternalServerError) String() string {
	return fmt.Sprintf("[GET /data-protection/entities/content-patterns/v1][%d] entitiesContentPatternGetInternalServerError  %+v", 500, o.Payload)
}

func (o *EntitiesContentPatternGetInternalServerError) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *EntitiesContentPatternGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
