// Code generated by go-swagger; DO NOT EDIT.

package execution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewReadRequestBodyParams creates a new ReadRequestBodyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewReadRequestBodyParams() *ReadRequestBodyParams {
	return &ReadRequestBodyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewReadRequestBodyParamsWithTimeout creates a new ReadRequestBodyParams object
// with the ability to set a timeout on a request.
func NewReadRequestBodyParamsWithTimeout(timeout time.Duration) *ReadRequestBodyParams {
	return &ReadRequestBodyParams{
		timeout: timeout,
	}
}

// NewReadRequestBodyParamsWithContext creates a new ReadRequestBodyParams object
// with the ability to set a context for a request.
func NewReadRequestBodyParamsWithContext(ctx context.Context) *ReadRequestBodyParams {
	return &ReadRequestBodyParams{
		Context: ctx,
	}
}

// NewReadRequestBodyParamsWithHTTPClient creates a new ReadRequestBodyParams object
// with the ability to set a custom HTTPClient for a request.
func NewReadRequestBodyParamsWithHTTPClient(client *http.Client) *ReadRequestBodyParams {
	return &ReadRequestBodyParams{
		HTTPClient: client,
	}
}

/*
ReadRequestBodyParams contains all the parameters to send to the API endpoint

	for the read request body operation.

	Typically these are written to a http.Request.
*/
type ReadRequestBodyParams struct {

	/* Filename.

	   filename to be retrieved
	*/
	Filename string

	/* Fn.

	   function ref; form of $fn_id:$fn_version
	*/
	Fn string

	/* ID.

	   Execution ID
	*/
	ID string

	/* Sha256.

	   sha256 checksum for file to be retrieved
	*/
	Sha256 string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the read request body params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ReadRequestBodyParams) WithDefaults() *ReadRequestBodyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the read request body params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ReadRequestBodyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the read request body params
func (o *ReadRequestBodyParams) WithTimeout(timeout time.Duration) *ReadRequestBodyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the read request body params
func (o *ReadRequestBodyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the read request body params
func (o *ReadRequestBodyParams) WithContext(ctx context.Context) *ReadRequestBodyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the read request body params
func (o *ReadRequestBodyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the read request body params
func (o *ReadRequestBodyParams) WithHTTPClient(client *http.Client) *ReadRequestBodyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the read request body params
func (o *ReadRequestBodyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFilename adds the filename to the read request body params
func (o *ReadRequestBodyParams) WithFilename(filename string) *ReadRequestBodyParams {
	o.SetFilename(filename)
	return o
}

// SetFilename adds the filename to the read request body params
func (o *ReadRequestBodyParams) SetFilename(filename string) {
	o.Filename = filename
}

// WithFn adds the fn to the read request body params
func (o *ReadRequestBodyParams) WithFn(fn string) *ReadRequestBodyParams {
	o.SetFn(fn)
	return o
}

// SetFn adds the fn to the read request body params
func (o *ReadRequestBodyParams) SetFn(fn string) {
	o.Fn = fn
}

// WithID adds the id to the read request body params
func (o *ReadRequestBodyParams) WithID(id string) *ReadRequestBodyParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the read request body params
func (o *ReadRequestBodyParams) SetID(id string) {
	o.ID = id
}

// WithSha256 adds the sha256 to the read request body params
func (o *ReadRequestBodyParams) WithSha256(sha256 string) *ReadRequestBodyParams {
	o.SetSha256(sha256)
	return o
}

// SetSha256 adds the sha256 to the read request body params
func (o *ReadRequestBodyParams) SetSha256(sha256 string) {
	o.Sha256 = sha256
}

// WriteToRequest writes these params to a swagger request
func (o *ReadRequestBodyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param filename
	qrFilename := o.Filename
	qFilename := qrFilename
	if qFilename != "" {

		if err := r.SetQueryParam("filename", qFilename); err != nil {
			return err
		}
	}

	// query param fn
	qrFn := o.Fn
	qFn := qrFn
	if qFn != "" {

		if err := r.SetQueryParam("fn", qFn); err != nil {
			return err
		}
	}

	// query param id
	qrID := o.ID
	qID := qrID
	if qID != "" {

		if err := r.SetQueryParam("id", qID); err != nil {
			return err
		}
	}

	// query param sha256
	qrSha256 := o.Sha256
	qSha256 := qrSha256
	if qSha256 != "" {

		if err := r.SetQueryParam("sha256", qSha256); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
