// Code generated by go-swagger; DO NOT EDIT.

package intel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetMalwareMitreReportParams creates a new GetMalwareMitreReportParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetMalwareMitreReportParams() *GetMalwareMitreReportParams {
	return &GetMalwareMitreReportParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetMalwareMitreReportParamsWithTimeout creates a new GetMalwareMitreReportParams object
// with the ability to set a timeout on a request.
func NewGetMalwareMitreReportParamsWithTimeout(timeout time.Duration) *GetMalwareMitreReportParams {
	return &GetMalwareMitreReportParams{
		timeout: timeout,
	}
}

// NewGetMalwareMitreReportParamsWithContext creates a new GetMalwareMitreReportParams object
// with the ability to set a context for a request.
func NewGetMalwareMitreReportParamsWithContext(ctx context.Context) *GetMalwareMitreReportParams {
	return &GetMalwareMitreReportParams{
		Context: ctx,
	}
}

// NewGetMalwareMitreReportParamsWithHTTPClient creates a new GetMalwareMitreReportParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetMalwareMitreReportParamsWithHTTPClient(client *http.Client) *GetMalwareMitreReportParams {
	return &GetMalwareMitreReportParams{
		HTTPClient: client,
	}
}

/*
GetMalwareMitreReportParams contains all the parameters to send to the API endpoint

	for the get malware mitre report operation.

	Typically these are written to a http.Request.
*/
type GetMalwareMitreReportParams struct {

	/* XCSUSERUUID.

	   User id
	*/
	XCSUSERUUID *string

	/* Format.

	   Supported report formats: CSV, JSON or JSON_NAVIGATOR
	*/
	Format string

	/* ID.

	   Malware family name in lower case with spaces replaced with dashes
	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get malware mitre report params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetMalwareMitreReportParams) WithDefaults() *GetMalwareMitreReportParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get malware mitre report params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetMalwareMitreReportParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get malware mitre report params
func (o *GetMalwareMitreReportParams) WithTimeout(timeout time.Duration) *GetMalwareMitreReportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get malware mitre report params
func (o *GetMalwareMitreReportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get malware mitre report params
func (o *GetMalwareMitreReportParams) WithContext(ctx context.Context) *GetMalwareMitreReportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get malware mitre report params
func (o *GetMalwareMitreReportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get malware mitre report params
func (o *GetMalwareMitreReportParams) WithHTTPClient(client *http.Client) *GetMalwareMitreReportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get malware mitre report params
func (o *GetMalwareMitreReportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXCSUSERUUID adds the xCSUSERUUID to the get malware mitre report params
func (o *GetMalwareMitreReportParams) WithXCSUSERUUID(xCSUSERUUID *string) *GetMalwareMitreReportParams {
	o.SetXCSUSERUUID(xCSUSERUUID)
	return o
}

// SetXCSUSERUUID adds the xCSUSERUuid to the get malware mitre report params
func (o *GetMalwareMitreReportParams) SetXCSUSERUUID(xCSUSERUUID *string) {
	o.XCSUSERUUID = xCSUSERUUID
}

// WithFormat adds the format to the get malware mitre report params
func (o *GetMalwareMitreReportParams) WithFormat(format string) *GetMalwareMitreReportParams {
	o.SetFormat(format)
	return o
}

// SetFormat adds the format to the get malware mitre report params
func (o *GetMalwareMitreReportParams) SetFormat(format string) {
	o.Format = format
}

// WithID adds the id to the get malware mitre report params
func (o *GetMalwareMitreReportParams) WithID(id string) *GetMalwareMitreReportParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get malware mitre report params
func (o *GetMalwareMitreReportParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *GetMalwareMitreReportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XCSUSERUUID != nil {

		// header param X-CS-USERUUID
		if err := r.SetHeaderParam("X-CS-USERUUID", *o.XCSUSERUUID); err != nil {
			return err
		}
	}

	// query param format
	qrFormat := o.Format
	qFormat := qrFormat
	if qFormat != "" {

		if err := r.SetQueryParam("format", qFormat); err != nil {
			return err
		}
	}

	// query param id
	qrID := o.ID
	qID := qrID
	if qID != "" {

		if err := r.SetQueryParam("id", qID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
