// Code generated by go-swagger; DO NOT EDIT.

package correlation_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// EntitiesRuleVersionsExportPostV1Reader is a Reader for the EntitiesRuleVersionsExportPostV1 structure.
type EntitiesRuleVersionsExportPostV1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EntitiesRuleVersionsExportPostV1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEntitiesRuleVersionsExportPostV1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEntitiesRuleVersionsExportPostV1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewEntitiesRuleVersionsExportPostV1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEntitiesRuleVersionsExportPostV1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEntitiesRuleVersionsExportPostV1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewEntitiesRuleVersionsExportPostV1TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEntitiesRuleVersionsExportPostV1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /correlation-rules/entities/rule-versions/export/v1] entities.rule-versions_export.post.v1", response, response.Code())
	}
}

// NewEntitiesRuleVersionsExportPostV1OK creates a EntitiesRuleVersionsExportPostV1OK with default headers values
func NewEntitiesRuleVersionsExportPostV1OK() *EntitiesRuleVersionsExportPostV1OK {
	return &EntitiesRuleVersionsExportPostV1OK{}
}

/*
EntitiesRuleVersionsExportPostV1OK describes a response with status code 200, with default header values.

OK
*/
type EntitiesRuleVersionsExportPostV1OK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.APIJobLinkResponseV1
}

// IsSuccess returns true when this entities rule versions export post v1 o k response has a 2xx status code
func (o *EntitiesRuleVersionsExportPostV1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this entities rule versions export post v1 o k response has a 3xx status code
func (o *EntitiesRuleVersionsExportPostV1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities rule versions export post v1 o k response has a 4xx status code
func (o *EntitiesRuleVersionsExportPostV1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this entities rule versions export post v1 o k response has a 5xx status code
func (o *EntitiesRuleVersionsExportPostV1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this entities rule versions export post v1 o k response a status code equal to that given
func (o *EntitiesRuleVersionsExportPostV1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the entities rule versions export post v1 o k response
func (o *EntitiesRuleVersionsExportPostV1OK) Code() int {
	return 200
}

func (o *EntitiesRuleVersionsExportPostV1OK) Error() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1OK  %+v", 200, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1OK) String() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1OK  %+v", 200, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1OK) GetPayload() *models.APIJobLinkResponseV1 {
	return o.Payload
}

func (o *EntitiesRuleVersionsExportPostV1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.APIJobLinkResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesRuleVersionsExportPostV1BadRequest creates a EntitiesRuleVersionsExportPostV1BadRequest with default headers values
func NewEntitiesRuleVersionsExportPostV1BadRequest() *EntitiesRuleVersionsExportPostV1BadRequest {
	return &EntitiesRuleVersionsExportPostV1BadRequest{}
}

/*
EntitiesRuleVersionsExportPostV1BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type EntitiesRuleVersionsExportPostV1BadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.APIJobLinkResponseV1
}

// IsSuccess returns true when this entities rule versions export post v1 bad request response has a 2xx status code
func (o *EntitiesRuleVersionsExportPostV1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities rule versions export post v1 bad request response has a 3xx status code
func (o *EntitiesRuleVersionsExportPostV1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities rule versions export post v1 bad request response has a 4xx status code
func (o *EntitiesRuleVersionsExportPostV1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities rule versions export post v1 bad request response has a 5xx status code
func (o *EntitiesRuleVersionsExportPostV1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this entities rule versions export post v1 bad request response a status code equal to that given
func (o *EntitiesRuleVersionsExportPostV1BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the entities rule versions export post v1 bad request response
func (o *EntitiesRuleVersionsExportPostV1BadRequest) Code() int {
	return 400
}

func (o *EntitiesRuleVersionsExportPostV1BadRequest) Error() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1BadRequest  %+v", 400, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1BadRequest) String() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1BadRequest  %+v", 400, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1BadRequest) GetPayload() *models.APIJobLinkResponseV1 {
	return o.Payload
}

func (o *EntitiesRuleVersionsExportPostV1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.APIJobLinkResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesRuleVersionsExportPostV1Unauthorized creates a EntitiesRuleVersionsExportPostV1Unauthorized with default headers values
func NewEntitiesRuleVersionsExportPostV1Unauthorized() *EntitiesRuleVersionsExportPostV1Unauthorized {
	return &EntitiesRuleVersionsExportPostV1Unauthorized{}
}

/*
EntitiesRuleVersionsExportPostV1Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type EntitiesRuleVersionsExportPostV1Unauthorized struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.APIJobLinkResponseV1
}

// IsSuccess returns true when this entities rule versions export post v1 unauthorized response has a 2xx status code
func (o *EntitiesRuleVersionsExportPostV1Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities rule versions export post v1 unauthorized response has a 3xx status code
func (o *EntitiesRuleVersionsExportPostV1Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities rule versions export post v1 unauthorized response has a 4xx status code
func (o *EntitiesRuleVersionsExportPostV1Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities rule versions export post v1 unauthorized response has a 5xx status code
func (o *EntitiesRuleVersionsExportPostV1Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this entities rule versions export post v1 unauthorized response a status code equal to that given
func (o *EntitiesRuleVersionsExportPostV1Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the entities rule versions export post v1 unauthorized response
func (o *EntitiesRuleVersionsExportPostV1Unauthorized) Code() int {
	return 401
}

func (o *EntitiesRuleVersionsExportPostV1Unauthorized) Error() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1Unauthorized  %+v", 401, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1Unauthorized) String() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1Unauthorized  %+v", 401, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1Unauthorized) GetPayload() *models.APIJobLinkResponseV1 {
	return o.Payload
}

func (o *EntitiesRuleVersionsExportPostV1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.APIJobLinkResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesRuleVersionsExportPostV1Forbidden creates a EntitiesRuleVersionsExportPostV1Forbidden with default headers values
func NewEntitiesRuleVersionsExportPostV1Forbidden() *EntitiesRuleVersionsExportPostV1Forbidden {
	return &EntitiesRuleVersionsExportPostV1Forbidden{}
}

/*
EntitiesRuleVersionsExportPostV1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type EntitiesRuleVersionsExportPostV1Forbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.APIJobLinkResponseV1
}

// IsSuccess returns true when this entities rule versions export post v1 forbidden response has a 2xx status code
func (o *EntitiesRuleVersionsExportPostV1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities rule versions export post v1 forbidden response has a 3xx status code
func (o *EntitiesRuleVersionsExportPostV1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities rule versions export post v1 forbidden response has a 4xx status code
func (o *EntitiesRuleVersionsExportPostV1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities rule versions export post v1 forbidden response has a 5xx status code
func (o *EntitiesRuleVersionsExportPostV1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this entities rule versions export post v1 forbidden response a status code equal to that given
func (o *EntitiesRuleVersionsExportPostV1Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the entities rule versions export post v1 forbidden response
func (o *EntitiesRuleVersionsExportPostV1Forbidden) Code() int {
	return 403
}

func (o *EntitiesRuleVersionsExportPostV1Forbidden) Error() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1Forbidden  %+v", 403, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1Forbidden) String() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1Forbidden  %+v", 403, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1Forbidden) GetPayload() *models.APIJobLinkResponseV1 {
	return o.Payload
}

func (o *EntitiesRuleVersionsExportPostV1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.APIJobLinkResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesRuleVersionsExportPostV1NotFound creates a EntitiesRuleVersionsExportPostV1NotFound with default headers values
func NewEntitiesRuleVersionsExportPostV1NotFound() *EntitiesRuleVersionsExportPostV1NotFound {
	return &EntitiesRuleVersionsExportPostV1NotFound{}
}

/*
EntitiesRuleVersionsExportPostV1NotFound describes a response with status code 404, with default header values.

Not Found
*/
type EntitiesRuleVersionsExportPostV1NotFound struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.APIJobLinkResponseV1
}

// IsSuccess returns true when this entities rule versions export post v1 not found response has a 2xx status code
func (o *EntitiesRuleVersionsExportPostV1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities rule versions export post v1 not found response has a 3xx status code
func (o *EntitiesRuleVersionsExportPostV1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities rule versions export post v1 not found response has a 4xx status code
func (o *EntitiesRuleVersionsExportPostV1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities rule versions export post v1 not found response has a 5xx status code
func (o *EntitiesRuleVersionsExportPostV1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this entities rule versions export post v1 not found response a status code equal to that given
func (o *EntitiesRuleVersionsExportPostV1NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the entities rule versions export post v1 not found response
func (o *EntitiesRuleVersionsExportPostV1NotFound) Code() int {
	return 404
}

func (o *EntitiesRuleVersionsExportPostV1NotFound) Error() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1NotFound  %+v", 404, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1NotFound) String() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1NotFound  %+v", 404, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1NotFound) GetPayload() *models.APIJobLinkResponseV1 {
	return o.Payload
}

func (o *EntitiesRuleVersionsExportPostV1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.APIJobLinkResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesRuleVersionsExportPostV1TooManyRequests creates a EntitiesRuleVersionsExportPostV1TooManyRequests with default headers values
func NewEntitiesRuleVersionsExportPostV1TooManyRequests() *EntitiesRuleVersionsExportPostV1TooManyRequests {
	return &EntitiesRuleVersionsExportPostV1TooManyRequests{}
}

/*
EntitiesRuleVersionsExportPostV1TooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type EntitiesRuleVersionsExportPostV1TooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this entities rule versions export post v1 too many requests response has a 2xx status code
func (o *EntitiesRuleVersionsExportPostV1TooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities rule versions export post v1 too many requests response has a 3xx status code
func (o *EntitiesRuleVersionsExportPostV1TooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities rule versions export post v1 too many requests response has a 4xx status code
func (o *EntitiesRuleVersionsExportPostV1TooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this entities rule versions export post v1 too many requests response has a 5xx status code
func (o *EntitiesRuleVersionsExportPostV1TooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this entities rule versions export post v1 too many requests response a status code equal to that given
func (o *EntitiesRuleVersionsExportPostV1TooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the entities rule versions export post v1 too many requests response
func (o *EntitiesRuleVersionsExportPostV1TooManyRequests) Code() int {
	return 429
}

func (o *EntitiesRuleVersionsExportPostV1TooManyRequests) Error() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1TooManyRequests  %+v", 429, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1TooManyRequests) String() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1TooManyRequests  %+v", 429, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1TooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *EntitiesRuleVersionsExportPostV1TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEntitiesRuleVersionsExportPostV1InternalServerError creates a EntitiesRuleVersionsExportPostV1InternalServerError with default headers values
func NewEntitiesRuleVersionsExportPostV1InternalServerError() *EntitiesRuleVersionsExportPostV1InternalServerError {
	return &EntitiesRuleVersionsExportPostV1InternalServerError{}
}

/*
EntitiesRuleVersionsExportPostV1InternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type EntitiesRuleVersionsExportPostV1InternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.APIJobLinkResponseV1
}

// IsSuccess returns true when this entities rule versions export post v1 internal server error response has a 2xx status code
func (o *EntitiesRuleVersionsExportPostV1InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this entities rule versions export post v1 internal server error response has a 3xx status code
func (o *EntitiesRuleVersionsExportPostV1InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this entities rule versions export post v1 internal server error response has a 4xx status code
func (o *EntitiesRuleVersionsExportPostV1InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this entities rule versions export post v1 internal server error response has a 5xx status code
func (o *EntitiesRuleVersionsExportPostV1InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this entities rule versions export post v1 internal server error response a status code equal to that given
func (o *EntitiesRuleVersionsExportPostV1InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the entities rule versions export post v1 internal server error response
func (o *EntitiesRuleVersionsExportPostV1InternalServerError) Code() int {
	return 500
}

func (o *EntitiesRuleVersionsExportPostV1InternalServerError) Error() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1InternalServerError  %+v", 500, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1InternalServerError) String() string {
	return fmt.Sprintf("[POST /correlation-rules/entities/rule-versions/export/v1][%d] entitiesRuleVersionsExportPostV1InternalServerError  %+v", 500, o.Payload)
}

func (o *EntitiesRuleVersionsExportPostV1InternalServerError) GetPayload() *models.APIJobLinkResponseV1 {
	return o.Payload
}

func (o *EntitiesRuleVersionsExportPostV1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.APIJobLinkResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
