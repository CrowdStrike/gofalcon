// Code generated by go-swagger; DO NOT EDIT.

package content_update_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewQueryPinnableContentVersionsParams creates a new QueryPinnableContentVersionsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewQueryPinnableContentVersionsParams() *QueryPinnableContentVersionsParams {
	return &QueryPinnableContentVersionsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewQueryPinnableContentVersionsParamsWithTimeout creates a new QueryPinnableContentVersionsParams object
// with the ability to set a timeout on a request.
func NewQueryPinnableContentVersionsParamsWithTimeout(timeout time.Duration) *QueryPinnableContentVersionsParams {
	return &QueryPinnableContentVersionsParams{
		timeout: timeout,
	}
}

// NewQueryPinnableContentVersionsParamsWithContext creates a new QueryPinnableContentVersionsParams object
// with the ability to set a context for a request.
func NewQueryPinnableContentVersionsParamsWithContext(ctx context.Context) *QueryPinnableContentVersionsParams {
	return &QueryPinnableContentVersionsParams{
		Context: ctx,
	}
}

// NewQueryPinnableContentVersionsParamsWithHTTPClient creates a new QueryPinnableContentVersionsParams object
// with the ability to set a custom HTTPClient for a request.
func NewQueryPinnableContentVersionsParamsWithHTTPClient(client *http.Client) *QueryPinnableContentVersionsParams {
	return &QueryPinnableContentVersionsParams{
		HTTPClient: client,
	}
}

/*
QueryPinnableContentVersionsParams contains all the parameters to send to the API endpoint

	for the query pinnable content versions operation.

	Typically these are written to a http.Request.
*/
type QueryPinnableContentVersionsParams struct {

	/* Category.

	   Content category
	*/
	Category string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the query pinnable content versions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *QueryPinnableContentVersionsParams) WithDefaults() *QueryPinnableContentVersionsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the query pinnable content versions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *QueryPinnableContentVersionsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the query pinnable content versions params
func (o *QueryPinnableContentVersionsParams) WithTimeout(timeout time.Duration) *QueryPinnableContentVersionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the query pinnable content versions params
func (o *QueryPinnableContentVersionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the query pinnable content versions params
func (o *QueryPinnableContentVersionsParams) WithContext(ctx context.Context) *QueryPinnableContentVersionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the query pinnable content versions params
func (o *QueryPinnableContentVersionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the query pinnable content versions params
func (o *QueryPinnableContentVersionsParams) WithHTTPClient(client *http.Client) *QueryPinnableContentVersionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the query pinnable content versions params
func (o *QueryPinnableContentVersionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCategory adds the category to the query pinnable content versions params
func (o *QueryPinnableContentVersionsParams) WithCategory(category string) *QueryPinnableContentVersionsParams {
	o.SetCategory(category)
	return o
}

// SetCategory adds the category to the query pinnable content versions params
func (o *QueryPinnableContentVersionsParams) SetCategory(category string) {
	o.Category = category
}

// WriteToRequest writes these params to a swagger request
func (o *QueryPinnableContentVersionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param category
	qrCategory := o.Category
	qCategory := qrCategory
	if qCategory != "" {

		if err := r.SetQueryParam("category", qCategory); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
