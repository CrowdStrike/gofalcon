// Code generated by go-swagger; DO NOT EDIT.

package foundry_logscale

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListViewsParams creates a new ListViewsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListViewsParams() *ListViewsParams {
	return &ListViewsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListViewsParamsWithTimeout creates a new ListViewsParams object
// with the ability to set a timeout on a request.
func NewListViewsParamsWithTimeout(timeout time.Duration) *ListViewsParams {
	return &ListViewsParams{
		timeout: timeout,
	}
}

// NewListViewsParamsWithContext creates a new ListViewsParams object
// with the ability to set a context for a request.
func NewListViewsParamsWithContext(ctx context.Context) *ListViewsParams {
	return &ListViewsParams{
		Context: ctx,
	}
}

// NewListViewsParamsWithHTTPClient creates a new ListViewsParams object
// with the ability to set a custom HTTPClient for a request.
func NewListViewsParamsWithHTTPClient(client *http.Client) *ListViewsParams {
	return &ListViewsParams{
		HTTPClient: client,
	}
}

/*
ListViewsParams contains all the parameters to send to the API endpoint

	for the list views operation.

	Typically these are written to a http.Request.
*/
type ListViewsParams struct {

	/* CheckTestData.

	   Include whether test data is present in the application repository
	*/
	CheckTestData *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list views params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListViewsParams) WithDefaults() *ListViewsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list views params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListViewsParams) SetDefaults() {
	var (
		checkTestDataDefault = bool(false)
	)

	val := ListViewsParams{
		CheckTestData: &checkTestDataDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the list views params
func (o *ListViewsParams) WithTimeout(timeout time.Duration) *ListViewsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list views params
func (o *ListViewsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list views params
func (o *ListViewsParams) WithContext(ctx context.Context) *ListViewsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list views params
func (o *ListViewsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list views params
func (o *ListViewsParams) WithHTTPClient(client *http.Client) *ListViewsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list views params
func (o *ListViewsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCheckTestData adds the checkTestData to the list views params
func (o *ListViewsParams) WithCheckTestData(checkTestData *bool) *ListViewsParams {
	o.SetCheckTestData(checkTestData)
	return o
}

// SetCheckTestData adds the checkTestData to the list views params
func (o *ListViewsParams) SetCheckTestData(checkTestData *bool) {
	o.CheckTestData = checkTestData
}

// WriteToRequest writes these params to a swagger request
func (o *ListViewsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CheckTestData != nil {

		// query param check_test_data
		var qrCheckTestData bool

		if o.CheckTestData != nil {
			qrCheckTestData = *o.CheckTestData
		}
		qCheckTestData := swag.FormatBool(qrCheckTestData)
		if qCheckTestData != "" {

			if err := r.SetQueryParam("check_test_data", qCheckTestData); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
