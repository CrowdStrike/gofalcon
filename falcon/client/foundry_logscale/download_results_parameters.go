// Code generated by go-swagger; DO NOT EDIT.

package foundry_logscale

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDownloadResultsParams creates a new DownloadResultsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDownloadResultsParams() *DownloadResultsParams {
	return &DownloadResultsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDownloadResultsParamsWithTimeout creates a new DownloadResultsParams object
// with the ability to set a timeout on a request.
func NewDownloadResultsParamsWithTimeout(timeout time.Duration) *DownloadResultsParams {
	return &DownloadResultsParams{
		timeout: timeout,
	}
}

// NewDownloadResultsParamsWithContext creates a new DownloadResultsParams object
// with the ability to set a context for a request.
func NewDownloadResultsParamsWithContext(ctx context.Context) *DownloadResultsParams {
	return &DownloadResultsParams{
		Context: ctx,
	}
}

// NewDownloadResultsParamsWithHTTPClient creates a new DownloadResultsParams object
// with the ability to set a custom HTTPClient for a request.
func NewDownloadResultsParamsWithHTTPClient(client *http.Client) *DownloadResultsParams {
	return &DownloadResultsParams{
		HTTPClient: client,
	}
}

/*
DownloadResultsParams contains all the parameters to send to the API endpoint

	for the download results operation.

	Typically these are written to a http.Request.
*/
type DownloadResultsParams struct {

	/* JobID.

	   Job ID for a previously executed async query
	*/
	JobID string

	/* ResultFormat.

	   Result Format
	*/
	ResultFormat *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the download results params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DownloadResultsParams) WithDefaults() *DownloadResultsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the download results params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DownloadResultsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the download results params
func (o *DownloadResultsParams) WithTimeout(timeout time.Duration) *DownloadResultsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the download results params
func (o *DownloadResultsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the download results params
func (o *DownloadResultsParams) WithContext(ctx context.Context) *DownloadResultsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the download results params
func (o *DownloadResultsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the download results params
func (o *DownloadResultsParams) WithHTTPClient(client *http.Client) *DownloadResultsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the download results params
func (o *DownloadResultsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithJobID adds the jobID to the download results params
func (o *DownloadResultsParams) WithJobID(jobID string) *DownloadResultsParams {
	o.SetJobID(jobID)
	return o
}

// SetJobID adds the jobId to the download results params
func (o *DownloadResultsParams) SetJobID(jobID string) {
	o.JobID = jobID
}

// WithResultFormat adds the resultFormat to the download results params
func (o *DownloadResultsParams) WithResultFormat(resultFormat *string) *DownloadResultsParams {
	o.SetResultFormat(resultFormat)
	return o
}

// SetResultFormat adds the resultFormat to the download results params
func (o *DownloadResultsParams) SetResultFormat(resultFormat *string) {
	o.ResultFormat = resultFormat
}

// WriteToRequest writes these params to a swagger request
func (o *DownloadResultsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param job_id
	qrJobID := o.JobID
	qJobID := qrJobID
	if qJobID != "" {

		if err := r.SetQueryParam("job_id", qJobID); err != nil {
			return err
		}
	}

	if o.ResultFormat != nil {

		// query param result_format
		var qrResultFormat string

		if o.ResultFormat != nil {
			qrResultFormat = *o.ResultFormat
		}
		qResultFormat := qrResultFormat
		if qResultFormat != "" {

			if err := r.SetQueryParam("result_format", qResultFormat); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
