// Code generated by go-swagger; DO NOT EDIT.

package d4c_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// GetDiscoverCloudAzureUserScriptsAttachmentReader is a Reader for the GetDiscoverCloudAzureUserScriptsAttachment structure.
type GetDiscoverCloudAzureUserScriptsAttachmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDiscoverCloudAzureUserScriptsAttachmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDiscoverCloudAzureUserScriptsAttachmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDiscoverCloudAzureUserScriptsAttachmentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDiscoverCloudAzureUserScriptsAttachmentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDiscoverCloudAzureUserScriptsAttachmentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cloud-connect-azure/entities/user-scripts-download/v1] GetDiscoverCloudAzureUserScriptsAttachment", response, response.Code())
	}
}

// NewGetDiscoverCloudAzureUserScriptsAttachmentOK creates a GetDiscoverCloudAzureUserScriptsAttachmentOK with default headers values
func NewGetDiscoverCloudAzureUserScriptsAttachmentOK() *GetDiscoverCloudAzureUserScriptsAttachmentOK {
	return &GetDiscoverCloudAzureUserScriptsAttachmentOK{}
}

/*
GetDiscoverCloudAzureUserScriptsAttachmentOK describes a response with status code 200, with default header values.

OK
*/
type GetDiscoverCloudAzureUserScriptsAttachmentOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationAzureProvisionGetUserScriptResponseV1
}

// IsSuccess returns true when this get discover cloud azure user scripts attachment o k response has a 2xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get discover cloud azure user scripts attachment o k response has a 3xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get discover cloud azure user scripts attachment o k response has a 4xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get discover cloud azure user scripts attachment o k response has a 5xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get discover cloud azure user scripts attachment o k response a status code equal to that given
func (o *GetDiscoverCloudAzureUserScriptsAttachmentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get discover cloud azure user scripts attachment o k response
func (o *GetDiscoverCloudAzureUserScriptsAttachmentOK) Code() int {
	return 200
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentOK) Error() string {
	return fmt.Sprintf("[GET /cloud-connect-azure/entities/user-scripts-download/v1][%d] getDiscoverCloudAzureUserScriptsAttachmentOK  %+v", 200, o.Payload)
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentOK) String() string {
	return fmt.Sprintf("[GET /cloud-connect-azure/entities/user-scripts-download/v1][%d] getDiscoverCloudAzureUserScriptsAttachmentOK  %+v", 200, o.Payload)
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentOK) GetPayload() *models.RegistrationAzureProvisionGetUserScriptResponseV1 {
	return o.Payload
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationAzureProvisionGetUserScriptResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiscoverCloudAzureUserScriptsAttachmentBadRequest creates a GetDiscoverCloudAzureUserScriptsAttachmentBadRequest with default headers values
func NewGetDiscoverCloudAzureUserScriptsAttachmentBadRequest() *GetDiscoverCloudAzureUserScriptsAttachmentBadRequest {
	return &GetDiscoverCloudAzureUserScriptsAttachmentBadRequest{}
}

/*
GetDiscoverCloudAzureUserScriptsAttachmentBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDiscoverCloudAzureUserScriptsAttachmentBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationAzureProvisionGetUserScriptResponseV1
}

// IsSuccess returns true when this get discover cloud azure user scripts attachment bad request response has a 2xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get discover cloud azure user scripts attachment bad request response has a 3xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get discover cloud azure user scripts attachment bad request response has a 4xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get discover cloud azure user scripts attachment bad request response has a 5xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get discover cloud azure user scripts attachment bad request response a status code equal to that given
func (o *GetDiscoverCloudAzureUserScriptsAttachmentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get discover cloud azure user scripts attachment bad request response
func (o *GetDiscoverCloudAzureUserScriptsAttachmentBadRequest) Code() int {
	return 400
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentBadRequest) Error() string {
	return fmt.Sprintf("[GET /cloud-connect-azure/entities/user-scripts-download/v1][%d] getDiscoverCloudAzureUserScriptsAttachmentBadRequest  %+v", 400, o.Payload)
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentBadRequest) String() string {
	return fmt.Sprintf("[GET /cloud-connect-azure/entities/user-scripts-download/v1][%d] getDiscoverCloudAzureUserScriptsAttachmentBadRequest  %+v", 400, o.Payload)
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentBadRequest) GetPayload() *models.RegistrationAzureProvisionGetUserScriptResponseV1 {
	return o.Payload
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationAzureProvisionGetUserScriptResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiscoverCloudAzureUserScriptsAttachmentForbidden creates a GetDiscoverCloudAzureUserScriptsAttachmentForbidden with default headers values
func NewGetDiscoverCloudAzureUserScriptsAttachmentForbidden() *GetDiscoverCloudAzureUserScriptsAttachmentForbidden {
	return &GetDiscoverCloudAzureUserScriptsAttachmentForbidden{}
}

/*
GetDiscoverCloudAzureUserScriptsAttachmentForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDiscoverCloudAzureUserScriptsAttachmentForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this get discover cloud azure user scripts attachment forbidden response has a 2xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get discover cloud azure user scripts attachment forbidden response has a 3xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get discover cloud azure user scripts attachment forbidden response has a 4xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get discover cloud azure user scripts attachment forbidden response has a 5xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get discover cloud azure user scripts attachment forbidden response a status code equal to that given
func (o *GetDiscoverCloudAzureUserScriptsAttachmentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get discover cloud azure user scripts attachment forbidden response
func (o *GetDiscoverCloudAzureUserScriptsAttachmentForbidden) Code() int {
	return 403
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentForbidden) Error() string {
	return fmt.Sprintf("[GET /cloud-connect-azure/entities/user-scripts-download/v1][%d] getDiscoverCloudAzureUserScriptsAttachmentForbidden  %+v", 403, o.Payload)
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentForbidden) String() string {
	return fmt.Sprintf("[GET /cloud-connect-azure/entities/user-scripts-download/v1][%d] getDiscoverCloudAzureUserScriptsAttachmentForbidden  %+v", 403, o.Payload)
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests creates a GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests with default headers values
func NewGetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests() *GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests {
	return &GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests{}
}

/*
GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this get discover cloud azure user scripts attachment too many requests response has a 2xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get discover cloud azure user scripts attachment too many requests response has a 3xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get discover cloud azure user scripts attachment too many requests response has a 4xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get discover cloud azure user scripts attachment too many requests response has a 5xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get discover cloud azure user scripts attachment too many requests response a status code equal to that given
func (o *GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get discover cloud azure user scripts attachment too many requests response
func (o *GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests) Code() int {
	return 429
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /cloud-connect-azure/entities/user-scripts-download/v1][%d] getDiscoverCloudAzureUserScriptsAttachmentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests) String() string {
	return fmt.Sprintf("[GET /cloud-connect-azure/entities/user-scripts-download/v1][%d] getDiscoverCloudAzureUserScriptsAttachmentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDiscoverCloudAzureUserScriptsAttachmentInternalServerError creates a GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError with default headers values
func NewGetDiscoverCloudAzureUserScriptsAttachmentInternalServerError() *GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError {
	return &GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError{}
}

/*
GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.RegistrationAzureProvisionGetUserScriptResponseV1
}

// IsSuccess returns true when this get discover cloud azure user scripts attachment internal server error response has a 2xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get discover cloud azure user scripts attachment internal server error response has a 3xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get discover cloud azure user scripts attachment internal server error response has a 4xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get discover cloud azure user scripts attachment internal server error response has a 5xx status code
func (o *GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get discover cloud azure user scripts attachment internal server error response a status code equal to that given
func (o *GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get discover cloud azure user scripts attachment internal server error response
func (o *GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError) Code() int {
	return 500
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cloud-connect-azure/entities/user-scripts-download/v1][%d] getDiscoverCloudAzureUserScriptsAttachmentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError) String() string {
	return fmt.Sprintf("[GET /cloud-connect-azure/entities/user-scripts-download/v1][%d] getDiscoverCloudAzureUserScriptsAttachmentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError) GetPayload() *models.RegistrationAzureProvisionGetUserScriptResponseV1 {
	return o.Payload
}

func (o *GetDiscoverCloudAzureUserScriptsAttachmentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.RegistrationAzureProvisionGetUserScriptResponseV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
