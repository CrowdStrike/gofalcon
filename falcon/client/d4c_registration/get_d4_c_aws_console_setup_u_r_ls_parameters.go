// Code generated by go-swagger; DO NOT EDIT.

package d4c_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetD4CAwsConsoleSetupURLsParams creates a new GetD4CAwsConsoleSetupURLsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetD4CAwsConsoleSetupURLsParams() *GetD4CAwsConsoleSetupURLsParams {
	return &GetD4CAwsConsoleSetupURLsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetD4CAwsConsoleSetupURLsParamsWithTimeout creates a new GetD4CAwsConsoleSetupURLsParams object
// with the ability to set a timeout on a request.
func NewGetD4CAwsConsoleSetupURLsParamsWithTimeout(timeout time.Duration) *GetD4CAwsConsoleSetupURLsParams {
	return &GetD4CAwsConsoleSetupURLsParams{
		timeout: timeout,
	}
}

// NewGetD4CAwsConsoleSetupURLsParamsWithContext creates a new GetD4CAwsConsoleSetupURLsParams object
// with the ability to set a context for a request.
func NewGetD4CAwsConsoleSetupURLsParamsWithContext(ctx context.Context) *GetD4CAwsConsoleSetupURLsParams {
	return &GetD4CAwsConsoleSetupURLsParams{
		Context: ctx,
	}
}

// NewGetD4CAwsConsoleSetupURLsParamsWithHTTPClient creates a new GetD4CAwsConsoleSetupURLsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetD4CAwsConsoleSetupURLsParamsWithHTTPClient(client *http.Client) *GetD4CAwsConsoleSetupURLsParams {
	return &GetD4CAwsConsoleSetupURLsParams{
		HTTPClient: client,
	}
}

/*
GetD4CAwsConsoleSetupURLsParams contains all the parameters to send to the API endpoint

	for the get d4 c aws console setup u r ls operation.

	Typically these are written to a http.Request.
*/
type GetD4CAwsConsoleSetupURLsParams struct {

	/* Region.

	   Region
	*/
	Region *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get d4 c aws console setup u r ls params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetD4CAwsConsoleSetupURLsParams) WithDefaults() *GetD4CAwsConsoleSetupURLsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get d4 c aws console setup u r ls params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetD4CAwsConsoleSetupURLsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get d4 c aws console setup u r ls params
func (o *GetD4CAwsConsoleSetupURLsParams) WithTimeout(timeout time.Duration) *GetD4CAwsConsoleSetupURLsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get d4 c aws console setup u r ls params
func (o *GetD4CAwsConsoleSetupURLsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get d4 c aws console setup u r ls params
func (o *GetD4CAwsConsoleSetupURLsParams) WithContext(ctx context.Context) *GetD4CAwsConsoleSetupURLsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get d4 c aws console setup u r ls params
func (o *GetD4CAwsConsoleSetupURLsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get d4 c aws console setup u r ls params
func (o *GetD4CAwsConsoleSetupURLsParams) WithHTTPClient(client *http.Client) *GetD4CAwsConsoleSetupURLsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get d4 c aws console setup u r ls params
func (o *GetD4CAwsConsoleSetupURLsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRegion adds the region to the get d4 c aws console setup u r ls params
func (o *GetD4CAwsConsoleSetupURLsParams) WithRegion(region *string) *GetD4CAwsConsoleSetupURLsParams {
	o.SetRegion(region)
	return o
}

// SetRegion adds the region to the get d4 c aws console setup u r ls params
func (o *GetD4CAwsConsoleSetupURLsParams) SetRegion(region *string) {
	o.Region = region
}

// WriteToRequest writes these params to a swagger request
func (o *GetD4CAwsConsoleSetupURLsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Region != nil {

		// query param region
		var qrRegion string

		if o.Region != nil {
			qrRegion = *o.Region
		}
		qRegion := qrRegion
		if qRegion != "" {

			if err := r.SetQueryParam("region", qRegion); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
