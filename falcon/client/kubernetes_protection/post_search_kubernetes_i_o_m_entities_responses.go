// Code generated by go-swagger; DO NOT EDIT.

package kubernetes_protection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// PostSearchKubernetesIOMEntitiesReader is a Reader for the PostSearchKubernetesIOMEntities structure.
type PostSearchKubernetesIOMEntitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSearchKubernetesIOMEntitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSearchKubernetesIOMEntitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSearchKubernetesIOMEntitiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostSearchKubernetesIOMEntitiesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostSearchKubernetesIOMEntitiesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSearchKubernetesIOMEntitiesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /container-security/combined/kubernetes-ioms/search/v1] PostSearchKubernetesIOMEntities", response, response.Code())
	}
}

// NewPostSearchKubernetesIOMEntitiesOK creates a PostSearchKubernetesIOMEntitiesOK with default headers values
func NewPostSearchKubernetesIOMEntitiesOK() *PostSearchKubernetesIOMEntitiesOK {
	return &PostSearchKubernetesIOMEntitiesOK{}
}

/*
PostSearchKubernetesIOMEntitiesOK describes a response with status code 200, with default header values.

OK
*/
type PostSearchKubernetesIOMEntitiesOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.K8siomsSearchResult
}

// IsSuccess returns true when this post search kubernetes i o m entities o k response has a 2xx status code
func (o *PostSearchKubernetesIOMEntitiesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post search kubernetes i o m entities o k response has a 3xx status code
func (o *PostSearchKubernetesIOMEntitiesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post search kubernetes i o m entities o k response has a 4xx status code
func (o *PostSearchKubernetesIOMEntitiesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post search kubernetes i o m entities o k response has a 5xx status code
func (o *PostSearchKubernetesIOMEntitiesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post search kubernetes i o m entities o k response a status code equal to that given
func (o *PostSearchKubernetesIOMEntitiesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post search kubernetes i o m entities o k response
func (o *PostSearchKubernetesIOMEntitiesOK) Code() int {
	return 200
}

func (o *PostSearchKubernetesIOMEntitiesOK) Error() string {
	return fmt.Sprintf("[POST /container-security/combined/kubernetes-ioms/search/v1][%d] postSearchKubernetesIOMEntitiesOK  %+v", 200, o.Payload)
}

func (o *PostSearchKubernetesIOMEntitiesOK) String() string {
	return fmt.Sprintf("[POST /container-security/combined/kubernetes-ioms/search/v1][%d] postSearchKubernetesIOMEntitiesOK  %+v", 200, o.Payload)
}

func (o *PostSearchKubernetesIOMEntitiesOK) GetPayload() *models.K8siomsSearchResult {
	return o.Payload
}

func (o *PostSearchKubernetesIOMEntitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.K8siomsSearchResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSearchKubernetesIOMEntitiesBadRequest creates a PostSearchKubernetesIOMEntitiesBadRequest with default headers values
func NewPostSearchKubernetesIOMEntitiesBadRequest() *PostSearchKubernetesIOMEntitiesBadRequest {
	return &PostSearchKubernetesIOMEntitiesBadRequest{}
}

/*
PostSearchKubernetesIOMEntitiesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostSearchKubernetesIOMEntitiesBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.CoreEntitiesResponse
}

// IsSuccess returns true when this post search kubernetes i o m entities bad request response has a 2xx status code
func (o *PostSearchKubernetesIOMEntitiesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post search kubernetes i o m entities bad request response has a 3xx status code
func (o *PostSearchKubernetesIOMEntitiesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post search kubernetes i o m entities bad request response has a 4xx status code
func (o *PostSearchKubernetesIOMEntitiesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post search kubernetes i o m entities bad request response has a 5xx status code
func (o *PostSearchKubernetesIOMEntitiesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post search kubernetes i o m entities bad request response a status code equal to that given
func (o *PostSearchKubernetesIOMEntitiesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post search kubernetes i o m entities bad request response
func (o *PostSearchKubernetesIOMEntitiesBadRequest) Code() int {
	return 400
}

func (o *PostSearchKubernetesIOMEntitiesBadRequest) Error() string {
	return fmt.Sprintf("[POST /container-security/combined/kubernetes-ioms/search/v1][%d] postSearchKubernetesIOMEntitiesBadRequest  %+v", 400, o.Payload)
}

func (o *PostSearchKubernetesIOMEntitiesBadRequest) String() string {
	return fmt.Sprintf("[POST /container-security/combined/kubernetes-ioms/search/v1][%d] postSearchKubernetesIOMEntitiesBadRequest  %+v", 400, o.Payload)
}

func (o *PostSearchKubernetesIOMEntitiesBadRequest) GetPayload() *models.CoreEntitiesResponse {
	return o.Payload
}

func (o *PostSearchKubernetesIOMEntitiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.CoreEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSearchKubernetesIOMEntitiesForbidden creates a PostSearchKubernetesIOMEntitiesForbidden with default headers values
func NewPostSearchKubernetesIOMEntitiesForbidden() *PostSearchKubernetesIOMEntitiesForbidden {
	return &PostSearchKubernetesIOMEntitiesForbidden{}
}

/*
PostSearchKubernetesIOMEntitiesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostSearchKubernetesIOMEntitiesForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this post search kubernetes i o m entities forbidden response has a 2xx status code
func (o *PostSearchKubernetesIOMEntitiesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post search kubernetes i o m entities forbidden response has a 3xx status code
func (o *PostSearchKubernetesIOMEntitiesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post search kubernetes i o m entities forbidden response has a 4xx status code
func (o *PostSearchKubernetesIOMEntitiesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post search kubernetes i o m entities forbidden response has a 5xx status code
func (o *PostSearchKubernetesIOMEntitiesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post search kubernetes i o m entities forbidden response a status code equal to that given
func (o *PostSearchKubernetesIOMEntitiesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post search kubernetes i o m entities forbidden response
func (o *PostSearchKubernetesIOMEntitiesForbidden) Code() int {
	return 403
}

func (o *PostSearchKubernetesIOMEntitiesForbidden) Error() string {
	return fmt.Sprintf("[POST /container-security/combined/kubernetes-ioms/search/v1][%d] postSearchKubernetesIOMEntitiesForbidden  %+v", 403, o.Payload)
}

func (o *PostSearchKubernetesIOMEntitiesForbidden) String() string {
	return fmt.Sprintf("[POST /container-security/combined/kubernetes-ioms/search/v1][%d] postSearchKubernetesIOMEntitiesForbidden  %+v", 403, o.Payload)
}

func (o *PostSearchKubernetesIOMEntitiesForbidden) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *PostSearchKubernetesIOMEntitiesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSearchKubernetesIOMEntitiesTooManyRequests creates a PostSearchKubernetesIOMEntitiesTooManyRequests with default headers values
func NewPostSearchKubernetesIOMEntitiesTooManyRequests() *PostSearchKubernetesIOMEntitiesTooManyRequests {
	return &PostSearchKubernetesIOMEntitiesTooManyRequests{}
}

/*
PostSearchKubernetesIOMEntitiesTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type PostSearchKubernetesIOMEntitiesTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this post search kubernetes i o m entities too many requests response has a 2xx status code
func (o *PostSearchKubernetesIOMEntitiesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post search kubernetes i o m entities too many requests response has a 3xx status code
func (o *PostSearchKubernetesIOMEntitiesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post search kubernetes i o m entities too many requests response has a 4xx status code
func (o *PostSearchKubernetesIOMEntitiesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this post search kubernetes i o m entities too many requests response has a 5xx status code
func (o *PostSearchKubernetesIOMEntitiesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this post search kubernetes i o m entities too many requests response a status code equal to that given
func (o *PostSearchKubernetesIOMEntitiesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the post search kubernetes i o m entities too many requests response
func (o *PostSearchKubernetesIOMEntitiesTooManyRequests) Code() int {
	return 429
}

func (o *PostSearchKubernetesIOMEntitiesTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /container-security/combined/kubernetes-ioms/search/v1][%d] postSearchKubernetesIOMEntitiesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostSearchKubernetesIOMEntitiesTooManyRequests) String() string {
	return fmt.Sprintf("[POST /container-security/combined/kubernetes-ioms/search/v1][%d] postSearchKubernetesIOMEntitiesTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostSearchKubernetesIOMEntitiesTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *PostSearchKubernetesIOMEntitiesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSearchKubernetesIOMEntitiesInternalServerError creates a PostSearchKubernetesIOMEntitiesInternalServerError with default headers values
func NewPostSearchKubernetesIOMEntitiesInternalServerError() *PostSearchKubernetesIOMEntitiesInternalServerError {
	return &PostSearchKubernetesIOMEntitiesInternalServerError{}
}

/*
PostSearchKubernetesIOMEntitiesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostSearchKubernetesIOMEntitiesInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.CoreEntitiesResponse
}

// IsSuccess returns true when this post search kubernetes i o m entities internal server error response has a 2xx status code
func (o *PostSearchKubernetesIOMEntitiesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post search kubernetes i o m entities internal server error response has a 3xx status code
func (o *PostSearchKubernetesIOMEntitiesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post search kubernetes i o m entities internal server error response has a 4xx status code
func (o *PostSearchKubernetesIOMEntitiesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post search kubernetes i o m entities internal server error response has a 5xx status code
func (o *PostSearchKubernetesIOMEntitiesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post search kubernetes i o m entities internal server error response a status code equal to that given
func (o *PostSearchKubernetesIOMEntitiesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post search kubernetes i o m entities internal server error response
func (o *PostSearchKubernetesIOMEntitiesInternalServerError) Code() int {
	return 500
}

func (o *PostSearchKubernetesIOMEntitiesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /container-security/combined/kubernetes-ioms/search/v1][%d] postSearchKubernetesIOMEntitiesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSearchKubernetesIOMEntitiesInternalServerError) String() string {
	return fmt.Sprintf("[POST /container-security/combined/kubernetes-ioms/search/v1][%d] postSearchKubernetesIOMEntitiesInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSearchKubernetesIOMEntitiesInternalServerError) GetPayload() *models.CoreEntitiesResponse {
	return o.Payload
}

func (o *PostSearchKubernetesIOMEntitiesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.CoreEntitiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
