// Code generated by go-swagger; DO NOT EDIT.

package cloud_oci_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new cloud oci registration API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for cloud oci registration API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CloudSecurityRegistrationOciCreateAccount(params *CloudSecurityRegistrationOciCreateAccountParams, opts ...ClientOption) (*CloudSecurityRegistrationOciCreateAccountCreated, *CloudSecurityRegistrationOciCreateAccountMultiStatus, error)

	CloudSecurityRegistrationOciDeleteAccount(params *CloudSecurityRegistrationOciDeleteAccountParams, opts ...ClientOption) (*CloudSecurityRegistrationOciDeleteAccountOK, *CloudSecurityRegistrationOciDeleteAccountMultiStatus, error)

	CloudSecurityRegistrationOciDownloadScript(params *CloudSecurityRegistrationOciDownloadScriptParams, opts ...ClientOption) (*CloudSecurityRegistrationOciDownloadScriptOK, error)

	CloudSecurityRegistrationOciGetAccount(params *CloudSecurityRegistrationOciGetAccountParams, opts ...ClientOption) (*CloudSecurityRegistrationOciGetAccountOK, *CloudSecurityRegistrationOciGetAccountNoContent, *CloudSecurityRegistrationOciGetAccountMultiStatus, error)

	CloudSecurityRegistrationOciRotateKey(params *CloudSecurityRegistrationOciRotateKeyParams, opts ...ClientOption) (*CloudSecurityRegistrationOciRotateKeyCreated, *CloudSecurityRegistrationOciRotateKeyMultiStatus, error)

	CloudSecurityRegistrationOciUpdateAccount(params *CloudSecurityRegistrationOciUpdateAccountParams, opts ...ClientOption) (*CloudSecurityRegistrationOciUpdateAccountCreated, *CloudSecurityRegistrationOciUpdateAccountMultiStatus, error)

	CloudSecurityRegistrationOciValidateTenancy(params *CloudSecurityRegistrationOciValidateTenancyParams, opts ...ClientOption) (*CloudSecurityRegistrationOciValidateTenancyOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CloudSecurityRegistrationOciCreateAccount creates o c i tenancy account in c s p m
*/
func (a *Client) CloudSecurityRegistrationOciCreateAccount(params *CloudSecurityRegistrationOciCreateAccountParams, opts ...ClientOption) (*CloudSecurityRegistrationOciCreateAccountCreated, *CloudSecurityRegistrationOciCreateAccountMultiStatus, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCloudSecurityRegistrationOciCreateAccountParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "cloud-security-registration-oci-create-account",
		Method:             "POST",
		PathPattern:        "/cloud-security-registration-oci/entities/accounts/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CloudSecurityRegistrationOciCreateAccountReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CloudSecurityRegistrationOciCreateAccountCreated:
		return value, nil, nil
	case *CloudSecurityRegistrationOciCreateAccountMultiStatus:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cloud_oci_registration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CloudSecurityRegistrationOciDeleteAccount deletes an existing o c i tenancy in c s p m
*/
func (a *Client) CloudSecurityRegistrationOciDeleteAccount(params *CloudSecurityRegistrationOciDeleteAccountParams, opts ...ClientOption) (*CloudSecurityRegistrationOciDeleteAccountOK, *CloudSecurityRegistrationOciDeleteAccountMultiStatus, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCloudSecurityRegistrationOciDeleteAccountParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "cloud-security-registration-oci-delete-account",
		Method:             "DELETE",
		PathPattern:        "/cloud-security-registration-oci/entities/accounts/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CloudSecurityRegistrationOciDeleteAccountReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CloudSecurityRegistrationOciDeleteAccountOK:
		return value, nil, nil
	case *CloudSecurityRegistrationOciDeleteAccountMultiStatus:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cloud_oci_registration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CloudSecurityRegistrationOciDownloadScript retrieves script to create resources in tenancy o c ID
*/
func (a *Client) CloudSecurityRegistrationOciDownloadScript(params *CloudSecurityRegistrationOciDownloadScriptParams, opts ...ClientOption) (*CloudSecurityRegistrationOciDownloadScriptOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCloudSecurityRegistrationOciDownloadScriptParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "cloud-security-registration-oci-download-script",
		Method:             "POST",
		PathPattern:        "/cloud-security-registration-oci/entities/scripts/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CloudSecurityRegistrationOciDownloadScriptReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CloudSecurityRegistrationOciDownloadScriptOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cloud-security-registration-oci-download-script: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CloudSecurityRegistrationOciGetAccount retrieves a list of o c i tenancies with support for f q l filtering sorting and pagination
*/
func (a *Client) CloudSecurityRegistrationOciGetAccount(params *CloudSecurityRegistrationOciGetAccountParams, opts ...ClientOption) (*CloudSecurityRegistrationOciGetAccountOK, *CloudSecurityRegistrationOciGetAccountNoContent, *CloudSecurityRegistrationOciGetAccountMultiStatus, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCloudSecurityRegistrationOciGetAccountParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "cloud-security-registration-oci-get-account",
		Method:             "GET",
		PathPattern:        "/cloud-security-registration-oci/combined/accounts/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CloudSecurityRegistrationOciGetAccountReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, nil, err
	}
	switch value := result.(type) {
	case *CloudSecurityRegistrationOciGetAccountOK:
		return value, nil, nil, nil
	case *CloudSecurityRegistrationOciGetAccountNoContent:
		return nil, value, nil, nil
	case *CloudSecurityRegistrationOciGetAccountMultiStatus:
		return nil, nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cloud_oci_registration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CloudSecurityRegistrationOciRotateKey refreshes key for the o c i tenancy
*/
func (a *Client) CloudSecurityRegistrationOciRotateKey(params *CloudSecurityRegistrationOciRotateKeyParams, opts ...ClientOption) (*CloudSecurityRegistrationOciRotateKeyCreated, *CloudSecurityRegistrationOciRotateKeyMultiStatus, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCloudSecurityRegistrationOciRotateKeyParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "cloud-security-registration-oci-rotate-key",
		Method:             "POST",
		PathPattern:        "/cloud-security-registration-oci/entities/account-rotate-keys/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CloudSecurityRegistrationOciRotateKeyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CloudSecurityRegistrationOciRotateKeyCreated:
		return value, nil, nil
	case *CloudSecurityRegistrationOciRotateKeyMultiStatus:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cloud_oci_registration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CloudSecurityRegistrationOciUpdateAccount patches an existing o c i account in our system for a customer
*/
func (a *Client) CloudSecurityRegistrationOciUpdateAccount(params *CloudSecurityRegistrationOciUpdateAccountParams, opts ...ClientOption) (*CloudSecurityRegistrationOciUpdateAccountCreated, *CloudSecurityRegistrationOciUpdateAccountMultiStatus, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCloudSecurityRegistrationOciUpdateAccountParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "cloud-security-registration-oci-update-account",
		Method:             "PATCH",
		PathPattern:        "/cloud-security-registration-oci/entities/accounts/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CloudSecurityRegistrationOciUpdateAccountReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CloudSecurityRegistrationOciUpdateAccountCreated:
		return value, nil, nil
	case *CloudSecurityRegistrationOciUpdateAccountMultiStatus:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cloud_oci_registration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CloudSecurityRegistrationOciValidateTenancy validates the o c i account in c s p m for a provided c ID for internal clients only
*/
func (a *Client) CloudSecurityRegistrationOciValidateTenancy(params *CloudSecurityRegistrationOciValidateTenancyParams, opts ...ClientOption) (*CloudSecurityRegistrationOciValidateTenancyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCloudSecurityRegistrationOciValidateTenancyParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "cloud-security-registration-oci-validate-tenancy",
		Method:             "POST",
		PathPattern:        "/cloud-security-registration-oci/entities/account-validate/v1",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CloudSecurityRegistrationOciValidateTenancyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CloudSecurityRegistrationOciValidateTenancyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cloud-security-registration-oci-validate-tenancy: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
