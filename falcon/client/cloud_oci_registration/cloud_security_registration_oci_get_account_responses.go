// Code generated by go-swagger; DO NOT EDIT.

package cloud_oci_registration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/crowdstrike/gofalcon/falcon/models"
)

// CloudSecurityRegistrationOciGetAccountReader is a Reader for the CloudSecurityRegistrationOciGetAccount structure.
type CloudSecurityRegistrationOciGetAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudSecurityRegistrationOciGetAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudSecurityRegistrationOciGetAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewCloudSecurityRegistrationOciGetAccountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 207:
		result := NewCloudSecurityRegistrationOciGetAccountMultiStatus()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloudSecurityRegistrationOciGetAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCloudSecurityRegistrationOciGetAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloudSecurityRegistrationOciGetAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCloudSecurityRegistrationOciGetAccountTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudSecurityRegistrationOciGetAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cloud-security-registration-oci/combined/accounts/v1] cloud-security-registration-oci-get-account", response, response.Code())
	}
}

// NewCloudSecurityRegistrationOciGetAccountOK creates a CloudSecurityRegistrationOciGetAccountOK with default headers values
func NewCloudSecurityRegistrationOciGetAccountOK() *CloudSecurityRegistrationOciGetAccountOK {
	return &CloudSecurityRegistrationOciGetAccountOK{}
}

/*
CloudSecurityRegistrationOciGetAccountOK describes a response with status code 200, with default header values.

OK
*/
type CloudSecurityRegistrationOciGetAccountOK struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.DomainOCITenancyResponseExtV1
}

// IsSuccess returns true when this cloud security registration oci get account o k response has a 2xx status code
func (o *CloudSecurityRegistrationOciGetAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud security registration oci get account o k response has a 3xx status code
func (o *CloudSecurityRegistrationOciGetAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security registration oci get account o k response has a 4xx status code
func (o *CloudSecurityRegistrationOciGetAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud security registration oci get account o k response has a 5xx status code
func (o *CloudSecurityRegistrationOciGetAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security registration oci get account o k response a status code equal to that given
func (o *CloudSecurityRegistrationOciGetAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cloud security registration oci get account o k response
func (o *CloudSecurityRegistrationOciGetAccountOK) Code() int {
	return 200
}

func (o *CloudSecurityRegistrationOciGetAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountOK %s", 200, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountOK %s", 200, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountOK) GetPayload() *models.DomainOCITenancyResponseExtV1 {
	return o.Payload
}

func (o *CloudSecurityRegistrationOciGetAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.DomainOCITenancyResponseExtV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityRegistrationOciGetAccountNoContent creates a CloudSecurityRegistrationOciGetAccountNoContent with default headers values
func NewCloudSecurityRegistrationOciGetAccountNoContent() *CloudSecurityRegistrationOciGetAccountNoContent {
	return &CloudSecurityRegistrationOciGetAccountNoContent{}
}

/*
CloudSecurityRegistrationOciGetAccountNoContent describes a response with status code 204, with default header values.

No Content
*/
type CloudSecurityRegistrationOciGetAccountNoContent struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.DomainOCITenancyResponseExtV1
}

// IsSuccess returns true when this cloud security registration oci get account no content response has a 2xx status code
func (o *CloudSecurityRegistrationOciGetAccountNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud security registration oci get account no content response has a 3xx status code
func (o *CloudSecurityRegistrationOciGetAccountNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security registration oci get account no content response has a 4xx status code
func (o *CloudSecurityRegistrationOciGetAccountNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud security registration oci get account no content response has a 5xx status code
func (o *CloudSecurityRegistrationOciGetAccountNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security registration oci get account no content response a status code equal to that given
func (o *CloudSecurityRegistrationOciGetAccountNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the cloud security registration oci get account no content response
func (o *CloudSecurityRegistrationOciGetAccountNoContent) Code() int {
	return 204
}

func (o *CloudSecurityRegistrationOciGetAccountNoContent) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountNoContent %s", 204, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountNoContent) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountNoContent %s", 204, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountNoContent) GetPayload() *models.DomainOCITenancyResponseExtV1 {
	return o.Payload
}

func (o *CloudSecurityRegistrationOciGetAccountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.DomainOCITenancyResponseExtV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityRegistrationOciGetAccountMultiStatus creates a CloudSecurityRegistrationOciGetAccountMultiStatus with default headers values
func NewCloudSecurityRegistrationOciGetAccountMultiStatus() *CloudSecurityRegistrationOciGetAccountMultiStatus {
	return &CloudSecurityRegistrationOciGetAccountMultiStatus{}
}

/*
CloudSecurityRegistrationOciGetAccountMultiStatus describes a response with status code 207, with default header values.

Multi-Status
*/
type CloudSecurityRegistrationOciGetAccountMultiStatus struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.DomainOCITenancyResponseExtV1
}

// IsSuccess returns true when this cloud security registration oci get account multi status response has a 2xx status code
func (o *CloudSecurityRegistrationOciGetAccountMultiStatus) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud security registration oci get account multi status response has a 3xx status code
func (o *CloudSecurityRegistrationOciGetAccountMultiStatus) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security registration oci get account multi status response has a 4xx status code
func (o *CloudSecurityRegistrationOciGetAccountMultiStatus) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud security registration oci get account multi status response has a 5xx status code
func (o *CloudSecurityRegistrationOciGetAccountMultiStatus) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security registration oci get account multi status response a status code equal to that given
func (o *CloudSecurityRegistrationOciGetAccountMultiStatus) IsCode(code int) bool {
	return code == 207
}

// Code gets the status code for the cloud security registration oci get account multi status response
func (o *CloudSecurityRegistrationOciGetAccountMultiStatus) Code() int {
	return 207
}

func (o *CloudSecurityRegistrationOciGetAccountMultiStatus) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountMultiStatus %s", 207, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountMultiStatus) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountMultiStatus %s", 207, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountMultiStatus) GetPayload() *models.DomainOCITenancyResponseExtV1 {
	return o.Payload
}

func (o *CloudSecurityRegistrationOciGetAccountMultiStatus) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.DomainOCITenancyResponseExtV1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityRegistrationOciGetAccountBadRequest creates a CloudSecurityRegistrationOciGetAccountBadRequest with default headers values
func NewCloudSecurityRegistrationOciGetAccountBadRequest() *CloudSecurityRegistrationOciGetAccountBadRequest {
	return &CloudSecurityRegistrationOciGetAccountBadRequest{}
}

/*
CloudSecurityRegistrationOciGetAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloudSecurityRegistrationOciGetAccountBadRequest struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud security registration oci get account bad request response has a 2xx status code
func (o *CloudSecurityRegistrationOciGetAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud security registration oci get account bad request response has a 3xx status code
func (o *CloudSecurityRegistrationOciGetAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security registration oci get account bad request response has a 4xx status code
func (o *CloudSecurityRegistrationOciGetAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud security registration oci get account bad request response has a 5xx status code
func (o *CloudSecurityRegistrationOciGetAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security registration oci get account bad request response a status code equal to that given
func (o *CloudSecurityRegistrationOciGetAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cloud security registration oci get account bad request response
func (o *CloudSecurityRegistrationOciGetAccountBadRequest) Code() int {
	return 400
}

func (o *CloudSecurityRegistrationOciGetAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountBadRequest %s", 400, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountBadRequest %s", 400, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountBadRequest) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudSecurityRegistrationOciGetAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityRegistrationOciGetAccountUnauthorized creates a CloudSecurityRegistrationOciGetAccountUnauthorized with default headers values
func NewCloudSecurityRegistrationOciGetAccountUnauthorized() *CloudSecurityRegistrationOciGetAccountUnauthorized {
	return &CloudSecurityRegistrationOciGetAccountUnauthorized{}
}

/*
CloudSecurityRegistrationOciGetAccountUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CloudSecurityRegistrationOciGetAccountUnauthorized struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud security registration oci get account unauthorized response has a 2xx status code
func (o *CloudSecurityRegistrationOciGetAccountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud security registration oci get account unauthorized response has a 3xx status code
func (o *CloudSecurityRegistrationOciGetAccountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security registration oci get account unauthorized response has a 4xx status code
func (o *CloudSecurityRegistrationOciGetAccountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud security registration oci get account unauthorized response has a 5xx status code
func (o *CloudSecurityRegistrationOciGetAccountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security registration oci get account unauthorized response a status code equal to that given
func (o *CloudSecurityRegistrationOciGetAccountUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the cloud security registration oci get account unauthorized response
func (o *CloudSecurityRegistrationOciGetAccountUnauthorized) Code() int {
	return 401
}

func (o *CloudSecurityRegistrationOciGetAccountUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountUnauthorized %s", 401, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountUnauthorized %s", 401, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountUnauthorized) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudSecurityRegistrationOciGetAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityRegistrationOciGetAccountForbidden creates a CloudSecurityRegistrationOciGetAccountForbidden with default headers values
func NewCloudSecurityRegistrationOciGetAccountForbidden() *CloudSecurityRegistrationOciGetAccountForbidden {
	return &CloudSecurityRegistrationOciGetAccountForbidden{}
}

/*
CloudSecurityRegistrationOciGetAccountForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloudSecurityRegistrationOciGetAccountForbidden struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud security registration oci get account forbidden response has a 2xx status code
func (o *CloudSecurityRegistrationOciGetAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud security registration oci get account forbidden response has a 3xx status code
func (o *CloudSecurityRegistrationOciGetAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security registration oci get account forbidden response has a 4xx status code
func (o *CloudSecurityRegistrationOciGetAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud security registration oci get account forbidden response has a 5xx status code
func (o *CloudSecurityRegistrationOciGetAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security registration oci get account forbidden response a status code equal to that given
func (o *CloudSecurityRegistrationOciGetAccountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cloud security registration oci get account forbidden response
func (o *CloudSecurityRegistrationOciGetAccountForbidden) Code() int {
	return 403
}

func (o *CloudSecurityRegistrationOciGetAccountForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountForbidden %s", 403, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountForbidden %s", 403, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountForbidden) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudSecurityRegistrationOciGetAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityRegistrationOciGetAccountTooManyRequests creates a CloudSecurityRegistrationOciGetAccountTooManyRequests with default headers values
func NewCloudSecurityRegistrationOciGetAccountTooManyRequests() *CloudSecurityRegistrationOciGetAccountTooManyRequests {
	return &CloudSecurityRegistrationOciGetAccountTooManyRequests{}
}

/*
CloudSecurityRegistrationOciGetAccountTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CloudSecurityRegistrationOciGetAccountTooManyRequests struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	/* Too many requests, retry after this time (as milliseconds since epoch)
	 */
	XRateLimitRetryAfter int64

	Payload *models.MsaReplyMetaOnly
}

// IsSuccess returns true when this cloud security registration oci get account too many requests response has a 2xx status code
func (o *CloudSecurityRegistrationOciGetAccountTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud security registration oci get account too many requests response has a 3xx status code
func (o *CloudSecurityRegistrationOciGetAccountTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security registration oci get account too many requests response has a 4xx status code
func (o *CloudSecurityRegistrationOciGetAccountTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud security registration oci get account too many requests response has a 5xx status code
func (o *CloudSecurityRegistrationOciGetAccountTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud security registration oci get account too many requests response a status code equal to that given
func (o *CloudSecurityRegistrationOciGetAccountTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the cloud security registration oci get account too many requests response
func (o *CloudSecurityRegistrationOciGetAccountTooManyRequests) Code() int {
	return 429
}

func (o *CloudSecurityRegistrationOciGetAccountTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountTooManyRequests %s", 429, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountTooManyRequests %s", 429, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountTooManyRequests) GetPayload() *models.MsaReplyMetaOnly {
	return o.Payload
}

func (o *CloudSecurityRegistrationOciGetAccountTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	// hydrates response header X-RateLimit-RetryAfter
	hdrXRateLimitRetryAfter := response.GetHeader("X-RateLimit-RetryAfter")

	if hdrXRateLimitRetryAfter != "" {
		valxRateLimitRetryAfter, err := swag.ConvertInt64(hdrXRateLimitRetryAfter)
		if err != nil {
			return errors.InvalidType("X-RateLimit-RetryAfter", "header", "int64", hdrXRateLimitRetryAfter)
		}
		o.XRateLimitRetryAfter = valxRateLimitRetryAfter
	}

	o.Payload = new(models.MsaReplyMetaOnly)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudSecurityRegistrationOciGetAccountInternalServerError creates a CloudSecurityRegistrationOciGetAccountInternalServerError with default headers values
func NewCloudSecurityRegistrationOciGetAccountInternalServerError() *CloudSecurityRegistrationOciGetAccountInternalServerError {
	return &CloudSecurityRegistrationOciGetAccountInternalServerError{}
}

/*
CloudSecurityRegistrationOciGetAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CloudSecurityRegistrationOciGetAccountInternalServerError struct {

	/* Trace-ID: submit to support if resolving an issue
	 */
	XCSTRACEID string

	/* Request limit per minute.
	 */
	XRateLimitLimit int64

	/* The number of requests remaining for the sliding one minute window.
	 */
	XRateLimitRemaining int64

	Payload *models.MsaspecResponseFields
}

// IsSuccess returns true when this cloud security registration oci get account internal server error response has a 2xx status code
func (o *CloudSecurityRegistrationOciGetAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud security registration oci get account internal server error response has a 3xx status code
func (o *CloudSecurityRegistrationOciGetAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud security registration oci get account internal server error response has a 4xx status code
func (o *CloudSecurityRegistrationOciGetAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud security registration oci get account internal server error response has a 5xx status code
func (o *CloudSecurityRegistrationOciGetAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud security registration oci get account internal server error response a status code equal to that given
func (o *CloudSecurityRegistrationOciGetAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cloud security registration oci get account internal server error response
func (o *CloudSecurityRegistrationOciGetAccountInternalServerError) Code() int {
	return 500
}

func (o *CloudSecurityRegistrationOciGetAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountInternalServerError %s", 500, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cloud-security-registration-oci/combined/accounts/v1][%d] cloudSecurityRegistrationOciGetAccountInternalServerError %s", 500, payload)
}

func (o *CloudSecurityRegistrationOciGetAccountInternalServerError) GetPayload() *models.MsaspecResponseFields {
	return o.Payload
}

func (o *CloudSecurityRegistrationOciGetAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-CS-TRACEID
	hdrXCSTRACEID := response.GetHeader("X-CS-TRACEID")

	if hdrXCSTRACEID != "" {
		o.XCSTRACEID = hdrXCSTRACEID
	}

	// hydrates response header X-RateLimit-Limit
	hdrXRateLimitLimit := response.GetHeader("X-RateLimit-Limit")

	if hdrXRateLimitLimit != "" {
		valxRateLimitLimit, err := swag.ConvertInt64(hdrXRateLimitLimit)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Limit", "header", "int64", hdrXRateLimitLimit)
		}
		o.XRateLimitLimit = valxRateLimitLimit
	}

	// hydrates response header X-RateLimit-Remaining
	hdrXRateLimitRemaining := response.GetHeader("X-RateLimit-Remaining")

	if hdrXRateLimitRemaining != "" {
		valxRateLimitRemaining, err := swag.ConvertInt64(hdrXRateLimitRemaining)
		if err != nil {
			return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", hdrXRateLimitRemaining)
		}
		o.XRateLimitRemaining = valxRateLimitRemaining
	}

	o.Payload = new(models.MsaspecResponseFields)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
